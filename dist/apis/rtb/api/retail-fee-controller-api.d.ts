import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { GetContrFeeInfo } from '../model';
import { GetContrInfoOut } from '../model';
import { GetContrInfoToFeeOut } from '../model';
import { GetRetailFeeInfoListOut } from '../model';
import { GetRetailFeeInfoOneOut } from '../model';
import { PagingGetFeeListOut } from '../model';
import { PatchFeeInfoIn } from '../model';
import { PatchSavingInfoIn } from '../model';
import { PostFeeInfoIn } from '../model';
import { PostSavingInfoIn } from '../model';
import { Resource } from '../model';
export declare const RetailFeeControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    deleteRetailFeeInfo: (authorization: string, contrId: string, feeId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteRetailSavingInfo: (authorization: string, feeId: string, seq: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getRetailContrFeeList: (authorization: string, contrId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getRetailContrInfoList: (authorization: string, contrId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getRetailContrInfoOfSavingStat: (authorization: string, contrId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getRetailContrInfoOne: (authorization: string, clnId?: string, contrId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getRetailFeeInfoList: (authorization: string, contrId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getRetailFeeInfoOne: (authorization: string, contrId?: string, feeId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getRetailFeePaging: (authorization: string, clnName?: string, contrId?: string, feeId?: string, feePymtAgrmtYn?: string, maxBalancePmtDy?: string, maxContrDy?: string, maxSavingDueDy?: string, maxSavingDy?: string, maxTaxinvDueDy?: string, maxTaxinvIssDy?: string, maxVatTotalFeeAmt?: number, minBalancePmtDy?: string, minContrDy?: string, minSavingDueDy?: string, minSavingDy?: string, minTaxinvDueDy?: string, minTaxinvIssDy?: string, minVatTotalFeeAmt?: number, orderBy?: string, pageNum?: number, pageSize?: number, savingStatCd?: Array<string>, savingYn?: string, taxinvIssStatCd?: Array<string>, taxinvIssYn?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchRetailFeeInfo: (authorization: string, contrId: string, feeId: string, input: PatchFeeInfoIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchRetailFeeSavingStat: (authorization: string, contrId: string, savingFeeStatCd: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchRetailSavingInfo: (authorization: string, feeId: string, seq: number, input: PatchSavingInfoIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postRetailFeeInfo: (authorization: string, contrId: string, input: PostFeeInfoIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postRetailSavingInfo: (authorization: string, feeId: string, input: PostSavingInfoIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectRetailFeeListDownloadExcel: (authorization: string, clnName?: string, contrId?: string, feeId?: string, feePymtAgrmtYn?: string, maxBalancePmtDy?: string, maxContrDy?: string, maxSavingDueDy?: string, maxSavingDy?: string, maxTaxinvDueDy?: string, maxTaxinvIssDy?: string, maxVatTotalFeeAmt?: number, minBalancePmtDy?: string, minContrDy?: string, minSavingDueDy?: string, minSavingDy?: string, minTaxinvDueDy?: string, minTaxinvIssDy?: string, minVatTotalFeeAmt?: number, orderBy?: string, pageNum?: number, pageSize?: number, savingStatCd?: Array<string>, savingYn?: string, taxinvIssStatCd?: Array<string>, taxinvIssYn?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
export declare const RetailFeeControllerApiFp: (configuration?: Configuration) => {
    deleteRetailFeeInfo(authorization: string, contrId: string, feeId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    deleteRetailSavingInfo(authorization: string, feeId: string, seq: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    getRetailContrFeeList(authorization: string, contrId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetContrFeeInfo>>>;
    getRetailContrInfoList(authorization: string, contrId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetContrInfoOut>>>;
    getRetailContrInfoOfSavingStat(authorization: string, contrId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetContrInfoToFeeOut>>;
    getRetailContrInfoOne(authorization: string, clnId?: string, contrId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetContrInfoOut>>;
    getRetailFeeInfoList(authorization: string, contrId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetRetailFeeInfoListOut>>>;
    getRetailFeeInfoOne(authorization: string, contrId?: string, feeId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetRetailFeeInfoOneOut>>;
    getRetailFeePaging(authorization: string, clnName?: string, contrId?: string, feeId?: string, feePymtAgrmtYn?: string, maxBalancePmtDy?: string, maxContrDy?: string, maxSavingDueDy?: string, maxSavingDy?: string, maxTaxinvDueDy?: string, maxTaxinvIssDy?: string, maxVatTotalFeeAmt?: number, minBalancePmtDy?: string, minContrDy?: string, minSavingDueDy?: string, minSavingDy?: string, minTaxinvDueDy?: string, minTaxinvIssDy?: string, minVatTotalFeeAmt?: number, orderBy?: string, pageNum?: number, pageSize?: number, savingStatCd?: Array<string>, savingYn?: string, taxinvIssStatCd?: Array<string>, taxinvIssYn?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetFeeListOut>>;
    patchRetailFeeInfo(authorization: string, contrId: string, feeId: string, input: PatchFeeInfoIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    patchRetailFeeSavingStat(authorization: string, contrId: string, savingFeeStatCd: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    patchRetailSavingInfo(authorization: string, feeId: string, seq: number, input: PatchSavingInfoIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postRetailFeeInfo(authorization: string, contrId: string, input: PostFeeInfoIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postRetailSavingInfo(authorization: string, feeId: string, input: PostSavingInfoIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    selectRetailFeeListDownloadExcel(authorization: string, clnName?: string, contrId?: string, feeId?: string, feePymtAgrmtYn?: string, maxBalancePmtDy?: string, maxContrDy?: string, maxSavingDueDy?: string, maxSavingDy?: string, maxTaxinvDueDy?: string, maxTaxinvIssDy?: string, maxVatTotalFeeAmt?: number, minBalancePmtDy?: string, minContrDy?: string, minSavingDueDy?: string, minSavingDy?: string, minTaxinvDueDy?: string, minTaxinvIssDy?: string, minVatTotalFeeAmt?: number, orderBy?: string, pageNum?: number, pageSize?: number, savingStatCd?: Array<string>, savingYn?: string, taxinvIssStatCd?: Array<string>, taxinvIssYn?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Resource>>;
};
export declare const RetailFeeControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    deleteRetailFeeInfo(authorization: string, contrId: string, feeId: string, options?: any): AxiosPromise<number>;
    deleteRetailSavingInfo(authorization: string, feeId: string, seq: number, options?: any): AxiosPromise<number>;
    getRetailContrFeeList(authorization: string, contrId?: string, options?: any): AxiosPromise<Array<GetContrFeeInfo>>;
    getRetailContrInfoList(authorization: string, contrId?: string, options?: any): AxiosPromise<Array<GetContrInfoOut>>;
    getRetailContrInfoOfSavingStat(authorization: string, contrId?: string, options?: any): AxiosPromise<GetContrInfoToFeeOut>;
    getRetailContrInfoOne(authorization: string, clnId?: string, contrId?: string, options?: any): AxiosPromise<GetContrInfoOut>;
    getRetailFeeInfoList(authorization: string, contrId?: string, options?: any): AxiosPromise<Array<GetRetailFeeInfoListOut>>;
    getRetailFeeInfoOne(authorization: string, contrId?: string, feeId?: string, options?: any): AxiosPromise<GetRetailFeeInfoOneOut>;
    getRetailFeePaging(authorization: string, clnName?: string, contrId?: string, feeId?: string, feePymtAgrmtYn?: string, maxBalancePmtDy?: string, maxContrDy?: string, maxSavingDueDy?: string, maxSavingDy?: string, maxTaxinvDueDy?: string, maxTaxinvIssDy?: string, maxVatTotalFeeAmt?: number, minBalancePmtDy?: string, minContrDy?: string, minSavingDueDy?: string, minSavingDy?: string, minTaxinvDueDy?: string, minTaxinvIssDy?: string, minVatTotalFeeAmt?: number, orderBy?: string, pageNum?: number, pageSize?: number, savingStatCd?: Array<string>, savingYn?: string, taxinvIssStatCd?: Array<string>, taxinvIssYn?: string, options?: any): AxiosPromise<PagingGetFeeListOut>;
    patchRetailFeeInfo(authorization: string, contrId: string, feeId: string, input: PatchFeeInfoIn, options?: any): AxiosPromise<number>;
    patchRetailFeeSavingStat(authorization: string, contrId: string, savingFeeStatCd: string, options?: any): AxiosPromise<number>;
    patchRetailSavingInfo(authorization: string, feeId: string, seq: number, input: PatchSavingInfoIn, options?: any): AxiosPromise<number>;
    postRetailFeeInfo(authorization: string, contrId: string, input: PostFeeInfoIn, options?: any): AxiosPromise<number>;
    postRetailSavingInfo(authorization: string, feeId: string, input: PostSavingInfoIn, options?: any): AxiosPromise<number>;
    selectRetailFeeListDownloadExcel(authorization: string, clnName?: string, contrId?: string, feeId?: string, feePymtAgrmtYn?: string, maxBalancePmtDy?: string, maxContrDy?: string, maxSavingDueDy?: string, maxSavingDy?: string, maxTaxinvDueDy?: string, maxTaxinvIssDy?: string, maxVatTotalFeeAmt?: number, minBalancePmtDy?: string, minContrDy?: string, minSavingDueDy?: string, minSavingDy?: string, minTaxinvDueDy?: string, minTaxinvIssDy?: string, minVatTotalFeeAmt?: number, orderBy?: string, pageNum?: number, pageSize?: number, savingStatCd?: Array<string>, savingYn?: string, taxinvIssStatCd?: Array<string>, taxinvIssYn?: string, options?: any): AxiosPromise<Resource>;
};
export declare class RetailFeeControllerApi extends BaseAPI {
    deleteRetailFeeInfo(authorization: string, contrId: string, feeId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    deleteRetailSavingInfo(authorization: string, feeId: string, seq: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    getRetailContrFeeList(authorization: string, contrId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetContrFeeInfo[], any>>;
    getRetailContrInfoList(authorization: string, contrId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetContrInfoOut[], any>>;
    getRetailContrInfoOfSavingStat(authorization: string, contrId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetContrInfoToFeeOut, any>>;
    getRetailContrInfoOne(authorization: string, clnId?: string, contrId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetContrInfoOut, any>>;
    getRetailFeeInfoList(authorization: string, contrId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetRetailFeeInfoListOut[], any>>;
    getRetailFeeInfoOne(authorization: string, contrId?: string, feeId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetRetailFeeInfoOneOut, any>>;
    getRetailFeePaging(authorization: string, clnName?: string, contrId?: string, feeId?: string, feePymtAgrmtYn?: string, maxBalancePmtDy?: string, maxContrDy?: string, maxSavingDueDy?: string, maxSavingDy?: string, maxTaxinvDueDy?: string, maxTaxinvIssDy?: string, maxVatTotalFeeAmt?: number, minBalancePmtDy?: string, minContrDy?: string, minSavingDueDy?: string, minSavingDy?: string, minTaxinvDueDy?: string, minTaxinvIssDy?: string, minVatTotalFeeAmt?: number, orderBy?: string, pageNum?: number, pageSize?: number, savingStatCd?: Array<string>, savingYn?: string, taxinvIssStatCd?: Array<string>, taxinvIssYn?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetFeeListOut, any>>;
    patchRetailFeeInfo(authorization: string, contrId: string, feeId: string, input: PatchFeeInfoIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    patchRetailFeeSavingStat(authorization: string, contrId: string, savingFeeStatCd: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    patchRetailSavingInfo(authorization: string, feeId: string, seq: number, input: PatchSavingInfoIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postRetailFeeInfo(authorization: string, contrId: string, input: PostFeeInfoIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postRetailSavingInfo(authorization: string, feeId: string, input: PostSavingInfoIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    selectRetailFeeListDownloadExcel(authorization: string, clnName?: string, contrId?: string, feeId?: string, feePymtAgrmtYn?: string, maxBalancePmtDy?: string, maxContrDy?: string, maxSavingDueDy?: string, maxSavingDy?: string, maxTaxinvDueDy?: string, maxTaxinvIssDy?: string, maxVatTotalFeeAmt?: number, minBalancePmtDy?: string, minContrDy?: string, minSavingDueDy?: string, minSavingDy?: string, minTaxinvDueDy?: string, minTaxinvIssDy?: string, minVatTotalFeeAmt?: number, orderBy?: string, pageNum?: number, pageSize?: number, savingStatCd?: Array<string>, savingYn?: string, taxinvIssStatCd?: Array<string>, taxinvIssYn?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Resource, any>>;
}
