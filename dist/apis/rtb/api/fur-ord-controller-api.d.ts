import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { DeleteOrdCln } from '../model';
import { DeleteOrdCus } from '../model';
import { DeleteOrdDeal } from '../model';
import { DeleteOrdDtlInfo } from '../model';
import { FurOrdMst } from '../model';
import { GetBrdListOut } from '../model';
import { GetOrdClnOut } from '../model';
import { GetOrdDealOut } from '../model';
import { GetOrdDetailOut } from '../model';
import { GetOrdDtlByListOut } from '../model';
import { GetOrdSumOut } from '../model';
import { GtdTaskTgtRel } from '../model';
import { PagingGetOrdDealOut } from '../model';
import { PagingGetOrdModalListOut } from '../model';
import { PagingGetOrdOut } from '../model';
import { PatchAllOfNoteCtn } from '../model';
import { PatchEtcAmtCtn } from '../model';
import { PatchFurDtlToFurInfo } from '../model';
import { PatchOrdBasicIn } from '../model';
import { PatchOrdClnIn } from '../model';
import { PatchOrdCus } from '../model';
import { PatchOrdDtl } from '../model';
import { PatchOrdDtlDispSeq } from '../model';
import { PatchOrdTaskRel } from '../model';
import { PatchOrderHst } from '../model';
import { PatchPayYn } from '../model';
import { PostOrdCus } from '../model';
import { PostOrdDtlFileInfo } from '../model';
import { PostOrdDtlInfo } from '../model';
import { PostOrdIn } from '../model';
import { Resource } from '../model';
export declare const FurOrdControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    deleteAllOfOrdInfo: (authorization: string, ordId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteOrdCln: (authorization: string, ordId: string, input: DeleteOrdCln, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteOrdCus: (authorization: string, ordId: string, input: DeleteOrdCus, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteOrdDtlInfo: (authorization: string, ordId: string, input: DeleteOrdDtlInfo, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteOrdTaskRel: (authorization: string, ordId: string, input: DeleteOrdDeal, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getBrdList: (authorization: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getOrdClnCus: (authorization: string, ordId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getOrdDealList: (authorization: string, ordId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getOrdDealModal: (authorization: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, searchCf?: string, searchName?: string, searchVal?: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getOrdDealPaging: (authorization: string, clnName?: string, ordId?: string, orderBy?: string, pageNum?: number, pageSize?: number, taskCfCd?: string, taskId?: string, taskName?: string, taskRegDy?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getOrdDtlInfosByOrdId: (authorization: string, ordId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getOrdModalList: (authorization: string, ordId?: string, orderBy?: string, pageNum?: number, pageSize?: number, searchCf?: string, searchVal?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getOrdOne: (authorization: string, ordId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getOrdPaging: (authorization: string, clnId?: string, clnName?: string, maxDlvrDy?: string, maxOrdFixDy?: string, maxRegDy?: string, maxTodoDy?: string, maxTotalSalesAmt?: number, minDlvrDy?: string, minOrdFixDy?: string, minRegDy?: string, minTodoDy?: string, minTotalSalesAmt?: number, mptb?: Array<string>, ordId?: string, ordName?: string, ordProgressCd?: Array<string>, ordRoutCd?: Array<string>, ordTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, savingFeeStatCd?: Array<string>, taskId?: string, userId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getOrdSum: (authorization: string, clnId?: string, clnName?: string, maxDlvrDy?: string, maxOrdFixDy?: string, maxRegDy?: string, maxTodoDy?: string, maxTotalSalesAmt?: number, minDlvrDy?: string, minOrdFixDy?: string, minRegDy?: string, minTodoDy?: string, minTotalSalesAmt?: number, mptb?: Array<string>, ordId?: string, ordName?: string, ordProgressCd?: Array<string>, ordRoutCd?: Array<string>, ordTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, savingFeeStatCd?: Array<string>, taskId?: string, userId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchAllOfNoteCtn: (authorization: string, ordId: string, input: PatchAllOfNoteCtn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchClnToOrd: (authorization: string, ordId: string, input: PatchOrdClnIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchEtcAmtCtn: (authorization: string, ordId: string, input: PatchEtcAmtCtn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchOrdBasicInfo: (authorization: string, ordId: string, input: PatchOrdBasicIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchOrdCus: (authorization: string, ordId: string, input: PatchOrdCus, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchOrdDtl: (authorization: string, input: PatchOrdDtl, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchOrdDtlDispSeq: (authorization: string, ordId: string, input: Array<PatchOrdDtlDispSeq>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchOrdDtlOne: (authorization: string, ordId: string, seq: number, input: PostOrdDtlInfo, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchOrdTaskRel: (authorization: string, ordId: string, input: PatchOrdTaskRel, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchOrderHst: (authorization: string, ordId: string, input: PatchOrderHst, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchPayYn: (authorization: string, ordId: string, input: PatchPayYn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postFurCopyToOrd: (authorization: string, furId: string, ordId: string, input: PatchFurDtlToFurInfo, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postOrdCus: (authorization: string, ordId: string, input: PostOrdCus, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postOrdDtlFileUpload: (authorization: string, brdName: string, ordId: string, input: Array<PostOrdDtlFileInfo>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postOrdDtlOne: (authorization: string, ordId: string, input: PostOrdDtlInfo, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postOrder: (authorization: string, input: PostOrdIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectFurOrdInfoDownloadExcel: (authorization: string, clnId?: string, clnName?: string, maxDlvrDy?: string, maxOrdFixDy?: string, maxRegDy?: string, maxTodoDy?: string, maxTotalSalesAmt?: number, minDlvrDy?: string, minOrdFixDy?: string, minRegDy?: string, minTodoDy?: string, minTotalSalesAmt?: number, mptb?: Array<string>, ordId?: string, ordName?: string, ordProgressCd?: Array<string>, ordRoutCd?: Array<string>, ordTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, savingFeeStatCd?: Array<string>, taskId?: string, userId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
export declare const FurOrdControllerApiFp: (configuration?: Configuration) => {
    deleteAllOfOrdInfo(authorization: string, ordId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    deleteOrdCln(authorization: string, ordId: string, input: DeleteOrdCln, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    deleteOrdCus(authorization: string, ordId: string, input: DeleteOrdCus, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    deleteOrdDtlInfo(authorization: string, ordId: string, input: DeleteOrdDtlInfo, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    deleteOrdTaskRel(authorization: string, ordId: string, input: DeleteOrdDeal, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    getBrdList(authorization: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetBrdListOut>>>;
    getOrdClnCus(authorization: string, ordId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetOrdClnOut>>;
    getOrdDealList(authorization: string, ordId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetOrdDealOut>>>;
    getOrdDealModal(authorization: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, searchCf?: string, searchName?: string, searchVal?: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetOrdDealOut>>;
    getOrdDealPaging(authorization: string, clnName?: string, ordId?: string, orderBy?: string, pageNum?: number, pageSize?: number, taskCfCd?: string, taskId?: string, taskName?: string, taskRegDy?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetOrdDealOut>>;
    getOrdDtlInfosByOrdId(authorization: string, ordId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetOrdDtlByListOut>>>;
    getOrdModalList(authorization: string, ordId?: string, orderBy?: string, pageNum?: number, pageSize?: number, searchCf?: string, searchVal?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetOrdModalListOut>>;
    getOrdOne(authorization: string, ordId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetOrdDetailOut>>;
    getOrdPaging(authorization: string, clnId?: string, clnName?: string, maxDlvrDy?: string, maxOrdFixDy?: string, maxRegDy?: string, maxTodoDy?: string, maxTotalSalesAmt?: number, minDlvrDy?: string, minOrdFixDy?: string, minRegDy?: string, minTodoDy?: string, minTotalSalesAmt?: number, mptb?: Array<string>, ordId?: string, ordName?: string, ordProgressCd?: Array<string>, ordRoutCd?: Array<string>, ordTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, savingFeeStatCd?: Array<string>, taskId?: string, userId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetOrdOut>>;
    getOrdSum(authorization: string, clnId?: string, clnName?: string, maxDlvrDy?: string, maxOrdFixDy?: string, maxRegDy?: string, maxTodoDy?: string, maxTotalSalesAmt?: number, minDlvrDy?: string, minOrdFixDy?: string, minRegDy?: string, minTodoDy?: string, minTotalSalesAmt?: number, mptb?: Array<string>, ordId?: string, ordName?: string, ordProgressCd?: Array<string>, ordRoutCd?: Array<string>, ordTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, savingFeeStatCd?: Array<string>, taskId?: string, userId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetOrdSumOut>>;
    patchAllOfNoteCtn(authorization: string, ordId: string, input: PatchAllOfNoteCtn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    patchClnToOrd(authorization: string, ordId: string, input: PatchOrdClnIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetOrdClnOut>>;
    patchEtcAmtCtn(authorization: string, ordId: string, input: PatchEtcAmtCtn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    patchOrdBasicInfo(authorization: string, ordId: string, input: PatchOrdBasicIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetOrdDetailOut>>;
    patchOrdCus(authorization: string, ordId: string, input: PatchOrdCus, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    patchOrdDtl(authorization: string, input: PatchOrdDtl, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    patchOrdDtlDispSeq(authorization: string, ordId: string, input: Array<PatchOrdDtlDispSeq>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    patchOrdDtlOne(authorization: string, ordId: string, seq: number, input: PostOrdDtlInfo, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    patchOrdTaskRel(authorization: string, ordId: string, input: PatchOrdTaskRel, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GtdTaskTgtRel>>>;
    patchOrderHst(authorization: string, ordId: string, input: PatchOrderHst, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    patchPayYn(authorization: string, ordId: string, input: PatchPayYn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postFurCopyToOrd(authorization: string, furId: string, ordId: string, input: PatchFurDtlToFurInfo, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postOrdCus(authorization: string, ordId: string, input: PostOrdCus, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postOrdDtlFileUpload(authorization: string, brdName: string, ordId: string, input: Array<PostOrdDtlFileInfo>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postOrdDtlOne(authorization: string, ordId: string, input: PostOrdDtlInfo, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postOrder(authorization: string, input: PostOrdIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FurOrdMst>>;
    selectFurOrdInfoDownloadExcel(authorization: string, clnId?: string, clnName?: string, maxDlvrDy?: string, maxOrdFixDy?: string, maxRegDy?: string, maxTodoDy?: string, maxTotalSalesAmt?: number, minDlvrDy?: string, minOrdFixDy?: string, minRegDy?: string, minTodoDy?: string, minTotalSalesAmt?: number, mptb?: Array<string>, ordId?: string, ordName?: string, ordProgressCd?: Array<string>, ordRoutCd?: Array<string>, ordTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, savingFeeStatCd?: Array<string>, taskId?: string, userId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Resource>>;
};
export declare const FurOrdControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    deleteAllOfOrdInfo(authorization: string, ordId: string, options?: any): AxiosPromise<number>;
    deleteOrdCln(authorization: string, ordId: string, input: DeleteOrdCln, options?: any): AxiosPromise<number>;
    deleteOrdCus(authorization: string, ordId: string, input: DeleteOrdCus, options?: any): AxiosPromise<number>;
    deleteOrdDtlInfo(authorization: string, ordId: string, input: DeleteOrdDtlInfo, options?: any): AxiosPromise<number>;
    deleteOrdTaskRel(authorization: string, ordId: string, input: DeleteOrdDeal, options?: any): AxiosPromise<number>;
    getBrdList(authorization: string, options?: any): AxiosPromise<Array<GetBrdListOut>>;
    getOrdClnCus(authorization: string, ordId: string, options?: any): AxiosPromise<GetOrdClnOut>;
    getOrdDealList(authorization: string, ordId?: string, options?: any): AxiosPromise<Array<GetOrdDealOut>>;
    getOrdDealModal(authorization: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, searchCf?: string, searchName?: string, searchVal?: string, taskId?: string, options?: any): AxiosPromise<PagingGetOrdDealOut>;
    getOrdDealPaging(authorization: string, clnName?: string, ordId?: string, orderBy?: string, pageNum?: number, pageSize?: number, taskCfCd?: string, taskId?: string, taskName?: string, taskRegDy?: string, options?: any): AxiosPromise<PagingGetOrdDealOut>;
    getOrdDtlInfosByOrdId(authorization: string, ordId?: string, options?: any): AxiosPromise<Array<GetOrdDtlByListOut>>;
    getOrdModalList(authorization: string, ordId?: string, orderBy?: string, pageNum?: number, pageSize?: number, searchCf?: string, searchVal?: string, options?: any): AxiosPromise<PagingGetOrdModalListOut>;
    getOrdOne(authorization: string, ordId: string, options?: any): AxiosPromise<GetOrdDetailOut>;
    getOrdPaging(authorization: string, clnId?: string, clnName?: string, maxDlvrDy?: string, maxOrdFixDy?: string, maxRegDy?: string, maxTodoDy?: string, maxTotalSalesAmt?: number, minDlvrDy?: string, minOrdFixDy?: string, minRegDy?: string, minTodoDy?: string, minTotalSalesAmt?: number, mptb?: Array<string>, ordId?: string, ordName?: string, ordProgressCd?: Array<string>, ordRoutCd?: Array<string>, ordTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, savingFeeStatCd?: Array<string>, taskId?: string, userId?: string, options?: any): AxiosPromise<PagingGetOrdOut>;
    getOrdSum(authorization: string, clnId?: string, clnName?: string, maxDlvrDy?: string, maxOrdFixDy?: string, maxRegDy?: string, maxTodoDy?: string, maxTotalSalesAmt?: number, minDlvrDy?: string, minOrdFixDy?: string, minRegDy?: string, minTodoDy?: string, minTotalSalesAmt?: number, mptb?: Array<string>, ordId?: string, ordName?: string, ordProgressCd?: Array<string>, ordRoutCd?: Array<string>, ordTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, savingFeeStatCd?: Array<string>, taskId?: string, userId?: string, options?: any): AxiosPromise<GetOrdSumOut>;
    patchAllOfNoteCtn(authorization: string, ordId: string, input: PatchAllOfNoteCtn, options?: any): AxiosPromise<number>;
    patchClnToOrd(authorization: string, ordId: string, input: PatchOrdClnIn, options?: any): AxiosPromise<GetOrdClnOut>;
    patchEtcAmtCtn(authorization: string, ordId: string, input: PatchEtcAmtCtn, options?: any): AxiosPromise<number>;
    patchOrdBasicInfo(authorization: string, ordId: string, input: PatchOrdBasicIn, options?: any): AxiosPromise<GetOrdDetailOut>;
    patchOrdCus(authorization: string, ordId: string, input: PatchOrdCus, options?: any): AxiosPromise<number>;
    patchOrdDtl(authorization: string, input: PatchOrdDtl, options?: any): AxiosPromise<number>;
    patchOrdDtlDispSeq(authorization: string, ordId: string, input: Array<PatchOrdDtlDispSeq>, options?: any): AxiosPromise<number>;
    patchOrdDtlOne(authorization: string, ordId: string, seq: number, input: PostOrdDtlInfo, options?: any): AxiosPromise<number>;
    patchOrdTaskRel(authorization: string, ordId: string, input: PatchOrdTaskRel, options?: any): AxiosPromise<Array<GtdTaskTgtRel>>;
    patchOrderHst(authorization: string, ordId: string, input: PatchOrderHst, options?: any): AxiosPromise<number>;
    patchPayYn(authorization: string, ordId: string, input: PatchPayYn, options?: any): AxiosPromise<number>;
    postFurCopyToOrd(authorization: string, furId: string, ordId: string, input: PatchFurDtlToFurInfo, options?: any): AxiosPromise<number>;
    postOrdCus(authorization: string, ordId: string, input: PostOrdCus, options?: any): AxiosPromise<number>;
    postOrdDtlFileUpload(authorization: string, brdName: string, ordId: string, input: Array<PostOrdDtlFileInfo>, options?: any): AxiosPromise<number>;
    postOrdDtlOne(authorization: string, ordId: string, input: PostOrdDtlInfo, options?: any): AxiosPromise<number>;
    postOrder(authorization: string, input: PostOrdIn, options?: any): AxiosPromise<FurOrdMst>;
    selectFurOrdInfoDownloadExcel(authorization: string, clnId?: string, clnName?: string, maxDlvrDy?: string, maxOrdFixDy?: string, maxRegDy?: string, maxTodoDy?: string, maxTotalSalesAmt?: number, minDlvrDy?: string, minOrdFixDy?: string, minRegDy?: string, minTodoDy?: string, minTotalSalesAmt?: number, mptb?: Array<string>, ordId?: string, ordName?: string, ordProgressCd?: Array<string>, ordRoutCd?: Array<string>, ordTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, savingFeeStatCd?: Array<string>, taskId?: string, userId?: string, options?: any): AxiosPromise<Resource>;
};
export declare class FurOrdControllerApi extends BaseAPI {
    deleteAllOfOrdInfo(authorization: string, ordId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    deleteOrdCln(authorization: string, ordId: string, input: DeleteOrdCln, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    deleteOrdCus(authorization: string, ordId: string, input: DeleteOrdCus, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    deleteOrdDtlInfo(authorization: string, ordId: string, input: DeleteOrdDtlInfo, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    deleteOrdTaskRel(authorization: string, ordId: string, input: DeleteOrdDeal, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    getBrdList(authorization: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetBrdListOut[], any>>;
    getOrdClnCus(authorization: string, ordId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetOrdClnOut, any>>;
    getOrdDealList(authorization: string, ordId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetOrdDealOut[], any>>;
    getOrdDealModal(authorization: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, searchCf?: string, searchName?: string, searchVal?: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetOrdDealOut, any>>;
    getOrdDealPaging(authorization: string, clnName?: string, ordId?: string, orderBy?: string, pageNum?: number, pageSize?: number, taskCfCd?: string, taskId?: string, taskName?: string, taskRegDy?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetOrdDealOut, any>>;
    getOrdDtlInfosByOrdId(authorization: string, ordId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetOrdDtlByListOut[], any>>;
    getOrdModalList(authorization: string, ordId?: string, orderBy?: string, pageNum?: number, pageSize?: number, searchCf?: string, searchVal?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetOrdModalListOut, any>>;
    getOrdOne(authorization: string, ordId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetOrdDetailOut, any>>;
    getOrdPaging(authorization: string, clnId?: string, clnName?: string, maxDlvrDy?: string, maxOrdFixDy?: string, maxRegDy?: string, maxTodoDy?: string, maxTotalSalesAmt?: number, minDlvrDy?: string, minOrdFixDy?: string, minRegDy?: string, minTodoDy?: string, minTotalSalesAmt?: number, mptb?: Array<string>, ordId?: string, ordName?: string, ordProgressCd?: Array<string>, ordRoutCd?: Array<string>, ordTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, savingFeeStatCd?: Array<string>, taskId?: string, userId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetOrdOut, any>>;
    getOrdSum(authorization: string, clnId?: string, clnName?: string, maxDlvrDy?: string, maxOrdFixDy?: string, maxRegDy?: string, maxTodoDy?: string, maxTotalSalesAmt?: number, minDlvrDy?: string, minOrdFixDy?: string, minRegDy?: string, minTodoDy?: string, minTotalSalesAmt?: number, mptb?: Array<string>, ordId?: string, ordName?: string, ordProgressCd?: Array<string>, ordRoutCd?: Array<string>, ordTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, savingFeeStatCd?: Array<string>, taskId?: string, userId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetOrdSumOut, any>>;
    patchAllOfNoteCtn(authorization: string, ordId: string, input: PatchAllOfNoteCtn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    patchClnToOrd(authorization: string, ordId: string, input: PatchOrdClnIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetOrdClnOut, any>>;
    patchEtcAmtCtn(authorization: string, ordId: string, input: PatchEtcAmtCtn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    patchOrdBasicInfo(authorization: string, ordId: string, input: PatchOrdBasicIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetOrdDetailOut, any>>;
    patchOrdCus(authorization: string, ordId: string, input: PatchOrdCus, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    patchOrdDtl(authorization: string, input: PatchOrdDtl, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    patchOrdDtlDispSeq(authorization: string, ordId: string, input: Array<PatchOrdDtlDispSeq>, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    patchOrdDtlOne(authorization: string, ordId: string, seq: number, input: PostOrdDtlInfo, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    patchOrdTaskRel(authorization: string, ordId: string, input: PatchOrdTaskRel, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GtdTaskTgtRel[], any>>;
    patchOrderHst(authorization: string, ordId: string, input: PatchOrderHst, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    patchPayYn(authorization: string, ordId: string, input: PatchPayYn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postFurCopyToOrd(authorization: string, furId: string, ordId: string, input: PatchFurDtlToFurInfo, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postOrdCus(authorization: string, ordId: string, input: PostOrdCus, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postOrdDtlFileUpload(authorization: string, brdName: string, ordId: string, input: Array<PostOrdDtlFileInfo>, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postOrdDtlOne(authorization: string, ordId: string, input: PostOrdDtlInfo, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postOrder(authorization: string, input: PostOrdIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FurOrdMst, any>>;
    selectFurOrdInfoDownloadExcel(authorization: string, clnId?: string, clnName?: string, maxDlvrDy?: string, maxOrdFixDy?: string, maxRegDy?: string, maxTodoDy?: string, maxTotalSalesAmt?: number, minDlvrDy?: string, minOrdFixDy?: string, minRegDy?: string, minTodoDy?: string, minTotalSalesAmt?: number, mptb?: Array<string>, ordId?: string, ordName?: string, ordProgressCd?: Array<string>, ordRoutCd?: Array<string>, ordTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, savingFeeStatCd?: Array<string>, taskId?: string, userId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Resource, any>>;
}
