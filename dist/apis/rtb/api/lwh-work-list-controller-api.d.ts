import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { GetIclWorkStatusPercentOut } from '../model';
import { PagingGetLwhInfoListOut } from '../model';
import { PagingGetLwhWorkAssignOut } from '../model';
import { PatchIclWorkChangePtbIn } from '../model';
export declare const LwhWorkListControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    deleteLwhPrdWork: (authorization: string, input: Array<string>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLwhInfoIclWorkListPaging: (authorization: string, bjdCd?: Array<string>, iclTaskStatCd?: string, lwhId?: string, maxCmplDt?: string, maxRegDy?: string, minCmplDt?: string, minRegDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, ptbId?: string, rentCfCd?: Array<string>, whtypDtlId?: Array<string>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLwhInfoIclWorkPercent: (authorization: string, bjdCd?: Array<string>, iclTaskStatCd?: string, lwhId?: string, maxCmplDt?: string, maxRegDy?: string, minCmplDt?: string, minRegDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, ptbId?: string, rentCfCd?: Array<string>, whtypDtlId?: Array<string>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLwhPrdChkPercent: (authorization: string, iclTaskStatCd?: string, lowTempTypeId?: string, lwhId?: string, maxCmplDt?: string, maxLwhLastCallDy?: string, maxRegDy?: string, maxUnitChkDy?: string, minCmplDt?: string, minLwhLastCallDy?: string, minRegDy?: string, minUnitChkDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, ptbId?: string, rentCfCd?: Array<string>, whtypDtlId?: Array<string>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getPrdChkListPaging: (authorization: string, iclTaskStatCd?: string, lowTempTypeId?: string, lwhId?: string, maxCmplDt?: string, maxLwhLastCallDy?: string, maxRegDy?: string, maxUnitChkDy?: string, minCmplDt?: string, minLwhLastCallDy?: string, minRegDy?: string, minUnitChkDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, ptbId?: string, rentCfCd?: Array<string>, whtypDtlId?: Array<string>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchLwhPrdPtb: (authorization: string, input: PatchIclWorkChangePtbIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
export declare const LwhWorkListControllerApiFp: (configuration?: Configuration) => {
    deleteLwhPrdWork(authorization: string, input: Array<string>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    getLwhInfoIclWorkListPaging(authorization: string, bjdCd?: Array<string>, iclTaskStatCd?: string, lwhId?: string, maxCmplDt?: string, maxRegDy?: string, minCmplDt?: string, minRegDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, ptbId?: string, rentCfCd?: Array<string>, whtypDtlId?: Array<string>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetLwhInfoListOut>>;
    getLwhInfoIclWorkPercent(authorization: string, bjdCd?: Array<string>, iclTaskStatCd?: string, lwhId?: string, maxCmplDt?: string, maxRegDy?: string, minCmplDt?: string, minRegDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, ptbId?: string, rentCfCd?: Array<string>, whtypDtlId?: Array<string>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetIclWorkStatusPercentOut>>;
    getLwhPrdChkPercent(authorization: string, iclTaskStatCd?: string, lowTempTypeId?: string, lwhId?: string, maxCmplDt?: string, maxLwhLastCallDy?: string, maxRegDy?: string, maxUnitChkDy?: string, minCmplDt?: string, minLwhLastCallDy?: string, minRegDy?: string, minUnitChkDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, ptbId?: string, rentCfCd?: Array<string>, whtypDtlId?: Array<string>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetIclWorkStatusPercentOut>>;
    getPrdChkListPaging(authorization: string, iclTaskStatCd?: string, lowTempTypeId?: string, lwhId?: string, maxCmplDt?: string, maxLwhLastCallDy?: string, maxRegDy?: string, maxUnitChkDy?: string, minCmplDt?: string, minLwhLastCallDy?: string, minRegDy?: string, minUnitChkDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, ptbId?: string, rentCfCd?: Array<string>, whtypDtlId?: Array<string>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetLwhWorkAssignOut>>;
    patchLwhPrdPtb(authorization: string, input: PatchIclWorkChangePtbIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
export declare const LwhWorkListControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    deleteLwhPrdWork(authorization: string, input: Array<string>, options?: any): AxiosPromise<number>;
    getLwhInfoIclWorkListPaging(authorization: string, bjdCd?: Array<string>, iclTaskStatCd?: string, lwhId?: string, maxCmplDt?: string, maxRegDy?: string, minCmplDt?: string, minRegDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, ptbId?: string, rentCfCd?: Array<string>, whtypDtlId?: Array<string>, options?: any): AxiosPromise<PagingGetLwhInfoListOut>;
    getLwhInfoIclWorkPercent(authorization: string, bjdCd?: Array<string>, iclTaskStatCd?: string, lwhId?: string, maxCmplDt?: string, maxRegDy?: string, minCmplDt?: string, minRegDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, ptbId?: string, rentCfCd?: Array<string>, whtypDtlId?: Array<string>, options?: any): AxiosPromise<GetIclWorkStatusPercentOut>;
    getLwhPrdChkPercent(authorization: string, iclTaskStatCd?: string, lowTempTypeId?: string, lwhId?: string, maxCmplDt?: string, maxLwhLastCallDy?: string, maxRegDy?: string, maxUnitChkDy?: string, minCmplDt?: string, minLwhLastCallDy?: string, minRegDy?: string, minUnitChkDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, ptbId?: string, rentCfCd?: Array<string>, whtypDtlId?: Array<string>, options?: any): AxiosPromise<GetIclWorkStatusPercentOut>;
    getPrdChkListPaging(authorization: string, iclTaskStatCd?: string, lowTempTypeId?: string, lwhId?: string, maxCmplDt?: string, maxLwhLastCallDy?: string, maxRegDy?: string, maxUnitChkDy?: string, minCmplDt?: string, minLwhLastCallDy?: string, minRegDy?: string, minUnitChkDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, ptbId?: string, rentCfCd?: Array<string>, whtypDtlId?: Array<string>, options?: any): AxiosPromise<PagingGetLwhWorkAssignOut>;
    patchLwhPrdPtb(authorization: string, input: PatchIclWorkChangePtbIn, options?: any): AxiosPromise<void>;
};
export declare class LwhWorkListControllerApi extends BaseAPI {
    deleteLwhPrdWork(authorization: string, input: Array<string>, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    getLwhInfoIclWorkListPaging(authorization: string, bjdCd?: Array<string>, iclTaskStatCd?: string, lwhId?: string, maxCmplDt?: string, maxRegDy?: string, minCmplDt?: string, minRegDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, ptbId?: string, rentCfCd?: Array<string>, whtypDtlId?: Array<string>, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetLwhInfoListOut, any>>;
    getLwhInfoIclWorkPercent(authorization: string, bjdCd?: Array<string>, iclTaskStatCd?: string, lwhId?: string, maxCmplDt?: string, maxRegDy?: string, minCmplDt?: string, minRegDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, ptbId?: string, rentCfCd?: Array<string>, whtypDtlId?: Array<string>, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetIclWorkStatusPercentOut, any>>;
    getLwhPrdChkPercent(authorization: string, iclTaskStatCd?: string, lowTempTypeId?: string, lwhId?: string, maxCmplDt?: string, maxLwhLastCallDy?: string, maxRegDy?: string, maxUnitChkDy?: string, minCmplDt?: string, minLwhLastCallDy?: string, minRegDy?: string, minUnitChkDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, ptbId?: string, rentCfCd?: Array<string>, whtypDtlId?: Array<string>, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetIclWorkStatusPercentOut, any>>;
    getPrdChkListPaging(authorization: string, iclTaskStatCd?: string, lowTempTypeId?: string, lwhId?: string, maxCmplDt?: string, maxLwhLastCallDy?: string, maxRegDy?: string, maxUnitChkDy?: string, minCmplDt?: string, minLwhLastCallDy?: string, minRegDy?: string, minUnitChkDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, ptbId?: string, rentCfCd?: Array<string>, whtypDtlId?: Array<string>, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetLwhWorkAssignOut, any>>;
    patchLwhPrdPtb(authorization: string, input: PatchIclWorkChangePtbIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
}
