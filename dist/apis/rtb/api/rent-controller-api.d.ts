import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { GetLinkedWorkOut } from '../model';
import { GetMvinInfo } from '../model';
import { GetOccupCdtOut } from '../model';
import { GetRentClnCusListOut } from '../model';
import { GetRentClnIn } from '../model';
import { GetRentClnInfo } from '../model';
import { GetRentCusIn } from '../model';
import { GetRentOut } from '../model';
import { GetSalRoleOut } from '../model';
import { GtdRentCdtDtl } from '../model';
import { GtdTaskLinkRel } from '../model';
import { GtdTaskMst } from '../model';
import { GtdTaskTgtRel } from '../model';
import { PagingGetClnCusListOut } from '../model';
import { PagingGetContrListOut } from '../model';
import { PagingGetLinkedWorkOut } from '../model';
import { PagingGetOrdModalOut } from '../model';
import { PagingGetRentListOut } from '../model';
import { PatchOccupCdtModalIn } from '../model';
import { PatchOrdGtdIn } from '../model';
import { PatchRentFailResnIn } from '../model';
import { PatchRentIn } from '../model';
import { PostOrdGtdIn } from '../model';
import { PostRentIn } from '../model';
import { PostRentUrpIn } from '../model';
export declare const RentControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    delOccupCdt: (authorization: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteOrdRel: (authorization: string, ordId?: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteRent: (authorization: string, taskId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteRentClnRel: (authorization: string, clnId?: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteRentCusRel: (authorization: string, clnId?: string, cusId?: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteTaskRel: (authorization: string, chdTaskId?: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getAllDealIdList: (authorization: string, bjdCd?: Array<string>, clnId?: string, clnName?: string, dealMoveResnCd?: string, failResnCd?: string, firRentExpectLocalCd?: string, maxOnlaPy?: number, maxRentCmplDy?: string, maxRentTaskRegDy?: string, maxTipRegDy?: string, maxTodoDy?: string, minOnlaPy?: number, minRentCmplDy?: string, minRentTaskRegDy?: string, minTipRegDy?: string, minTodoDy?: string, mktDealYn?: string, nlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, ptb?: Array<string>, secRentExpectLocalCd?: string, statCd?: Array<string>, taskId?: string, taskName?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getClnCusList: (authorization: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getClnCusRelModal: (authorization: string, clnId?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getClnMvinAddr: (authorization: string, clnId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getContrList: (authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLinkedWork: (authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLinkedWorkList: (authorization: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getMyRentListPaging: (authorization: string, bjdCd?: Array<string>, clnId?: string, clnName?: string, dealMoveResnCd?: string, failResnCd?: string, firRentExpectLocalCd?: string, maxOnlaPy?: number, maxRentCmplDy?: string, maxRentTaskRegDy?: string, maxTipRegDy?: string, maxTodoDy?: string, minOnlaPy?: number, minRentCmplDy?: string, minRentTaskRegDy?: string, minTipRegDy?: string, minTodoDy?: string, mktDealYn?: string, nlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, ptb?: Array<string>, secRentExpectLocalCd?: string, statCd?: Array<string>, taskId?: string, taskName?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getOccupCdt: (authorization: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getOrdList: (authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, searchCf?: string, searchVal?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getRent: (authorization: string, taskId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getRentClnBasicInfo: (authorization: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getRentListPaging: (authorization: string, bjdCd?: Array<string>, clnId?: string, clnName?: string, dealMoveResnCd?: string, failResnCd?: string, firRentExpectLocalCd?: string, maxOnlaPy?: number, maxRentCmplDy?: string, maxRentTaskRegDy?: string, maxTipRegDy?: string, maxTodoDy?: string, minOnlaPy?: number, minRentCmplDy?: string, minRentTaskRegDy?: string, minTipRegDy?: string, minTodoDy?: string, mktDealYn?: string, nlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, ptb?: Array<string>, secRentExpectLocalCd?: string, statCd?: Array<string>, taskId?: string, taskName?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getSalAccessRole: (authorization: string, cfCd?: string, tgtId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchDealFailResn: (authorization: string, taskId: string, input: PatchRentFailResnIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchOccupCdt: (authorization: string, input: PatchOccupCdtModalIn, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchOrdRel: (authorization: string, input: PatchOrdGtdIn, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchRent: (authorization: string, taskId: string, input: PatchRentIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchRentClnRel: (authorization: string, clnId?: string, clnRelCd?: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchRentCusRel: (authorization: string, clnId?: string, cusId?: string, cusRelCd?: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchRentRel: (authorization: string, input: PostOrdGtdIn, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postRent: (authorization: string, input: PostRentIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postRentClnRel: (authorization: string, input: GetRentClnIn, dealClnRelCd?: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postRentComUmsGrpInfo: (authorization: string, cfCd: string, input: PostRentUrpIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postRentCusRel: (authorization: string, input: GetRentCusIn, clnId?: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postUmsGrpInfo: (authorization: string, input: PostRentUrpIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
export declare const RentControllerApiFp: (configuration?: Configuration) => {
    delOccupCdt(authorization: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GtdRentCdtDtl>>;
    deleteOrdRel(authorization: string, ordId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GtdTaskTgtRel>>;
    deleteRent(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GtdTaskMst>>;
    deleteRentClnRel(authorization: string, clnId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GtdTaskTgtRel>>;
    deleteRentCusRel(authorization: string, clnId?: string, cusId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GtdTaskTgtRel>>;
    deleteTaskRel(authorization: string, chdTaskId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GtdTaskLinkRel>>;
    getAllDealIdList(authorization: string, bjdCd?: Array<string>, clnId?: string, clnName?: string, dealMoveResnCd?: string, failResnCd?: string, firRentExpectLocalCd?: string, maxOnlaPy?: number, maxRentCmplDy?: string, maxRentTaskRegDy?: string, maxTipRegDy?: string, maxTodoDy?: string, minOnlaPy?: number, minRentCmplDy?: string, minRentTaskRegDy?: string, minTipRegDy?: string, minTodoDy?: string, mktDealYn?: string, nlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, ptb?: Array<string>, secRentExpectLocalCd?: string, statCd?: Array<string>, taskId?: string, taskName?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<string>>>;
    getClnCusList(authorization: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetRentClnCusListOut>>>;
    getClnCusRelModal(authorization: string, clnId?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetClnCusListOut>>;
    getClnMvinAddr(authorization: string, clnId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetMvinInfo>>>;
    getContrList(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetContrListOut>>;
    getLinkedWork(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetLinkedWorkOut>>;
    getLinkedWorkList(authorization: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetLinkedWorkOut>>>;
    getMyRentListPaging(authorization: string, bjdCd?: Array<string>, clnId?: string, clnName?: string, dealMoveResnCd?: string, failResnCd?: string, firRentExpectLocalCd?: string, maxOnlaPy?: number, maxRentCmplDy?: string, maxRentTaskRegDy?: string, maxTipRegDy?: string, maxTodoDy?: string, minOnlaPy?: number, minRentCmplDy?: string, minRentTaskRegDy?: string, minTipRegDy?: string, minTodoDy?: string, mktDealYn?: string, nlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, ptb?: Array<string>, secRentExpectLocalCd?: string, statCd?: Array<string>, taskId?: string, taskName?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetRentListOut>>;
    getOccupCdt(authorization: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetOccupCdtOut>>;
    getOrdList(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, searchCf?: string, searchVal?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetOrdModalOut>>;
    getRent(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetRentOut>>;
    getRentClnBasicInfo(authorization: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetRentClnInfo>>>;
    getRentListPaging(authorization: string, bjdCd?: Array<string>, clnId?: string, clnName?: string, dealMoveResnCd?: string, failResnCd?: string, firRentExpectLocalCd?: string, maxOnlaPy?: number, maxRentCmplDy?: string, maxRentTaskRegDy?: string, maxTipRegDy?: string, maxTodoDy?: string, minOnlaPy?: number, minRentCmplDy?: string, minRentTaskRegDy?: string, minTipRegDy?: string, minTodoDy?: string, mktDealYn?: string, nlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, ptb?: Array<string>, secRentExpectLocalCd?: string, statCd?: Array<string>, taskId?: string, taskName?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetRentListOut>>;
    getSalAccessRole(authorization: string, cfCd?: string, tgtId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetSalRoleOut>>;
    patchDealFailResn(authorization: string, taskId: string, input: PatchRentFailResnIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    patchOccupCdt(authorization: string, input: PatchOccupCdtModalIn, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GtdRentCdtDtl>>;
    patchOrdRel(authorization: string, input: PatchOrdGtdIn, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GtdTaskTgtRel>>>;
    patchRent(authorization: string, taskId: string, input: PatchRentIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GtdTaskMst>>;
    patchRentClnRel(authorization: string, clnId?: string, clnRelCd?: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GtdTaskTgtRel>>;
    patchRentCusRel(authorization: string, clnId?: string, cusId?: string, cusRelCd?: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GtdTaskTgtRel>>;
    patchRentRel(authorization: string, input: PostOrdGtdIn, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GtdTaskLinkRel>>>;
    postRent(authorization: string, input: PostRentIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GtdTaskMst>>;
    postRentClnRel(authorization: string, input: GetRentClnIn, dealClnRelCd?: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GtdTaskTgtRel>>>;
    postRentComUmsGrpInfo(authorization: string, cfCd: string, input: PostRentUrpIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postRentCusRel(authorization: string, input: GetRentCusIn, clnId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GtdTaskTgtRel>>>;
    postUmsGrpInfo(authorization: string, input: PostRentUrpIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
};
export declare const RentControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    delOccupCdt(authorization: string, taskId?: string, options?: any): AxiosPromise<GtdRentCdtDtl>;
    deleteOrdRel(authorization: string, ordId?: string, taskId?: string, options?: any): AxiosPromise<GtdTaskTgtRel>;
    deleteRent(authorization: string, taskId: string, options?: any): AxiosPromise<GtdTaskMst>;
    deleteRentClnRel(authorization: string, clnId?: string, taskId?: string, options?: any): AxiosPromise<GtdTaskTgtRel>;
    deleteRentCusRel(authorization: string, clnId?: string, cusId?: string, taskId?: string, options?: any): AxiosPromise<GtdTaskTgtRel>;
    deleteTaskRel(authorization: string, chdTaskId?: string, taskId?: string, options?: any): AxiosPromise<GtdTaskLinkRel>;
    getAllDealIdList(authorization: string, bjdCd?: Array<string>, clnId?: string, clnName?: string, dealMoveResnCd?: string, failResnCd?: string, firRentExpectLocalCd?: string, maxOnlaPy?: number, maxRentCmplDy?: string, maxRentTaskRegDy?: string, maxTipRegDy?: string, maxTodoDy?: string, minOnlaPy?: number, minRentCmplDy?: string, minRentTaskRegDy?: string, minTipRegDy?: string, minTodoDy?: string, mktDealYn?: string, nlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, ptb?: Array<string>, secRentExpectLocalCd?: string, statCd?: Array<string>, taskId?: string, taskName?: string, options?: any): AxiosPromise<Array<string>>;
    getClnCusList(authorization: string, taskId?: string, options?: any): AxiosPromise<Array<GetRentClnCusListOut>>;
    getClnCusRelModal(authorization: string, clnId?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetClnCusListOut>;
    getClnMvinAddr(authorization: string, clnId?: string, options?: any): AxiosPromise<Array<GetMvinInfo>>;
    getContrList(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: any): AxiosPromise<PagingGetContrListOut>;
    getLinkedWork(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: any): AxiosPromise<PagingGetLinkedWorkOut>;
    getLinkedWorkList(authorization: string, taskId?: string, options?: any): AxiosPromise<Array<GetLinkedWorkOut>>;
    getMyRentListPaging(authorization: string, bjdCd?: Array<string>, clnId?: string, clnName?: string, dealMoveResnCd?: string, failResnCd?: string, firRentExpectLocalCd?: string, maxOnlaPy?: number, maxRentCmplDy?: string, maxRentTaskRegDy?: string, maxTipRegDy?: string, maxTodoDy?: string, minOnlaPy?: number, minRentCmplDy?: string, minRentTaskRegDy?: string, minTipRegDy?: string, minTodoDy?: string, mktDealYn?: string, nlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, ptb?: Array<string>, secRentExpectLocalCd?: string, statCd?: Array<string>, taskId?: string, taskName?: string, options?: any): AxiosPromise<PagingGetRentListOut>;
    getOccupCdt(authorization: string, taskId?: string, options?: any): AxiosPromise<GetOccupCdtOut>;
    getOrdList(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, searchCf?: string, searchVal?: string, options?: any): AxiosPromise<PagingGetOrdModalOut>;
    getRent(authorization: string, taskId: string, options?: any): AxiosPromise<GetRentOut>;
    getRentClnBasicInfo(authorization: string, taskId?: string, options?: any): AxiosPromise<Array<GetRentClnInfo>>;
    getRentListPaging(authorization: string, bjdCd?: Array<string>, clnId?: string, clnName?: string, dealMoveResnCd?: string, failResnCd?: string, firRentExpectLocalCd?: string, maxOnlaPy?: number, maxRentCmplDy?: string, maxRentTaskRegDy?: string, maxTipRegDy?: string, maxTodoDy?: string, minOnlaPy?: number, minRentCmplDy?: string, minRentTaskRegDy?: string, minTipRegDy?: string, minTodoDy?: string, mktDealYn?: string, nlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, ptb?: Array<string>, secRentExpectLocalCd?: string, statCd?: Array<string>, taskId?: string, taskName?: string, options?: any): AxiosPromise<PagingGetRentListOut>;
    getSalAccessRole(authorization: string, cfCd?: string, tgtId?: string, options?: any): AxiosPromise<GetSalRoleOut>;
    patchDealFailResn(authorization: string, taskId: string, input: PatchRentFailResnIn, options?: any): AxiosPromise<number>;
    patchOccupCdt(authorization: string, input: PatchOccupCdtModalIn, taskId?: string, options?: any): AxiosPromise<GtdRentCdtDtl>;
    patchOrdRel(authorization: string, input: PatchOrdGtdIn, taskId?: string, options?: any): AxiosPromise<Array<GtdTaskTgtRel>>;
    patchRent(authorization: string, taskId: string, input: PatchRentIn, options?: any): AxiosPromise<GtdTaskMst>;
    patchRentClnRel(authorization: string, clnId?: string, clnRelCd?: string, taskId?: string, options?: any): AxiosPromise<GtdTaskTgtRel>;
    patchRentCusRel(authorization: string, clnId?: string, cusId?: string, cusRelCd?: string, taskId?: string, options?: any): AxiosPromise<GtdTaskTgtRel>;
    patchRentRel(authorization: string, input: PostOrdGtdIn, taskId?: string, options?: any): AxiosPromise<Array<GtdTaskLinkRel>>;
    postRent(authorization: string, input: PostRentIn, options?: any): AxiosPromise<GtdTaskMst>;
    postRentClnRel(authorization: string, input: GetRentClnIn, dealClnRelCd?: string, taskId?: string, options?: any): AxiosPromise<Array<GtdTaskTgtRel>>;
    postRentComUmsGrpInfo(authorization: string, cfCd: string, input: PostRentUrpIn, options?: any): AxiosPromise<number>;
    postRentCusRel(authorization: string, input: GetRentCusIn, clnId?: string, taskId?: string, options?: any): AxiosPromise<Array<GtdTaskTgtRel>>;
    postUmsGrpInfo(authorization: string, input: PostRentUrpIn, options?: any): AxiosPromise<number>;
};
export declare class RentControllerApi extends BaseAPI {
    delOccupCdt(authorization: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GtdRentCdtDtl, any>>;
    deleteOrdRel(authorization: string, ordId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GtdTaskTgtRel, any>>;
    deleteRent(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GtdTaskMst, any>>;
    deleteRentClnRel(authorization: string, clnId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GtdTaskTgtRel, any>>;
    deleteRentCusRel(authorization: string, clnId?: string, cusId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GtdTaskTgtRel, any>>;
    deleteTaskRel(authorization: string, chdTaskId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GtdTaskLinkRel, any>>;
    getAllDealIdList(authorization: string, bjdCd?: Array<string>, clnId?: string, clnName?: string, dealMoveResnCd?: string, failResnCd?: string, firRentExpectLocalCd?: string, maxOnlaPy?: number, maxRentCmplDy?: string, maxRentTaskRegDy?: string, maxTipRegDy?: string, maxTodoDy?: string, minOnlaPy?: number, minRentCmplDy?: string, minRentTaskRegDy?: string, minTipRegDy?: string, minTodoDy?: string, mktDealYn?: string, nlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, ptb?: Array<string>, secRentExpectLocalCd?: string, statCd?: Array<string>, taskId?: string, taskName?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string[], any>>;
    getClnCusList(authorization: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetRentClnCusListOut[], any>>;
    getClnCusRelModal(authorization: string, clnId?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetClnCusListOut, any>>;
    getClnMvinAddr(authorization: string, clnId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetMvinInfo[], any>>;
    getContrList(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetContrListOut, any>>;
    getLinkedWork(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetLinkedWorkOut, any>>;
    getLinkedWorkList(authorization: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetLinkedWorkOut[], any>>;
    getMyRentListPaging(authorization: string, bjdCd?: Array<string>, clnId?: string, clnName?: string, dealMoveResnCd?: string, failResnCd?: string, firRentExpectLocalCd?: string, maxOnlaPy?: number, maxRentCmplDy?: string, maxRentTaskRegDy?: string, maxTipRegDy?: string, maxTodoDy?: string, minOnlaPy?: number, minRentCmplDy?: string, minRentTaskRegDy?: string, minTipRegDy?: string, minTodoDy?: string, mktDealYn?: string, nlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, ptb?: Array<string>, secRentExpectLocalCd?: string, statCd?: Array<string>, taskId?: string, taskName?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetRentListOut, any>>;
    getOccupCdt(authorization: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetOccupCdtOut, any>>;
    getOrdList(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, searchCf?: string, searchVal?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetOrdModalOut, any>>;
    getRent(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetRentOut, any>>;
    getRentClnBasicInfo(authorization: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetRentClnInfo[], any>>;
    getRentListPaging(authorization: string, bjdCd?: Array<string>, clnId?: string, clnName?: string, dealMoveResnCd?: string, failResnCd?: string, firRentExpectLocalCd?: string, maxOnlaPy?: number, maxRentCmplDy?: string, maxRentTaskRegDy?: string, maxTipRegDy?: string, maxTodoDy?: string, minOnlaPy?: number, minRentCmplDy?: string, minRentTaskRegDy?: string, minTipRegDy?: string, minTodoDy?: string, mktDealYn?: string, nlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, ptb?: Array<string>, secRentExpectLocalCd?: string, statCd?: Array<string>, taskId?: string, taskName?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetRentListOut, any>>;
    getSalAccessRole(authorization: string, cfCd?: string, tgtId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetSalRoleOut, any>>;
    patchDealFailResn(authorization: string, taskId: string, input: PatchRentFailResnIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    patchOccupCdt(authorization: string, input: PatchOccupCdtModalIn, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GtdRentCdtDtl, any>>;
    patchOrdRel(authorization: string, input: PatchOrdGtdIn, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GtdTaskTgtRel[], any>>;
    patchRent(authorization: string, taskId: string, input: PatchRentIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GtdTaskMst, any>>;
    patchRentClnRel(authorization: string, clnId?: string, clnRelCd?: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GtdTaskTgtRel, any>>;
    patchRentCusRel(authorization: string, clnId?: string, cusId?: string, cusRelCd?: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GtdTaskTgtRel, any>>;
    patchRentRel(authorization: string, input: PostOrdGtdIn, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GtdTaskLinkRel[], any>>;
    postRent(authorization: string, input: PostRentIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GtdTaskMst, any>>;
    postRentClnRel(authorization: string, input: GetRentClnIn, dealClnRelCd?: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GtdTaskTgtRel[], any>>;
    postRentComUmsGrpInfo(authorization: string, cfCd: string, input: PostRentUrpIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postRentCusRel(authorization: string, input: GetRentCusIn, clnId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GtdTaskTgtRel[], any>>;
    postUmsGrpInfo(authorization: string, input: PostRentUrpIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
}
