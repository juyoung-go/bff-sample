import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { GetBldForMapOut } from '../model';
import { GetIcInfoOut } from '../model';
import { PagingGetLwhPrdChkAssignOut } from '../model';
import { PagingGetLwhTypAssignOut } from '../model';
import { PatchIclWorkTaskStatIn } from '../model';
import { PostIclWorkAssignIn } from '../model';
export declare const LwhWorkAssignControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    getIcInfoList: (authorization: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLwhByIds: (authorization: string, lwhIds: Array<string>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLwhPrdChkAssignPaging: (authorization: string, berthTypeCd?: string, bjdCd?: Array<string>, bldLastCallYn?: string, bonBunji?: string, buBunji?: string, cmplCostrYearYn?: string, collectCycleCd?: string, collectCycleResnCd?: string, costrStatCd?: string, distKm?: number, distMin?: number, exteriorCaptPsblYn?: string, flrCntYn?: string, flrHeightM?: number, govLwhYn?: string, icName?: string, lowTempType?: string, lwhId?: string, lwhUseTypeCd?: string, mainConYn?: string, maxBlaPy?: number, maxBldLastCallDy?: string, maxCmplCostrYear?: string, maxFlrCnt?: number, maxGraPy?: number, maxLat?: number, maxLng?: number, maxPlaPy?: number, maxUnitChkDy?: string, minBlaPy?: number, minBldLastCallDy?: string, minCmplCostrYear?: string, minFlrCnt?: number, minGraPy?: number, minLat?: number, minLng?: number, minPlaPy?: number, minUnitChkDy?: string, orderBy?: string, ownerCfCd?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, polygon?: string, prdYn?: string, rentCfCd?: Array<string>, tenantBizTypeCdList?: string, unitChkYn?: string, whtypDtlId?: Array<string>, whtypId?: Array<string>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLwhTypWorkListPaging: (authorization: string, availConYn?: string, berthTypeCd?: string, bjdCd?: Array<string>, bonBunji?: string, buBunji?: string, collectCycleCd?: string, collectCycleResnCd?: string, conYn?: string, costrStatCd?: string, distKm?: number, distMin?: number, flrCntYn?: string, flrHeightM?: number, govLwhYn?: string, icId?: string, icName?: string, icYn?: string, lowTempTypeId?: string, lwhId?: string, lwhUseTypeCd?: string, mainConYn?: string, maxBlaPy?: number, maxCmplCostrYear?: string, maxFlrCnt?: number, maxGraPy?: number, maxLat?: number, maxLng?: number, maxPlaPy?: number, minBlaPy?: number, minCmplCostrYear?: string, minFlrCnt?: number, minGraPy?: number, minLat?: number, minLng?: number, minPlaPy?: number, mvinTypeCd?: string, orderBy?: string, ownConYn?: string, ownerCfCd?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, polygon?: string, prdYn?: string, rentCfCd?: Array<string>, tenantBizTypeCdList?: string, whtypCnt?: number, whtypDtlId?: Array<string>, whtypId?: Array<string>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchIclLwhWorkTaskStat: (authorization: string, input: PatchIclWorkTaskStatIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postIclLwhWorkAssing: (authorization: string, input: PostIclWorkAssignIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
export declare const LwhWorkAssignControllerApiFp: (configuration?: Configuration) => {
    getIcInfoList(authorization: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetIcInfoOut>>>;
    getLwhByIds(authorization: string, lwhIds: Array<string>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetBldForMapOut>>>;
    getLwhPrdChkAssignPaging(authorization: string, berthTypeCd?: string, bjdCd?: Array<string>, bldLastCallYn?: string, bonBunji?: string, buBunji?: string, cmplCostrYearYn?: string, collectCycleCd?: string, collectCycleResnCd?: string, costrStatCd?: string, distKm?: number, distMin?: number, exteriorCaptPsblYn?: string, flrCntYn?: string, flrHeightM?: number, govLwhYn?: string, icName?: string, lowTempType?: string, lwhId?: string, lwhUseTypeCd?: string, mainConYn?: string, maxBlaPy?: number, maxBldLastCallDy?: string, maxCmplCostrYear?: string, maxFlrCnt?: number, maxGraPy?: number, maxLat?: number, maxLng?: number, maxPlaPy?: number, maxUnitChkDy?: string, minBlaPy?: number, minBldLastCallDy?: string, minCmplCostrYear?: string, minFlrCnt?: number, minGraPy?: number, minLat?: number, minLng?: number, minPlaPy?: number, minUnitChkDy?: string, orderBy?: string, ownerCfCd?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, polygon?: string, prdYn?: string, rentCfCd?: Array<string>, tenantBizTypeCdList?: string, unitChkYn?: string, whtypDtlId?: Array<string>, whtypId?: Array<string>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetLwhPrdChkAssignOut>>;
    getLwhTypWorkListPaging(authorization: string, availConYn?: string, berthTypeCd?: string, bjdCd?: Array<string>, bonBunji?: string, buBunji?: string, collectCycleCd?: string, collectCycleResnCd?: string, conYn?: string, costrStatCd?: string, distKm?: number, distMin?: number, flrCntYn?: string, flrHeightM?: number, govLwhYn?: string, icId?: string, icName?: string, icYn?: string, lowTempTypeId?: string, lwhId?: string, lwhUseTypeCd?: string, mainConYn?: string, maxBlaPy?: number, maxCmplCostrYear?: string, maxFlrCnt?: number, maxGraPy?: number, maxLat?: number, maxLng?: number, maxPlaPy?: number, minBlaPy?: number, minCmplCostrYear?: string, minFlrCnt?: number, minGraPy?: number, minLat?: number, minLng?: number, minPlaPy?: number, mvinTypeCd?: string, orderBy?: string, ownConYn?: string, ownerCfCd?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, polygon?: string, prdYn?: string, rentCfCd?: Array<string>, tenantBizTypeCdList?: string, whtypCnt?: number, whtypDtlId?: Array<string>, whtypId?: Array<string>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetLwhTypAssignOut>>;
    patchIclLwhWorkTaskStat(authorization: string, input: PatchIclWorkTaskStatIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    postIclLwhWorkAssing(authorization: string, input: PostIclWorkAssignIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
};
export declare const LwhWorkAssignControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    getIcInfoList(authorization: string, options?: any): AxiosPromise<Array<GetIcInfoOut>>;
    getLwhByIds(authorization: string, lwhIds: Array<string>, options?: any): AxiosPromise<Array<GetBldForMapOut>>;
    getLwhPrdChkAssignPaging(authorization: string, berthTypeCd?: string, bjdCd?: Array<string>, bldLastCallYn?: string, bonBunji?: string, buBunji?: string, cmplCostrYearYn?: string, collectCycleCd?: string, collectCycleResnCd?: string, costrStatCd?: string, distKm?: number, distMin?: number, exteriorCaptPsblYn?: string, flrCntYn?: string, flrHeightM?: number, govLwhYn?: string, icName?: string, lowTempType?: string, lwhId?: string, lwhUseTypeCd?: string, mainConYn?: string, maxBlaPy?: number, maxBldLastCallDy?: string, maxCmplCostrYear?: string, maxFlrCnt?: number, maxGraPy?: number, maxLat?: number, maxLng?: number, maxPlaPy?: number, maxUnitChkDy?: string, minBlaPy?: number, minBldLastCallDy?: string, minCmplCostrYear?: string, minFlrCnt?: number, minGraPy?: number, minLat?: number, minLng?: number, minPlaPy?: number, minUnitChkDy?: string, orderBy?: string, ownerCfCd?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, polygon?: string, prdYn?: string, rentCfCd?: Array<string>, tenantBizTypeCdList?: string, unitChkYn?: string, whtypDtlId?: Array<string>, whtypId?: Array<string>, options?: any): AxiosPromise<PagingGetLwhPrdChkAssignOut>;
    getLwhTypWorkListPaging(authorization: string, availConYn?: string, berthTypeCd?: string, bjdCd?: Array<string>, bonBunji?: string, buBunji?: string, collectCycleCd?: string, collectCycleResnCd?: string, conYn?: string, costrStatCd?: string, distKm?: number, distMin?: number, flrCntYn?: string, flrHeightM?: number, govLwhYn?: string, icId?: string, icName?: string, icYn?: string, lowTempTypeId?: string, lwhId?: string, lwhUseTypeCd?: string, mainConYn?: string, maxBlaPy?: number, maxCmplCostrYear?: string, maxFlrCnt?: number, maxGraPy?: number, maxLat?: number, maxLng?: number, maxPlaPy?: number, minBlaPy?: number, minCmplCostrYear?: string, minFlrCnt?: number, minGraPy?: number, minLat?: number, minLng?: number, minPlaPy?: number, mvinTypeCd?: string, orderBy?: string, ownConYn?: string, ownerCfCd?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, polygon?: string, prdYn?: string, rentCfCd?: Array<string>, tenantBizTypeCdList?: string, whtypCnt?: number, whtypDtlId?: Array<string>, whtypId?: Array<string>, options?: any): AxiosPromise<PagingGetLwhTypAssignOut>;
    patchIclLwhWorkTaskStat(authorization: string, input: PatchIclWorkTaskStatIn, options?: any): AxiosPromise<void>;
    postIclLwhWorkAssing(authorization: string, input: PostIclWorkAssignIn, options?: any): AxiosPromise<string>;
};
export declare class LwhWorkAssignControllerApi extends BaseAPI {
    getIcInfoList(authorization: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetIcInfoOut[], any>>;
    getLwhByIds(authorization: string, lwhIds: Array<string>, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetBldForMapOut[], any>>;
    getLwhPrdChkAssignPaging(authorization: string, berthTypeCd?: string, bjdCd?: Array<string>, bldLastCallYn?: string, bonBunji?: string, buBunji?: string, cmplCostrYearYn?: string, collectCycleCd?: string, collectCycleResnCd?: string, costrStatCd?: string, distKm?: number, distMin?: number, exteriorCaptPsblYn?: string, flrCntYn?: string, flrHeightM?: number, govLwhYn?: string, icName?: string, lowTempType?: string, lwhId?: string, lwhUseTypeCd?: string, mainConYn?: string, maxBlaPy?: number, maxBldLastCallDy?: string, maxCmplCostrYear?: string, maxFlrCnt?: number, maxGraPy?: number, maxLat?: number, maxLng?: number, maxPlaPy?: number, maxUnitChkDy?: string, minBlaPy?: number, minBldLastCallDy?: string, minCmplCostrYear?: string, minFlrCnt?: number, minGraPy?: number, minLat?: number, minLng?: number, minPlaPy?: number, minUnitChkDy?: string, orderBy?: string, ownerCfCd?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, polygon?: string, prdYn?: string, rentCfCd?: Array<string>, tenantBizTypeCdList?: string, unitChkYn?: string, whtypDtlId?: Array<string>, whtypId?: Array<string>, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetLwhPrdChkAssignOut, any>>;
    getLwhTypWorkListPaging(authorization: string, availConYn?: string, berthTypeCd?: string, bjdCd?: Array<string>, bonBunji?: string, buBunji?: string, collectCycleCd?: string, collectCycleResnCd?: string, conYn?: string, costrStatCd?: string, distKm?: number, distMin?: number, flrCntYn?: string, flrHeightM?: number, govLwhYn?: string, icId?: string, icName?: string, icYn?: string, lowTempTypeId?: string, lwhId?: string, lwhUseTypeCd?: string, mainConYn?: string, maxBlaPy?: number, maxCmplCostrYear?: string, maxFlrCnt?: number, maxGraPy?: number, maxLat?: number, maxLng?: number, maxPlaPy?: number, minBlaPy?: number, minCmplCostrYear?: string, minFlrCnt?: number, minGraPy?: number, minLat?: number, minLng?: number, minPlaPy?: number, mvinTypeCd?: string, orderBy?: string, ownConYn?: string, ownerCfCd?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, polygon?: string, prdYn?: string, rentCfCd?: Array<string>, tenantBizTypeCdList?: string, whtypCnt?: number, whtypDtlId?: Array<string>, whtypId?: Array<string>, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetLwhTypAssignOut, any>>;
    patchIclLwhWorkTaskStat(authorization: string, input: PatchIclWorkTaskStatIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    postIclLwhWorkAssing(authorization: string, input: PostIclWorkAssignIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
}
