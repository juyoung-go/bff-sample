import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { GetMbrComInfoOut } from '../model';
import { GetMbrDealOut } from '../model';
import { GetMbrOut } from '../model';
import { GetMbrPrdOut } from '../model';
import { GetMbrTktOut } from '../model';
import { PagingGetMbrActvHstOut } from '../model';
import { PagingGetMbrClnRelOut } from '../model';
import { PagingGetMbrHpgQusOut } from '../model';
import { PagingGetMbrListOut } from '../model';
import { PagingGetWwwMbrHstListOut } from '../model';
import { PatchMbrLevCdIn } from '../model';
import { PostMbrUrpIn } from '../model';
import { SaveMbrIn } from '../model';
import { SaveMbrPrdPropsIn } from '../model';
import { SaveMbrTktIn } from '../model';
import { WwwTicketIssHst } from '../model';
export declare const MbrControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    delMbrAtnOffice: (authorization: string, mbrId: string, hopeTypeCd?: string, prdIdList?: Array<string>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    delMbrSalRcmdOffice: (authorization: string, mbrId: string, prdIdList?: Array<string>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    delMbrTourReqOffice: (authorization: string, mbrId: string, hopeTypeCd?: string, prdIdList?: Array<string>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteMbr: (authorization: string, mbrId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    expireMbrTkt: (authorization: string, mbrId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getAllMbrIdList: (authorization: string, atvMbrYn?: string, coName?: string, dealInProgsYn?: string, email?: string, emailChkYn?: string, linkedCusYn?: string, maxLastSignInDy?: string, maxSignInCnt?: number, maxSiteJoinDy?: string, maxTktExpireDy?: string, mbrLevCd?: string, mbrName?: string, mbrTypeCd?: string, minLastSignInDy?: string, minSignInCnt?: number, minSiteJoinDy?: string, minTktExpireDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, telChkCd?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getAllMbrListPaging: (authorization: string, atvMbrYn?: string, coName?: string, dealInProgsYn?: string, email?: string, emailChkYn?: string, linkedCusYn?: string, maxLastSignInDy?: string, maxSignInCnt?: number, maxSiteJoinDy?: string, maxTktExpireDy?: string, mbrLevCd?: string, mbrName?: string, mbrTypeCd?: string, minLastSignInDy?: string, minSignInCnt?: number, minSiteJoinDy?: string, minTktExpireDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, telChkCd?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getMbr: (authorization: string, mbrId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getMbrActvHst: (authorization: string, mbrId: string, mbrId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getMbrAtnOffice: (authorization: string, mbrId: string, bjdCd?: Array<string>, flrOpt?: string, maxMonthMtnFeeAmt?: number, maxNla?: number, mbrId2?: string, minMonthMtnFeeAmt?: number, minNla?: number, orderBy?: string, phtOrder?: string, userId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getMbrClnRelInfo: (authorization: string, mbrId: string, mbrId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getMbrComInfo: (authorization: string, mbrId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getMbrDeal: (authorization: string, mbrId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getMbrHpgQusHst: (authorization: string, mbrId: string, mbrId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getMbrSalRcmdOffice: (authorization: string, mbrId: string, bjdCd?: Array<string>, flrOpt?: string, maxMonthMtnFeeAmt?: number, maxNla?: number, mbrId2?: string, minMonthMtnFeeAmt?: number, minNla?: number, orderBy?: string, phtOrder?: string, userId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getMbrTktInfo: (authorization: string, mbrId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getMbrTourReqOffice: (authorization: string, mbrId: string, bjdCd?: Array<string>, flrOpt?: string, maxMonthMtnFeeAmt?: number, maxNla?: number, mbrId2?: string, minMonthMtnFeeAmt?: number, minNla?: number, orderBy?: string, phtOrder?: string, userId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getWwwMbrHstListPaging: (authorization: string, actvCd?: Array<string>, maxActvHstDy?: string, mbrName?: string, minActvHstDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, prdId?: string, prdRelYn?: Array<string>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    newMbr: (authorization: string, input: SaveMbrIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    newMbrPrdProps: (authorization: string, input: SaveMbrPrdPropsIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    newMbrTelChkTip: (authorization: string, mbrId: string, ctn?: string, telChkCd?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    newMbrTkt: (authorization: string, mbrId: string, input: SaveMbrTktIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchMbrLevCd: (authorization: string, input: PatchMbrLevCdIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchMbrTelChkCd: (authorization: string, mbrId: string, telChkCd?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchMbrType: (authorization: string, mbrId: string, mbrType?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postMbrUrpInfo: (authorization: string, input: PostMbrUrpIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    unLinkMbrCus: (authorization: string, mbrId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
export declare const MbrControllerApiFp: (configuration?: Configuration) => {
    delMbrAtnOffice(authorization: string, mbrId: string, hopeTypeCd?: string, prdIdList?: Array<string>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    delMbrSalRcmdOffice(authorization: string, mbrId: string, prdIdList?: Array<string>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    delMbrTourReqOffice(authorization: string, mbrId: string, hopeTypeCd?: string, prdIdList?: Array<string>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    deleteMbr(authorization: string, mbrId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    expireMbrTkt(authorization: string, mbrId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    getAllMbrIdList(authorization: string, atvMbrYn?: string, coName?: string, dealInProgsYn?: string, email?: string, emailChkYn?: string, linkedCusYn?: string, maxLastSignInDy?: string, maxSignInCnt?: number, maxSiteJoinDy?: string, maxTktExpireDy?: string, mbrLevCd?: string, mbrName?: string, mbrTypeCd?: string, minLastSignInDy?: string, minSignInCnt?: number, minSiteJoinDy?: string, minTktExpireDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, telChkCd?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<string>>>;
    getAllMbrListPaging(authorization: string, atvMbrYn?: string, coName?: string, dealInProgsYn?: string, email?: string, emailChkYn?: string, linkedCusYn?: string, maxLastSignInDy?: string, maxSignInCnt?: number, maxSiteJoinDy?: string, maxTktExpireDy?: string, mbrLevCd?: string, mbrName?: string, mbrTypeCd?: string, minLastSignInDy?: string, minSignInCnt?: number, minSiteJoinDy?: string, minTktExpireDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, telChkCd?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetMbrListOut>>;
    getMbr(authorization: string, mbrId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetMbrOut>>;
    getMbrActvHst(authorization: string, mbrId: string, mbrId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetMbrActvHstOut>>;
    getMbrAtnOffice(authorization: string, mbrId: string, bjdCd?: Array<string>, flrOpt?: string, maxMonthMtnFeeAmt?: number, maxNla?: number, mbrId2?: string, minMonthMtnFeeAmt?: number, minNla?: number, orderBy?: string, phtOrder?: string, userId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetMbrPrdOut>>;
    getMbrClnRelInfo(authorization: string, mbrId: string, mbrId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetMbrClnRelOut>>;
    getMbrComInfo(authorization: string, mbrId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetMbrComInfoOut>>;
    getMbrDeal(authorization: string, mbrId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetMbrDealOut>>>;
    getMbrHpgQusHst(authorization: string, mbrId: string, mbrId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetMbrHpgQusOut>>;
    getMbrSalRcmdOffice(authorization: string, mbrId: string, bjdCd?: Array<string>, flrOpt?: string, maxMonthMtnFeeAmt?: number, maxNla?: number, mbrId2?: string, minMonthMtnFeeAmt?: number, minNla?: number, orderBy?: string, phtOrder?: string, userId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetMbrPrdOut>>;
    getMbrTktInfo(authorization: string, mbrId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetMbrTktOut>>>;
    getMbrTourReqOffice(authorization: string, mbrId: string, bjdCd?: Array<string>, flrOpt?: string, maxMonthMtnFeeAmt?: number, maxNla?: number, mbrId2?: string, minMonthMtnFeeAmt?: number, minNla?: number, orderBy?: string, phtOrder?: string, userId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetMbrPrdOut>>;
    getWwwMbrHstListPaging(authorization: string, actvCd?: Array<string>, maxActvHstDy?: string, mbrName?: string, minActvHstDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, prdId?: string, prdRelYn?: Array<string>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetWwwMbrHstListOut>>;
    newMbr(authorization: string, input: SaveMbrIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    newMbrPrdProps(authorization: string, input: SaveMbrPrdPropsIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    newMbrTelChkTip(authorization: string, mbrId: string, ctn?: string, telChkCd?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    newMbrTkt(authorization: string, mbrId: string, input: SaveMbrTktIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<WwwTicketIssHst>>;
    patchMbrLevCd(authorization: string, input: PatchMbrLevCdIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    patchMbrTelChkCd(authorization: string, mbrId: string, telChkCd?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    patchMbrType(authorization: string, mbrId: string, mbrType?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    postMbrUrpInfo(authorization: string, input: PostMbrUrpIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    unLinkMbrCus(authorization: string, mbrId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
export declare const MbrControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    delMbrAtnOffice(authorization: string, mbrId: string, hopeTypeCd?: string, prdIdList?: Array<string>, options?: any): AxiosPromise<void>;
    delMbrSalRcmdOffice(authorization: string, mbrId: string, prdIdList?: Array<string>, options?: any): AxiosPromise<void>;
    delMbrTourReqOffice(authorization: string, mbrId: string, hopeTypeCd?: string, prdIdList?: Array<string>, options?: any): AxiosPromise<void>;
    deleteMbr(authorization: string, mbrId: string, options?: any): AxiosPromise<string>;
    expireMbrTkt(authorization: string, mbrId: string, options?: any): AxiosPromise<string>;
    getAllMbrIdList(authorization: string, atvMbrYn?: string, coName?: string, dealInProgsYn?: string, email?: string, emailChkYn?: string, linkedCusYn?: string, maxLastSignInDy?: string, maxSignInCnt?: number, maxSiteJoinDy?: string, maxTktExpireDy?: string, mbrLevCd?: string, mbrName?: string, mbrTypeCd?: string, minLastSignInDy?: string, minSignInCnt?: number, minSiteJoinDy?: string, minTktExpireDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, telChkCd?: string, options?: any): AxiosPromise<Array<string>>;
    getAllMbrListPaging(authorization: string, atvMbrYn?: string, coName?: string, dealInProgsYn?: string, email?: string, emailChkYn?: string, linkedCusYn?: string, maxLastSignInDy?: string, maxSignInCnt?: number, maxSiteJoinDy?: string, maxTktExpireDy?: string, mbrLevCd?: string, mbrName?: string, mbrTypeCd?: string, minLastSignInDy?: string, minSignInCnt?: number, minSiteJoinDy?: string, minTktExpireDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, telChkCd?: string, options?: any): AxiosPromise<PagingGetMbrListOut>;
    getMbr(authorization: string, mbrId: string, options?: any): AxiosPromise<GetMbrOut>;
    getMbrActvHst(authorization: string, mbrId: string, mbrId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetMbrActvHstOut>;
    getMbrAtnOffice(authorization: string, mbrId: string, bjdCd?: Array<string>, flrOpt?: string, maxMonthMtnFeeAmt?: number, maxNla?: number, mbrId2?: string, minMonthMtnFeeAmt?: number, minNla?: number, orderBy?: string, phtOrder?: string, userId?: string, options?: any): AxiosPromise<GetMbrPrdOut>;
    getMbrClnRelInfo(authorization: string, mbrId: string, mbrId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetMbrClnRelOut>;
    getMbrComInfo(authorization: string, mbrId: string, options?: any): AxiosPromise<GetMbrComInfoOut>;
    getMbrDeal(authorization: string, mbrId: string, options?: any): AxiosPromise<Array<GetMbrDealOut>>;
    getMbrHpgQusHst(authorization: string, mbrId: string, mbrId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetMbrHpgQusOut>;
    getMbrSalRcmdOffice(authorization: string, mbrId: string, bjdCd?: Array<string>, flrOpt?: string, maxMonthMtnFeeAmt?: number, maxNla?: number, mbrId2?: string, minMonthMtnFeeAmt?: number, minNla?: number, orderBy?: string, phtOrder?: string, userId?: string, options?: any): AxiosPromise<GetMbrPrdOut>;
    getMbrTktInfo(authorization: string, mbrId: string, options?: any): AxiosPromise<Array<GetMbrTktOut>>;
    getMbrTourReqOffice(authorization: string, mbrId: string, bjdCd?: Array<string>, flrOpt?: string, maxMonthMtnFeeAmt?: number, maxNla?: number, mbrId2?: string, minMonthMtnFeeAmt?: number, minNla?: number, orderBy?: string, phtOrder?: string, userId?: string, options?: any): AxiosPromise<GetMbrPrdOut>;
    getWwwMbrHstListPaging(authorization: string, actvCd?: Array<string>, maxActvHstDy?: string, mbrName?: string, minActvHstDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, prdId?: string, prdRelYn?: Array<string>, options?: any): AxiosPromise<PagingGetWwwMbrHstListOut>;
    newMbr(authorization: string, input: SaveMbrIn, options?: any): AxiosPromise<string>;
    newMbrPrdProps(authorization: string, input: SaveMbrPrdPropsIn, options?: any): AxiosPromise<string>;
    newMbrTelChkTip(authorization: string, mbrId: string, ctn?: string, telChkCd?: string, options?: any): AxiosPromise<string>;
    newMbrTkt(authorization: string, mbrId: string, input: SaveMbrTktIn, options?: any): AxiosPromise<WwwTicketIssHst>;
    patchMbrLevCd(authorization: string, input: PatchMbrLevCdIn, options?: any): AxiosPromise<void>;
    patchMbrTelChkCd(authorization: string, mbrId: string, telChkCd?: string, options?: any): AxiosPromise<string>;
    patchMbrType(authorization: string, mbrId: string, mbrType?: string, options?: any): AxiosPromise<string>;
    postMbrUrpInfo(authorization: string, input: PostMbrUrpIn, options?: any): AxiosPromise<number>;
    unLinkMbrCus(authorization: string, mbrId: string, options?: any): AxiosPromise<void>;
};
export declare class MbrControllerApi extends BaseAPI {
    delMbrAtnOffice(authorization: string, mbrId: string, hopeTypeCd?: string, prdIdList?: Array<string>, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    delMbrSalRcmdOffice(authorization: string, mbrId: string, prdIdList?: Array<string>, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    delMbrTourReqOffice(authorization: string, mbrId: string, hopeTypeCd?: string, prdIdList?: Array<string>, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    deleteMbr(authorization: string, mbrId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    expireMbrTkt(authorization: string, mbrId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    getAllMbrIdList(authorization: string, atvMbrYn?: string, coName?: string, dealInProgsYn?: string, email?: string, emailChkYn?: string, linkedCusYn?: string, maxLastSignInDy?: string, maxSignInCnt?: number, maxSiteJoinDy?: string, maxTktExpireDy?: string, mbrLevCd?: string, mbrName?: string, mbrTypeCd?: string, minLastSignInDy?: string, minSignInCnt?: number, minSiteJoinDy?: string, minTktExpireDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, telChkCd?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string[], any>>;
    getAllMbrListPaging(authorization: string, atvMbrYn?: string, coName?: string, dealInProgsYn?: string, email?: string, emailChkYn?: string, linkedCusYn?: string, maxLastSignInDy?: string, maxSignInCnt?: number, maxSiteJoinDy?: string, maxTktExpireDy?: string, mbrLevCd?: string, mbrName?: string, mbrTypeCd?: string, minLastSignInDy?: string, minSignInCnt?: number, minSiteJoinDy?: string, minTktExpireDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, telChkCd?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetMbrListOut, any>>;
    getMbr(authorization: string, mbrId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetMbrOut, any>>;
    getMbrActvHst(authorization: string, mbrId: string, mbrId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetMbrActvHstOut, any>>;
    getMbrAtnOffice(authorization: string, mbrId: string, bjdCd?: Array<string>, flrOpt?: string, maxMonthMtnFeeAmt?: number, maxNla?: number, mbrId2?: string, minMonthMtnFeeAmt?: number, minNla?: number, orderBy?: string, phtOrder?: string, userId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetMbrPrdOut, any>>;
    getMbrClnRelInfo(authorization: string, mbrId: string, mbrId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetMbrClnRelOut, any>>;
    getMbrComInfo(authorization: string, mbrId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetMbrComInfoOut, any>>;
    getMbrDeal(authorization: string, mbrId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetMbrDealOut[], any>>;
    getMbrHpgQusHst(authorization: string, mbrId: string, mbrId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetMbrHpgQusOut, any>>;
    getMbrSalRcmdOffice(authorization: string, mbrId: string, bjdCd?: Array<string>, flrOpt?: string, maxMonthMtnFeeAmt?: number, maxNla?: number, mbrId2?: string, minMonthMtnFeeAmt?: number, minNla?: number, orderBy?: string, phtOrder?: string, userId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetMbrPrdOut, any>>;
    getMbrTktInfo(authorization: string, mbrId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetMbrTktOut[], any>>;
    getMbrTourReqOffice(authorization: string, mbrId: string, bjdCd?: Array<string>, flrOpt?: string, maxMonthMtnFeeAmt?: number, maxNla?: number, mbrId2?: string, minMonthMtnFeeAmt?: number, minNla?: number, orderBy?: string, phtOrder?: string, userId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetMbrPrdOut, any>>;
    getWwwMbrHstListPaging(authorization: string, actvCd?: Array<string>, maxActvHstDy?: string, mbrName?: string, minActvHstDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, prdId?: string, prdRelYn?: Array<string>, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetWwwMbrHstListOut, any>>;
    newMbr(authorization: string, input: SaveMbrIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    newMbrPrdProps(authorization: string, input: SaveMbrPrdPropsIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    newMbrTelChkTip(authorization: string, mbrId: string, ctn?: string, telChkCd?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    newMbrTkt(authorization: string, mbrId: string, input: SaveMbrTktIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<WwwTicketIssHst, any>>;
    patchMbrLevCd(authorization: string, input: PatchMbrLevCdIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    patchMbrTelChkCd(authorization: string, mbrId: string, telChkCd?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    patchMbrType(authorization: string, mbrId: string, mbrType?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    postMbrUrpInfo(authorization: string, input: PostMbrUrpIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    unLinkMbrCus(authorization: string, mbrId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
}
