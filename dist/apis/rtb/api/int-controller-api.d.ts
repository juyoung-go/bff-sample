import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { GetIntClnCusListOut } from '../model';
import { GetIntContrInfoOut } from '../model';
import { GetIntContrListSumOut } from '../model';
import { GetIntProjCusRelListIn } from '../model';
import { GetIntProjDtlOut } from '../model';
import { GetIntProjOut } from '../model';
import { GetIntProjPtbOut } from '../model';
import { GetIntRoleOut } from '../model';
import { IntContrMst } from '../model';
import { IntProjClnCusRel } from '../model';
import { IntProjClnRel } from '../model';
import { IntProjDtl } from '../model';
import { IntProjMst } from '../model';
import { PagingGetIntContrListOut } from '../model';
import { PagingGetIntListPagingOut } from '../model';
import { PatchIntProjIn } from '../model';
import { PatchIntProjPtbIn } from '../model';
import { PostIntContrIn } from '../model';
import { PostIntProjDtlIn } from '../model';
import { PostIntProjIn } from '../model';
import { Resource } from '../model';
export declare const IntControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    deleteInfProj: (authorization: string, projId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteIntBidInfo: (authorization: string, projId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteIntEitInfo: (authorization: string, projId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteIntProjClnRel: (authorization: string, clnId?: string, projId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteIntProjCusRel: (authorization: string, clnId?: string, cusId?: string, projId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getIntBidInfo: (authorization: string, projId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getIntContrInfo: (authorization: string, projId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getIntEitInfo: (authorization: string, projId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getIntListPaging: (authorization: string, bidStatCd?: string, bldName?: string, clnName?: string, costrPurpCd?: Array<string>, icontrYn?: string, maxAreaPy?: number, maxCostrEndDy?: string, maxCostrExpectAmt?: number, maxCostrStartDy?: string, minAreaPy?: number, minCostrEndDy?: string, minCostrExpectAmt?: number, minCostrStartDy?: string, mktPm?: string, orderBy?: string, pageNum?: number, pageSize?: number, projDeptCd?: string, projId?: string, projName?: string, projProgsCd?: Array<string>, salPtb?: Array<string>, userId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getIntMyListPaging: (authorization: string, bidStatCd?: string, bldName?: string, clnName?: string, costrPurpCd?: Array<string>, icontrYn?: string, maxAreaPy?: number, maxCostrEndDy?: string, maxCostrExpectAmt?: number, maxCostrStartDy?: string, minAreaPy?: number, minCostrEndDy?: string, minCostrExpectAmt?: number, minCostrStartDy?: string, mktPm?: string, orderBy?: string, pageNum?: number, pageSize?: number, projDeptCd?: string, projId?: string, projName?: string, projProgsCd?: Array<string>, salPtb?: Array<string>, userId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getIntProjBasicInfo: (authorization: string, projId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getIntProjClnCusInfo: (authorization: string, projId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getIntProjPtbInfo: (authorization: string, projId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getIntProjRoleYn: (authorization: string, projId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchIntBidInfo: (authorization: string, projId: string, input: PostIntProjDtlIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchIntContrInfo: (authorization: string, projId: string, input: PostIntContrIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchIntEitInfo: (authorization: string, projId: string, input: PostIntProjDtlIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchIntProjBasicInfo: (authorization: string, projId: string, input: PatchIntProjIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchIntProjPtbInfo: (authorization: string, projId: string, input: PatchIntProjPtbIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postIntBidInfo: (authorization: string, projId: string, input: PostIntProjDtlIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postIntContrInfo: (authorization: string, projId: string, input: PostIntContrIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postIntEitInfo: (authorization: string, projId: string, input: PostIntProjDtlIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postIntProj: (authorization: string, input: PostIntProjIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postIntProjClnRel: (authorization: string, clnId?: string, projId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postIntProjCusRel: (authorization: string, input: GetIntProjCusRelListIn, clnId?: string, projId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectInbInfoDownloadExcel2: (authorization: string, bidStatCd?: string, clnName?: string, deptInChrg?: string, maxContrAmt?: number, maxContrDy?: string, maxCostrExpectAmt?: number, maxTotalCostrAmt?: number, minContrAmt?: number, minContrDy?: string, minCostrExpectAmt?: number, minTotalCostrAmt?: number, orderBy?: string, pageNum?: number, pageSize?: number, projId?: string, projName?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectIntAuthorityYn: (authorization: string, projId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectIntContrListPaging: (authorization: string, bidStatCd?: string, clnName?: string, deptInChrg?: string, maxContrAmt?: number, maxContrDy?: string, maxCostrExpectAmt?: number, maxTotalCostrAmt?: number, minContrAmt?: number, minContrDy?: string, minCostrExpectAmt?: number, minTotalCostrAmt?: number, orderBy?: string, pageNum?: number, pageSize?: number, projId?: string, projName?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectIntContrListSum: (authorization: string, bidStatCd?: string, clnName?: string, deptInChrg?: string, maxContrAmt?: number, maxContrDy?: string, maxCostrExpectAmt?: number, maxTotalCostrAmt?: number, minContrAmt?: number, minContrDy?: string, minCostrExpectAmt?: number, minTotalCostrAmt?: number, orderBy?: string, pageNum?: number, pageSize?: number, projId?: string, projName?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
export declare const IntControllerApiFp: (configuration?: Configuration) => {
    deleteInfProj(authorization: string, projId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    deleteIntBidInfo(authorization: string, projId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IntProjDtl>>;
    deleteIntEitInfo(authorization: string, projId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IntProjDtl>>;
    deleteIntProjClnRel(authorization: string, clnId?: string, projId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IntProjClnRel>>;
    deleteIntProjCusRel(authorization: string, clnId?: string, cusId?: string, projId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IntProjClnCusRel>>;
    getIntBidInfo(authorization: string, projId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetIntProjDtlOut>>;
    getIntContrInfo(authorization: string, projId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetIntContrInfoOut>>;
    getIntEitInfo(authorization: string, projId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetIntProjDtlOut>>;
    getIntListPaging(authorization: string, bidStatCd?: string, bldName?: string, clnName?: string, costrPurpCd?: Array<string>, icontrYn?: string, maxAreaPy?: number, maxCostrEndDy?: string, maxCostrExpectAmt?: number, maxCostrStartDy?: string, minAreaPy?: number, minCostrEndDy?: string, minCostrExpectAmt?: number, minCostrStartDy?: string, mktPm?: string, orderBy?: string, pageNum?: number, pageSize?: number, projDeptCd?: string, projId?: string, projName?: string, projProgsCd?: Array<string>, salPtb?: Array<string>, userId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetIntListPagingOut>>;
    getIntMyListPaging(authorization: string, bidStatCd?: string, bldName?: string, clnName?: string, costrPurpCd?: Array<string>, icontrYn?: string, maxAreaPy?: number, maxCostrEndDy?: string, maxCostrExpectAmt?: number, maxCostrStartDy?: string, minAreaPy?: number, minCostrEndDy?: string, minCostrExpectAmt?: number, minCostrStartDy?: string, mktPm?: string, orderBy?: string, pageNum?: number, pageSize?: number, projDeptCd?: string, projId?: string, projName?: string, projProgsCd?: Array<string>, salPtb?: Array<string>, userId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetIntListPagingOut>>;
    getIntProjBasicInfo(authorization: string, projId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetIntProjOut>>;
    getIntProjClnCusInfo(authorization: string, projId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetIntClnCusListOut>>;
    getIntProjPtbInfo(authorization: string, projId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetIntProjPtbOut>>;
    getIntProjRoleYn(authorization: string, projId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetIntRoleOut>>;
    patchIntBidInfo(authorization: string, projId: string, input: PostIntProjDtlIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IntProjDtl>>;
    patchIntContrInfo(authorization: string, projId: string, input: PostIntContrIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IntContrMst>>;
    patchIntEitInfo(authorization: string, projId: string, input: PostIntProjDtlIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IntProjDtl>>;
    patchIntProjBasicInfo(authorization: string, projId: string, input: PatchIntProjIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IntProjMst>>;
    patchIntProjPtbInfo(authorization: string, projId: string, input: PatchIntProjPtbIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetIntProjPtbOut>>;
    postIntBidInfo(authorization: string, projId: string, input: PostIntProjDtlIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IntProjDtl>>;
    postIntContrInfo(authorization: string, projId: string, input: PostIntContrIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IntContrMst>>;
    postIntEitInfo(authorization: string, projId: string, input: PostIntProjDtlIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IntProjDtl>>;
    postIntProj(authorization: string, input: PostIntProjIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IntProjMst>>;
    postIntProjClnRel(authorization: string, clnId?: string, projId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IntProjClnRel>>;
    postIntProjCusRel(authorization: string, input: GetIntProjCusRelListIn, clnId?: string, projId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<IntProjClnCusRel>>>;
    selectInbInfoDownloadExcel2(authorization: string, bidStatCd?: string, clnName?: string, deptInChrg?: string, maxContrAmt?: number, maxContrDy?: string, maxCostrExpectAmt?: number, maxTotalCostrAmt?: number, minContrAmt?: number, minContrDy?: string, minCostrExpectAmt?: number, minTotalCostrAmt?: number, orderBy?: string, pageNum?: number, pageSize?: number, projId?: string, projName?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Resource>>;
    selectIntAuthorityYn(authorization: string, projId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    selectIntContrListPaging(authorization: string, bidStatCd?: string, clnName?: string, deptInChrg?: string, maxContrAmt?: number, maxContrDy?: string, maxCostrExpectAmt?: number, maxTotalCostrAmt?: number, minContrAmt?: number, minContrDy?: string, minCostrExpectAmt?: number, minTotalCostrAmt?: number, orderBy?: string, pageNum?: number, pageSize?: number, projId?: string, projName?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetIntContrListOut>>;
    selectIntContrListSum(authorization: string, bidStatCd?: string, clnName?: string, deptInChrg?: string, maxContrAmt?: number, maxContrDy?: string, maxCostrExpectAmt?: number, maxTotalCostrAmt?: number, minContrAmt?: number, minContrDy?: string, minCostrExpectAmt?: number, minTotalCostrAmt?: number, orderBy?: string, pageNum?: number, pageSize?: number, projId?: string, projName?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetIntContrListSumOut>>;
};
export declare const IntControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    deleteInfProj(authorization: string, projId: string, options?: any): AxiosPromise<void>;
    deleteIntBidInfo(authorization: string, projId: string, options?: any): AxiosPromise<IntProjDtl>;
    deleteIntEitInfo(authorization: string, projId: string, options?: any): AxiosPromise<IntProjDtl>;
    deleteIntProjClnRel(authorization: string, clnId?: string, projId?: string, options?: any): AxiosPromise<IntProjClnRel>;
    deleteIntProjCusRel(authorization: string, clnId?: string, cusId?: string, projId?: string, options?: any): AxiosPromise<IntProjClnCusRel>;
    getIntBidInfo(authorization: string, projId: string, options?: any): AxiosPromise<GetIntProjDtlOut>;
    getIntContrInfo(authorization: string, projId: string, options?: any): AxiosPromise<GetIntContrInfoOut>;
    getIntEitInfo(authorization: string, projId: string, options?: any): AxiosPromise<GetIntProjDtlOut>;
    getIntListPaging(authorization: string, bidStatCd?: string, bldName?: string, clnName?: string, costrPurpCd?: Array<string>, icontrYn?: string, maxAreaPy?: number, maxCostrEndDy?: string, maxCostrExpectAmt?: number, maxCostrStartDy?: string, minAreaPy?: number, minCostrEndDy?: string, minCostrExpectAmt?: number, minCostrStartDy?: string, mktPm?: string, orderBy?: string, pageNum?: number, pageSize?: number, projDeptCd?: string, projId?: string, projName?: string, projProgsCd?: Array<string>, salPtb?: Array<string>, userId?: string, options?: any): AxiosPromise<PagingGetIntListPagingOut>;
    getIntMyListPaging(authorization: string, bidStatCd?: string, bldName?: string, clnName?: string, costrPurpCd?: Array<string>, icontrYn?: string, maxAreaPy?: number, maxCostrEndDy?: string, maxCostrExpectAmt?: number, maxCostrStartDy?: string, minAreaPy?: number, minCostrEndDy?: string, minCostrExpectAmt?: number, minCostrStartDy?: string, mktPm?: string, orderBy?: string, pageNum?: number, pageSize?: number, projDeptCd?: string, projId?: string, projName?: string, projProgsCd?: Array<string>, salPtb?: Array<string>, userId?: string, options?: any): AxiosPromise<PagingGetIntListPagingOut>;
    getIntProjBasicInfo(authorization: string, projId: string, options?: any): AxiosPromise<GetIntProjOut>;
    getIntProjClnCusInfo(authorization: string, projId?: string, options?: any): AxiosPromise<GetIntClnCusListOut>;
    getIntProjPtbInfo(authorization: string, projId?: string, options?: any): AxiosPromise<GetIntProjPtbOut>;
    getIntProjRoleYn(authorization: string, projId?: string, options?: any): AxiosPromise<GetIntRoleOut>;
    patchIntBidInfo(authorization: string, projId: string, input: PostIntProjDtlIn, options?: any): AxiosPromise<IntProjDtl>;
    patchIntContrInfo(authorization: string, projId: string, input: PostIntContrIn, options?: any): AxiosPromise<IntContrMst>;
    patchIntEitInfo(authorization: string, projId: string, input: PostIntProjDtlIn, options?: any): AxiosPromise<IntProjDtl>;
    patchIntProjBasicInfo(authorization: string, projId: string, input: PatchIntProjIn, options?: any): AxiosPromise<IntProjMst>;
    patchIntProjPtbInfo(authorization: string, projId: string, input: PatchIntProjPtbIn, options?: any): AxiosPromise<GetIntProjPtbOut>;
    postIntBidInfo(authorization: string, projId: string, input: PostIntProjDtlIn, options?: any): AxiosPromise<IntProjDtl>;
    postIntContrInfo(authorization: string, projId: string, input: PostIntContrIn, options?: any): AxiosPromise<IntContrMst>;
    postIntEitInfo(authorization: string, projId: string, input: PostIntProjDtlIn, options?: any): AxiosPromise<IntProjDtl>;
    postIntProj(authorization: string, input: PostIntProjIn, options?: any): AxiosPromise<IntProjMst>;
    postIntProjClnRel(authorization: string, clnId?: string, projId?: string, options?: any): AxiosPromise<IntProjClnRel>;
    postIntProjCusRel(authorization: string, input: GetIntProjCusRelListIn, clnId?: string, projId?: string, options?: any): AxiosPromise<Array<IntProjClnCusRel>>;
    selectInbInfoDownloadExcel2(authorization: string, bidStatCd?: string, clnName?: string, deptInChrg?: string, maxContrAmt?: number, maxContrDy?: string, maxCostrExpectAmt?: number, maxTotalCostrAmt?: number, minContrAmt?: number, minContrDy?: string, minCostrExpectAmt?: number, minTotalCostrAmt?: number, orderBy?: string, pageNum?: number, pageSize?: number, projId?: string, projName?: string, options?: any): AxiosPromise<Resource>;
    selectIntAuthorityYn(authorization: string, projId?: string, options?: any): AxiosPromise<string>;
    selectIntContrListPaging(authorization: string, bidStatCd?: string, clnName?: string, deptInChrg?: string, maxContrAmt?: number, maxContrDy?: string, maxCostrExpectAmt?: number, maxTotalCostrAmt?: number, minContrAmt?: number, minContrDy?: string, minCostrExpectAmt?: number, minTotalCostrAmt?: number, orderBy?: string, pageNum?: number, pageSize?: number, projId?: string, projName?: string, options?: any): AxiosPromise<PagingGetIntContrListOut>;
    selectIntContrListSum(authorization: string, bidStatCd?: string, clnName?: string, deptInChrg?: string, maxContrAmt?: number, maxContrDy?: string, maxCostrExpectAmt?: number, maxTotalCostrAmt?: number, minContrAmt?: number, minContrDy?: string, minCostrExpectAmt?: number, minTotalCostrAmt?: number, orderBy?: string, pageNum?: number, pageSize?: number, projId?: string, projName?: string, options?: any): AxiosPromise<GetIntContrListSumOut>;
};
export declare class IntControllerApi extends BaseAPI {
    deleteInfProj(authorization: string, projId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    deleteIntBidInfo(authorization: string, projId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<IntProjDtl, any>>;
    deleteIntEitInfo(authorization: string, projId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<IntProjDtl, any>>;
    deleteIntProjClnRel(authorization: string, clnId?: string, projId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<IntProjClnRel, any>>;
    deleteIntProjCusRel(authorization: string, clnId?: string, cusId?: string, projId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<IntProjClnCusRel, any>>;
    getIntBidInfo(authorization: string, projId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetIntProjDtlOut, any>>;
    getIntContrInfo(authorization: string, projId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetIntContrInfoOut, any>>;
    getIntEitInfo(authorization: string, projId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetIntProjDtlOut, any>>;
    getIntListPaging(authorization: string, bidStatCd?: string, bldName?: string, clnName?: string, costrPurpCd?: Array<string>, icontrYn?: string, maxAreaPy?: number, maxCostrEndDy?: string, maxCostrExpectAmt?: number, maxCostrStartDy?: string, minAreaPy?: number, minCostrEndDy?: string, minCostrExpectAmt?: number, minCostrStartDy?: string, mktPm?: string, orderBy?: string, pageNum?: number, pageSize?: number, projDeptCd?: string, projId?: string, projName?: string, projProgsCd?: Array<string>, salPtb?: Array<string>, userId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetIntListPagingOut, any>>;
    getIntMyListPaging(authorization: string, bidStatCd?: string, bldName?: string, clnName?: string, costrPurpCd?: Array<string>, icontrYn?: string, maxAreaPy?: number, maxCostrEndDy?: string, maxCostrExpectAmt?: number, maxCostrStartDy?: string, minAreaPy?: number, minCostrEndDy?: string, minCostrExpectAmt?: number, minCostrStartDy?: string, mktPm?: string, orderBy?: string, pageNum?: number, pageSize?: number, projDeptCd?: string, projId?: string, projName?: string, projProgsCd?: Array<string>, salPtb?: Array<string>, userId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetIntListPagingOut, any>>;
    getIntProjBasicInfo(authorization: string, projId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetIntProjOut, any>>;
    getIntProjClnCusInfo(authorization: string, projId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetIntClnCusListOut, any>>;
    getIntProjPtbInfo(authorization: string, projId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetIntProjPtbOut, any>>;
    getIntProjRoleYn(authorization: string, projId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetIntRoleOut, any>>;
    patchIntBidInfo(authorization: string, projId: string, input: PostIntProjDtlIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<IntProjDtl, any>>;
    patchIntContrInfo(authorization: string, projId: string, input: PostIntContrIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<IntContrMst, any>>;
    patchIntEitInfo(authorization: string, projId: string, input: PostIntProjDtlIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<IntProjDtl, any>>;
    patchIntProjBasicInfo(authorization: string, projId: string, input: PatchIntProjIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<IntProjMst, any>>;
    patchIntProjPtbInfo(authorization: string, projId: string, input: PatchIntProjPtbIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetIntProjPtbOut, any>>;
    postIntBidInfo(authorization: string, projId: string, input: PostIntProjDtlIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<IntProjDtl, any>>;
    postIntContrInfo(authorization: string, projId: string, input: PostIntContrIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<IntContrMst, any>>;
    postIntEitInfo(authorization: string, projId: string, input: PostIntProjDtlIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<IntProjDtl, any>>;
    postIntProj(authorization: string, input: PostIntProjIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<IntProjMst, any>>;
    postIntProjClnRel(authorization: string, clnId?: string, projId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<IntProjClnRel, any>>;
    postIntProjCusRel(authorization: string, input: GetIntProjCusRelListIn, clnId?: string, projId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<IntProjClnCusRel[], any>>;
    selectInbInfoDownloadExcel2(authorization: string, bidStatCd?: string, clnName?: string, deptInChrg?: string, maxContrAmt?: number, maxContrDy?: string, maxCostrExpectAmt?: number, maxTotalCostrAmt?: number, minContrAmt?: number, minContrDy?: string, minCostrExpectAmt?: number, minTotalCostrAmt?: number, orderBy?: string, pageNum?: number, pageSize?: number, projId?: string, projName?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Resource, any>>;
    selectIntAuthorityYn(authorization: string, projId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    selectIntContrListPaging(authorization: string, bidStatCd?: string, clnName?: string, deptInChrg?: string, maxContrAmt?: number, maxContrDy?: string, maxCostrExpectAmt?: number, maxTotalCostrAmt?: number, minContrAmt?: number, minContrDy?: string, minCostrExpectAmt?: number, minTotalCostrAmt?: number, orderBy?: string, pageNum?: number, pageSize?: number, projId?: string, projName?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetIntContrListOut, any>>;
    selectIntContrListSum(authorization: string, bidStatCd?: string, clnName?: string, deptInChrg?: string, maxContrAmt?: number, maxContrDy?: string, maxCostrExpectAmt?: number, maxTotalCostrAmt?: number, minContrAmt?: number, minContrDy?: string, minCostrExpectAmt?: number, minTotalCostrAmt?: number, orderBy?: string, pageNum?: number, pageSize?: number, projId?: string, projName?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetIntContrListSumOut, any>>;
}
