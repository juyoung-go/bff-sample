import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { GetLeaseClnCusOut } from '../model';
import { GetLeaseClnExclBldOut } from '../model';
import { GetLeaseDetailOut } from '../model';
import { GetLeaseRealtorClnCusOut } from '../model';
import { GtdTaskMst } from '../model';
import { PagingGetContrListOut } from '../model';
import { PagingGetLeaseListOut } from '../model';
import { PagingGetLeaseWorkHstOut } from '../model';
import { PatchLeaseIn } from '../model';
import { PatchLeaseWorkHstIn } from '../model';
import { PostLeaseClnIn } from '../model';
import { PostLeaseCusIn } from '../model';
import { PostLeaseIn } from '../model';
import { PostLeaseWorkHstIn } from '../model';
export declare const RetailLeaseControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    deleteRetailLease: (authorization: string, taskId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteRetailLeaseCln: (authorization: string, clnId?: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteRetailLeaseCus: (authorization: string, clnId?: string, cusId?: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteRetailLeaseRealtorCln: (authorization: string, clnId?: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteRetailLeaseRealtorCus: (authorization: string, clnId?: string, cusId?: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteRetailLeaseWorkHst: (authorization: string, taskId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getRetailLeaseClnCus: (authorization: string, taskId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getRetailLeaseClnExclBld: (authorization: string, clnId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getRetailLeaseClnName: (authorization: string, clnId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getRetailLeaseContrList: (authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getRetailLeaseDetail: (authorization: string, taskId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getRetailLeasePaging: (authorization: string, clnId?: string, clnName?: string, contrYn?: string, ldealStatCd?: Array<string>, lmUserId?: string, maxLDealCmplDy?: string, maxLDealRegDy?: string, maxTipRegDy?: string, minLDealCmplDy?: string, minLDealRegDy?: string, minTipRegDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, ptb?: Array<string>, statCd?: Array<string>, taskName?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getRetailLeaseRealtorClnCus: (authorization: string, taskId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getRetailLeaseWorkHst: (authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchRetailLease: (authorization: string, taskId: string, input: PatchLeaseIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchRetailLeaseCusRel: (authorization: string, clnId?: string, cusId?: string, cusRelCd?: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchRetailLeaseRealtorCusRel: (authorization: string, clnId?: string, cusId?: string, cusRelCd?: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchRetailLeaseWorkHst: (authorization: string, chdTaskId: string, taskId: string, input: PatchLeaseWorkHstIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postRetailLease: (authorization: string, input: PostLeaseIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postRetailLeaseCln: (authorization: string, taskId: string, input: PostLeaseClnIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postRetailLeaseCus: (authorization: string, clnId: string, taskId: string, input: PostLeaseCusIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postRetailLeaseRealtorCln: (authorization: string, taskId: string, input: PostLeaseClnIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postRetailLeaseRealtorCus: (authorization: string, clnId: string, taskId: string, input: PostLeaseCusIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postRetailLeaseWorkHst: (authorization: string, taskId: string, input: PostLeaseWorkHstIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
export declare const RetailLeaseControllerApiFp: (configuration?: Configuration) => {
    deleteRetailLease(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    deleteRetailLeaseCln(authorization: string, clnId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    deleteRetailLeaseCus(authorization: string, clnId?: string, cusId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    deleteRetailLeaseRealtorCln(authorization: string, clnId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    deleteRetailLeaseRealtorCus(authorization: string, clnId?: string, cusId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    deleteRetailLeaseWorkHst(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    getRetailLeaseClnCus(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLeaseClnCusOut>>;
    getRetailLeaseClnExclBld(authorization: string, clnId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetLeaseClnExclBldOut>>>;
    getRetailLeaseClnName(authorization: string, clnId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    getRetailLeaseContrList(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetContrListOut>>;
    getRetailLeaseDetail(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLeaseDetailOut>>;
    getRetailLeasePaging(authorization: string, clnId?: string, clnName?: string, contrYn?: string, ldealStatCd?: Array<string>, lmUserId?: string, maxLDealCmplDy?: string, maxLDealRegDy?: string, maxTipRegDy?: string, minLDealCmplDy?: string, minLDealRegDy?: string, minTipRegDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, ptb?: Array<string>, statCd?: Array<string>, taskName?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetLeaseListOut>>;
    getRetailLeaseRealtorClnCus(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLeaseRealtorClnCusOut>>;
    getRetailLeaseWorkHst(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetLeaseWorkHstOut>>;
    patchRetailLease(authorization: string, taskId: string, input: PatchLeaseIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    patchRetailLeaseCusRel(authorization: string, clnId?: string, cusId?: string, cusRelCd?: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    patchRetailLeaseRealtorCusRel(authorization: string, clnId?: string, cusId?: string, cusRelCd?: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    patchRetailLeaseWorkHst(authorization: string, chdTaskId: string, taskId: string, input: PatchLeaseWorkHstIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postRetailLease(authorization: string, input: PostLeaseIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GtdTaskMst>>;
    postRetailLeaseCln(authorization: string, taskId: string, input: PostLeaseClnIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postRetailLeaseCus(authorization: string, clnId: string, taskId: string, input: PostLeaseCusIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postRetailLeaseRealtorCln(authorization: string, taskId: string, input: PostLeaseClnIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postRetailLeaseRealtorCus(authorization: string, clnId: string, taskId: string, input: PostLeaseCusIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postRetailLeaseWorkHst(authorization: string, taskId: string, input: PostLeaseWorkHstIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
};
export declare const RetailLeaseControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    deleteRetailLease(authorization: string, taskId: string, options?: any): AxiosPromise<number>;
    deleteRetailLeaseCln(authorization: string, clnId?: string, taskId?: string, options?: any): AxiosPromise<number>;
    deleteRetailLeaseCus(authorization: string, clnId?: string, cusId?: string, taskId?: string, options?: any): AxiosPromise<number>;
    deleteRetailLeaseRealtorCln(authorization: string, clnId?: string, taskId?: string, options?: any): AxiosPromise<number>;
    deleteRetailLeaseRealtorCus(authorization: string, clnId?: string, cusId?: string, taskId?: string, options?: any): AxiosPromise<number>;
    deleteRetailLeaseWorkHst(authorization: string, taskId: string, options?: any): AxiosPromise<number>;
    getRetailLeaseClnCus(authorization: string, taskId: string, options?: any): AxiosPromise<GetLeaseClnCusOut>;
    getRetailLeaseClnExclBld(authorization: string, clnId?: string, options?: any): AxiosPromise<Array<GetLeaseClnExclBldOut>>;
    getRetailLeaseClnName(authorization: string, clnId: string, options?: any): AxiosPromise<string>;
    getRetailLeaseContrList(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: any): AxiosPromise<PagingGetContrListOut>;
    getRetailLeaseDetail(authorization: string, taskId: string, options?: any): AxiosPromise<GetLeaseDetailOut>;
    getRetailLeasePaging(authorization: string, clnId?: string, clnName?: string, contrYn?: string, ldealStatCd?: Array<string>, lmUserId?: string, maxLDealCmplDy?: string, maxLDealRegDy?: string, maxTipRegDy?: string, minLDealCmplDy?: string, minLDealRegDy?: string, minTipRegDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, ptb?: Array<string>, statCd?: Array<string>, taskName?: string, options?: any): AxiosPromise<PagingGetLeaseListOut>;
    getRetailLeaseRealtorClnCus(authorization: string, taskId: string, options?: any): AxiosPromise<GetLeaseRealtorClnCusOut>;
    getRetailLeaseWorkHst(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: any): AxiosPromise<PagingGetLeaseWorkHstOut>;
    patchRetailLease(authorization: string, taskId: string, input: PatchLeaseIn, options?: any): AxiosPromise<number>;
    patchRetailLeaseCusRel(authorization: string, clnId?: string, cusId?: string, cusRelCd?: string, taskId?: string, options?: any): AxiosPromise<number>;
    patchRetailLeaseRealtorCusRel(authorization: string, clnId?: string, cusId?: string, cusRelCd?: string, taskId?: string, options?: any): AxiosPromise<number>;
    patchRetailLeaseWorkHst(authorization: string, chdTaskId: string, taskId: string, input: PatchLeaseWorkHstIn, options?: any): AxiosPromise<number>;
    postRetailLease(authorization: string, input: PostLeaseIn, options?: any): AxiosPromise<GtdTaskMst>;
    postRetailLeaseCln(authorization: string, taskId: string, input: PostLeaseClnIn, options?: any): AxiosPromise<number>;
    postRetailLeaseCus(authorization: string, clnId: string, taskId: string, input: PostLeaseCusIn, options?: any): AxiosPromise<number>;
    postRetailLeaseRealtorCln(authorization: string, taskId: string, input: PostLeaseClnIn, options?: any): AxiosPromise<number>;
    postRetailLeaseRealtorCus(authorization: string, clnId: string, taskId: string, input: PostLeaseCusIn, options?: any): AxiosPromise<number>;
    postRetailLeaseWorkHst(authorization: string, taskId: string, input: PostLeaseWorkHstIn, options?: any): AxiosPromise<number>;
};
export declare class RetailLeaseControllerApi extends BaseAPI {
    deleteRetailLease(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    deleteRetailLeaseCln(authorization: string, clnId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    deleteRetailLeaseCus(authorization: string, clnId?: string, cusId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    deleteRetailLeaseRealtorCln(authorization: string, clnId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    deleteRetailLeaseRealtorCus(authorization: string, clnId?: string, cusId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    deleteRetailLeaseWorkHst(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    getRetailLeaseClnCus(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetLeaseClnCusOut, any>>;
    getRetailLeaseClnExclBld(authorization: string, clnId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetLeaseClnExclBldOut[], any>>;
    getRetailLeaseClnName(authorization: string, clnId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    getRetailLeaseContrList(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetContrListOut, any>>;
    getRetailLeaseDetail(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetLeaseDetailOut, any>>;
    getRetailLeasePaging(authorization: string, clnId?: string, clnName?: string, contrYn?: string, ldealStatCd?: Array<string>, lmUserId?: string, maxLDealCmplDy?: string, maxLDealRegDy?: string, maxTipRegDy?: string, minLDealCmplDy?: string, minLDealRegDy?: string, minTipRegDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, ptb?: Array<string>, statCd?: Array<string>, taskName?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetLeaseListOut, any>>;
    getRetailLeaseRealtorClnCus(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetLeaseRealtorClnCusOut, any>>;
    getRetailLeaseWorkHst(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetLeaseWorkHstOut, any>>;
    patchRetailLease(authorization: string, taskId: string, input: PatchLeaseIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    patchRetailLeaseCusRel(authorization: string, clnId?: string, cusId?: string, cusRelCd?: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    patchRetailLeaseRealtorCusRel(authorization: string, clnId?: string, cusId?: string, cusRelCd?: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    patchRetailLeaseWorkHst(authorization: string, chdTaskId: string, taskId: string, input: PatchLeaseWorkHstIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postRetailLease(authorization: string, input: PostLeaseIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GtdTaskMst, any>>;
    postRetailLeaseCln(authorization: string, taskId: string, input: PostLeaseClnIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postRetailLeaseCus(authorization: string, clnId: string, taskId: string, input: PostLeaseCusIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postRetailLeaseRealtorCln(authorization: string, taskId: string, input: PostLeaseClnIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postRetailLeaseRealtorCus(authorization: string, clnId: string, taskId: string, input: PostLeaseCusIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postRetailLeaseWorkHst(authorization: string, taskId: string, input: PostLeaseWorkHstIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
}
