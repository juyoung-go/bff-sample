import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { GetOccupCdtOut } from '../model';
import { GetRentOut } from '../model';
import { GtdRentCdtDtl } from '../model';
import { GtdTaskLinkRel } from '../model';
import { GtdTaskMst } from '../model';
import { GtdTaskTgtRel } from '../model';
import { PagingGetContrListOut } from '../model';
import { PagingGetLinkedWorkOut } from '../model';
import { PagingGetOrdModalOut } from '../model';
import { PagingGetRentListOut } from '../model';
import { PatchOccupCdtModalIn } from '../model';
import { PatchOrdGtdIn } from '../model';
import { PatchRentFailResnIn } from '../model';
import { PatchRentIn } from '../model';
import { PostOrdGtdIn } from '../model';
import { PostRentIn } from '../model';
export declare const RetailRentControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    delRetailOccupCdt: (authorization: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteRetailOrdRel: (authorization: string, ordId?: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteRetailRent: (authorization: string, taskId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteRetailTaskRel: (authorization: string, chdTaskId?: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getRetailContrList: (authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getRetailLinkedWork: (authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getRetailOccupCdt: (authorization: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getRetailOrdList: (authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, searchCf?: string, searchVal?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getRetailRent: (authorization: string, taskId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getRetailRentListPaging: (authorization: string, bjdCd?: Array<string>, clnId?: string, clnName?: string, dealMoveResnCd?: string, failResnCd?: string, firRentExpectLocalCd?: string, maxOnlaPy?: number, maxRentCmplDy?: string, maxRentTaskRegDy?: string, maxTipRegDy?: string, maxTodoDy?: string, minOnlaPy?: number, minRentCmplDy?: string, minRentTaskRegDy?: string, minTipRegDy?: string, minTodoDy?: string, mktDealYn?: string, nlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, ptb?: Array<string>, secRentExpectLocalCd?: string, statCd?: Array<string>, taskId?: string, taskName?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchRetailDealFailResn: (authorization: string, taskId: string, input: PatchRentFailResnIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchRetailOccupCdt: (authorization: string, input: PatchOccupCdtModalIn, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchRetailOrdRel: (authorization: string, input: PatchOrdGtdIn, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchRetailRent: (authorization: string, taskId: string, input: PatchRentIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchRetailRentRel: (authorization: string, input: PostOrdGtdIn, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postRetailRent: (authorization: string, input: PostRentIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
export declare const RetailRentControllerApiFp: (configuration?: Configuration) => {
    delRetailOccupCdt(authorization: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GtdRentCdtDtl>>;
    deleteRetailOrdRel(authorization: string, ordId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GtdTaskTgtRel>>;
    deleteRetailRent(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GtdTaskMst>>;
    deleteRetailTaskRel(authorization: string, chdTaskId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GtdTaskLinkRel>>;
    getRetailContrList(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetContrListOut>>;
    getRetailLinkedWork(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetLinkedWorkOut>>;
    getRetailOccupCdt(authorization: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetOccupCdtOut>>;
    getRetailOrdList(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, searchCf?: string, searchVal?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetOrdModalOut>>;
    getRetailRent(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetRentOut>>;
    getRetailRentListPaging(authorization: string, bjdCd?: Array<string>, clnId?: string, clnName?: string, dealMoveResnCd?: string, failResnCd?: string, firRentExpectLocalCd?: string, maxOnlaPy?: number, maxRentCmplDy?: string, maxRentTaskRegDy?: string, maxTipRegDy?: string, maxTodoDy?: string, minOnlaPy?: number, minRentCmplDy?: string, minRentTaskRegDy?: string, minTipRegDy?: string, minTodoDy?: string, mktDealYn?: string, nlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, ptb?: Array<string>, secRentExpectLocalCd?: string, statCd?: Array<string>, taskId?: string, taskName?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetRentListOut>>;
    patchRetailDealFailResn(authorization: string, taskId: string, input: PatchRentFailResnIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    patchRetailOccupCdt(authorization: string, input: PatchOccupCdtModalIn, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GtdRentCdtDtl>>;
    patchRetailOrdRel(authorization: string, input: PatchOrdGtdIn, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GtdTaskTgtRel>>>;
    patchRetailRent(authorization: string, taskId: string, input: PatchRentIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GtdTaskMst>>;
    patchRetailRentRel(authorization: string, input: PostOrdGtdIn, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GtdTaskLinkRel>>>;
    postRetailRent(authorization: string, input: PostRentIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GtdTaskMst>>;
};
export declare const RetailRentControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    delRetailOccupCdt(authorization: string, taskId?: string, options?: any): AxiosPromise<GtdRentCdtDtl>;
    deleteRetailOrdRel(authorization: string, ordId?: string, taskId?: string, options?: any): AxiosPromise<GtdTaskTgtRel>;
    deleteRetailRent(authorization: string, taskId: string, options?: any): AxiosPromise<GtdTaskMst>;
    deleteRetailTaskRel(authorization: string, chdTaskId?: string, taskId?: string, options?: any): AxiosPromise<GtdTaskLinkRel>;
    getRetailContrList(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: any): AxiosPromise<PagingGetContrListOut>;
    getRetailLinkedWork(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: any): AxiosPromise<PagingGetLinkedWorkOut>;
    getRetailOccupCdt(authorization: string, taskId?: string, options?: any): AxiosPromise<GetOccupCdtOut>;
    getRetailOrdList(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, searchCf?: string, searchVal?: string, options?: any): AxiosPromise<PagingGetOrdModalOut>;
    getRetailRent(authorization: string, taskId: string, options?: any): AxiosPromise<GetRentOut>;
    getRetailRentListPaging(authorization: string, bjdCd?: Array<string>, clnId?: string, clnName?: string, dealMoveResnCd?: string, failResnCd?: string, firRentExpectLocalCd?: string, maxOnlaPy?: number, maxRentCmplDy?: string, maxRentTaskRegDy?: string, maxTipRegDy?: string, maxTodoDy?: string, minOnlaPy?: number, minRentCmplDy?: string, minRentTaskRegDy?: string, minTipRegDy?: string, minTodoDy?: string, mktDealYn?: string, nlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, ptb?: Array<string>, secRentExpectLocalCd?: string, statCd?: Array<string>, taskId?: string, taskName?: string, options?: any): AxiosPromise<PagingGetRentListOut>;
    patchRetailDealFailResn(authorization: string, taskId: string, input: PatchRentFailResnIn, options?: any): AxiosPromise<number>;
    patchRetailOccupCdt(authorization: string, input: PatchOccupCdtModalIn, taskId?: string, options?: any): AxiosPromise<GtdRentCdtDtl>;
    patchRetailOrdRel(authorization: string, input: PatchOrdGtdIn, taskId?: string, options?: any): AxiosPromise<Array<GtdTaskTgtRel>>;
    patchRetailRent(authorization: string, taskId: string, input: PatchRentIn, options?: any): AxiosPromise<GtdTaskMst>;
    patchRetailRentRel(authorization: string, input: PostOrdGtdIn, taskId?: string, options?: any): AxiosPromise<Array<GtdTaskLinkRel>>;
    postRetailRent(authorization: string, input: PostRentIn, options?: any): AxiosPromise<GtdTaskMst>;
};
export declare class RetailRentControllerApi extends BaseAPI {
    delRetailOccupCdt(authorization: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GtdRentCdtDtl, any>>;
    deleteRetailOrdRel(authorization: string, ordId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GtdTaskTgtRel, any>>;
    deleteRetailRent(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GtdTaskMst, any>>;
    deleteRetailTaskRel(authorization: string, chdTaskId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GtdTaskLinkRel, any>>;
    getRetailContrList(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetContrListOut, any>>;
    getRetailLinkedWork(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetLinkedWorkOut, any>>;
    getRetailOccupCdt(authorization: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetOccupCdtOut, any>>;
    getRetailOrdList(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, searchCf?: string, searchVal?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetOrdModalOut, any>>;
    getRetailRent(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetRentOut, any>>;
    getRetailRentListPaging(authorization: string, bjdCd?: Array<string>, clnId?: string, clnName?: string, dealMoveResnCd?: string, failResnCd?: string, firRentExpectLocalCd?: string, maxOnlaPy?: number, maxRentCmplDy?: string, maxRentTaskRegDy?: string, maxTipRegDy?: string, maxTodoDy?: string, minOnlaPy?: number, minRentCmplDy?: string, minRentTaskRegDy?: string, minTipRegDy?: string, minTodoDy?: string, mktDealYn?: string, nlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, ptb?: Array<string>, secRentExpectLocalCd?: string, statCd?: Array<string>, taskId?: string, taskName?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetRentListOut, any>>;
    patchRetailDealFailResn(authorization: string, taskId: string, input: PatchRentFailResnIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    patchRetailOccupCdt(authorization: string, input: PatchOccupCdtModalIn, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GtdRentCdtDtl, any>>;
    patchRetailOrdRel(authorization: string, input: PatchOrdGtdIn, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GtdTaskTgtRel[], any>>;
    patchRetailRent(authorization: string, taskId: string, input: PatchRentIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GtdTaskMst, any>>;
    patchRetailRentRel(authorization: string, input: PostOrdGtdIn, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GtdTaskLinkRel[], any>>;
    postRetailRent(authorization: string, input: PostRentIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GtdTaskMst, any>>;
}
