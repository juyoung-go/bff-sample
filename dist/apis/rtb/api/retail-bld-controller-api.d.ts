import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { GetRetailBldOut } from '../model';
import { GetRetailPrdForCardOut } from '../model';
import { GetRetailPrdOut } from '../model';
export declare const RetailBldControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    getPhtListForBldCard: (authorization: string, bldId: string, phtOrdCd?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getPrdListForBldCard: (authorization: string, bldId: string, bldId2?: string, bldLeaseYn?: string, createUserId?: string, excludingIndustryLargeCd?: string, excludingIndustryMiddleCd?: Array<string>, flrOpt?: Array<string>, freeParkCnt?: number, includingIndustryLargeCd?: string, includingIndustryMiddleCd?: Array<string>, intYn?: string, maxDpstAmt?: number, maxMtnFeeAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, maxRentAmt?: number, minDpstAmt?: number, minMtnFeeAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, minRentAmt?: number, partnYn?: string, premiumYn?: string, searchType?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getSearchBldForRetail: (authorization: string, acSplyTypeCd?: string, allDayOpenTypeCd?: string, bldLeaseYn?: string, bltypDtlId?: string, bltypId?: Array<string>, conYn?: string, costrStatCd?: string, createUserId?: string, elvStatCd?: string, exclBldYn?: string, excludingIndustryLargeCd?: string, excludingIndustryMiddleCd?: Array<string>, flrOpt?: Array<string>, freeParkCnt?: number, hdyOpenTypeCd?: string, heatSplyTypeCd?: string, houseOfficeYn?: string, includingIndustryLargeCd?: string, includingIndustryMiddleCd?: Array<string>, intYn?: string, mainConYn?: string, maxCmplCostrRmdlYear?: string, maxDpstAmt?: number, maxLastChkDy?: string, maxMtnFeeAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, maxRentAmt?: number, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, maxWlkTimeMin?: number, minCmplCostrRmdlYear?: string, minDpstAmt?: number, minLastChkDy?: string, minMtnFeeAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, minRentAmt?: number, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, minWlkTimeMin?: number, neLat?: number, neLng?: number, orderBy?: string, paroTypeCd?: Array<string>, partnYn?: string, phtOrdCd?: string, pkltTypeCd?: string, prdYn?: string, premiumYn?: string, rentCfCd?: string, searchType?: string, servOpt?: string, swLat?: number, swLng?: number, wcTypeCd?: Array<string>, zoneGeom?: string, zoneId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getSearchPrdForRetail: (authorization: string, acSplyTypeCd?: string, allDayOpenTypeCd?: string, bldLeaseYn?: string, bltypDtlId?: string, bltypId?: Array<string>, conYn?: string, costrStatCd?: string, createUserId?: string, elvStatCd?: string, exclBldYn?: string, excludingIndustryLargeCd?: string, excludingIndustryMiddleCd?: Array<string>, flrOpt?: Array<string>, freeParkCnt?: number, hdyOpenTypeCd?: string, heatSplyTypeCd?: string, houseOfficeYn?: string, includingIndustryLargeCd?: string, includingIndustryMiddleCd?: Array<string>, intYn?: string, mainConYn?: string, maxCmplCostrRmdlYear?: string, maxDpstAmt?: number, maxLastChkDy?: string, maxMtnFeeAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, maxRentAmt?: number, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, maxWlkTimeMin?: number, minCmplCostrRmdlYear?: string, minDpstAmt?: number, minLastChkDy?: string, minMtnFeeAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, minRentAmt?: number, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, minWlkTimeMin?: number, neLat?: number, neLng?: number, orderBy?: string, paroTypeCd?: Array<string>, partnYn?: string, phtOrdCd?: string, pkltTypeCd?: string, prdYn?: string, premiumYn?: string, rentCfCd?: string, searchType?: string, servOpt?: string, swLat?: number, swLng?: number, wcTypeCd?: Array<string>, zoneGeom?: string, zoneId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
export declare const RetailBldControllerApiFp: (configuration?: Configuration) => {
    getPhtListForBldCard(authorization: string, bldId: string, phtOrdCd?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<string>>>;
    getPrdListForBldCard(authorization: string, bldId: string, bldId2?: string, bldLeaseYn?: string, createUserId?: string, excludingIndustryLargeCd?: string, excludingIndustryMiddleCd?: Array<string>, flrOpt?: Array<string>, freeParkCnt?: number, includingIndustryLargeCd?: string, includingIndustryMiddleCd?: Array<string>, intYn?: string, maxDpstAmt?: number, maxMtnFeeAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, maxRentAmt?: number, minDpstAmt?: number, minMtnFeeAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, minRentAmt?: number, partnYn?: string, premiumYn?: string, searchType?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetRetailPrdForCardOut>>>;
    getSearchBldForRetail(authorization: string, acSplyTypeCd?: string, allDayOpenTypeCd?: string, bldLeaseYn?: string, bltypDtlId?: string, bltypId?: Array<string>, conYn?: string, costrStatCd?: string, createUserId?: string, elvStatCd?: string, exclBldYn?: string, excludingIndustryLargeCd?: string, excludingIndustryMiddleCd?: Array<string>, flrOpt?: Array<string>, freeParkCnt?: number, hdyOpenTypeCd?: string, heatSplyTypeCd?: string, houseOfficeYn?: string, includingIndustryLargeCd?: string, includingIndustryMiddleCd?: Array<string>, intYn?: string, mainConYn?: string, maxCmplCostrRmdlYear?: string, maxDpstAmt?: number, maxLastChkDy?: string, maxMtnFeeAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, maxRentAmt?: number, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, maxWlkTimeMin?: number, minCmplCostrRmdlYear?: string, minDpstAmt?: number, minLastChkDy?: string, minMtnFeeAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, minRentAmt?: number, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, minWlkTimeMin?: number, neLat?: number, neLng?: number, orderBy?: string, paroTypeCd?: Array<string>, partnYn?: string, phtOrdCd?: string, pkltTypeCd?: string, prdYn?: string, premiumYn?: string, rentCfCd?: string, searchType?: string, servOpt?: string, swLat?: number, swLng?: number, wcTypeCd?: Array<string>, zoneGeom?: string, zoneId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetRetailBldOut>>;
    getSearchPrdForRetail(authorization: string, acSplyTypeCd?: string, allDayOpenTypeCd?: string, bldLeaseYn?: string, bltypDtlId?: string, bltypId?: Array<string>, conYn?: string, costrStatCd?: string, createUserId?: string, elvStatCd?: string, exclBldYn?: string, excludingIndustryLargeCd?: string, excludingIndustryMiddleCd?: Array<string>, flrOpt?: Array<string>, freeParkCnt?: number, hdyOpenTypeCd?: string, heatSplyTypeCd?: string, houseOfficeYn?: string, includingIndustryLargeCd?: string, includingIndustryMiddleCd?: Array<string>, intYn?: string, mainConYn?: string, maxCmplCostrRmdlYear?: string, maxDpstAmt?: number, maxLastChkDy?: string, maxMtnFeeAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, maxRentAmt?: number, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, maxWlkTimeMin?: number, minCmplCostrRmdlYear?: string, minDpstAmt?: number, minLastChkDy?: string, minMtnFeeAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, minRentAmt?: number, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, minWlkTimeMin?: number, neLat?: number, neLng?: number, orderBy?: string, paroTypeCd?: Array<string>, partnYn?: string, phtOrdCd?: string, pkltTypeCd?: string, prdYn?: string, premiumYn?: string, rentCfCd?: string, searchType?: string, servOpt?: string, swLat?: number, swLng?: number, wcTypeCd?: Array<string>, zoneGeom?: string, zoneId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetRetailPrdOut>>;
};
export declare const RetailBldControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    getPhtListForBldCard(authorization: string, bldId: string, phtOrdCd?: string, options?: any): AxiosPromise<Array<string>>;
    getPrdListForBldCard(authorization: string, bldId: string, bldId2?: string, bldLeaseYn?: string, createUserId?: string, excludingIndustryLargeCd?: string, excludingIndustryMiddleCd?: Array<string>, flrOpt?: Array<string>, freeParkCnt?: number, includingIndustryLargeCd?: string, includingIndustryMiddleCd?: Array<string>, intYn?: string, maxDpstAmt?: number, maxMtnFeeAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, maxRentAmt?: number, minDpstAmt?: number, minMtnFeeAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, minRentAmt?: number, partnYn?: string, premiumYn?: string, searchType?: string, options?: any): AxiosPromise<Array<GetRetailPrdForCardOut>>;
    getSearchBldForRetail(authorization: string, acSplyTypeCd?: string, allDayOpenTypeCd?: string, bldLeaseYn?: string, bltypDtlId?: string, bltypId?: Array<string>, conYn?: string, costrStatCd?: string, createUserId?: string, elvStatCd?: string, exclBldYn?: string, excludingIndustryLargeCd?: string, excludingIndustryMiddleCd?: Array<string>, flrOpt?: Array<string>, freeParkCnt?: number, hdyOpenTypeCd?: string, heatSplyTypeCd?: string, houseOfficeYn?: string, includingIndustryLargeCd?: string, includingIndustryMiddleCd?: Array<string>, intYn?: string, mainConYn?: string, maxCmplCostrRmdlYear?: string, maxDpstAmt?: number, maxLastChkDy?: string, maxMtnFeeAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, maxRentAmt?: number, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, maxWlkTimeMin?: number, minCmplCostrRmdlYear?: string, minDpstAmt?: number, minLastChkDy?: string, minMtnFeeAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, minRentAmt?: number, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, minWlkTimeMin?: number, neLat?: number, neLng?: number, orderBy?: string, paroTypeCd?: Array<string>, partnYn?: string, phtOrdCd?: string, pkltTypeCd?: string, prdYn?: string, premiumYn?: string, rentCfCd?: string, searchType?: string, servOpt?: string, swLat?: number, swLng?: number, wcTypeCd?: Array<string>, zoneGeom?: string, zoneId?: string, options?: any): AxiosPromise<GetRetailBldOut>;
    getSearchPrdForRetail(authorization: string, acSplyTypeCd?: string, allDayOpenTypeCd?: string, bldLeaseYn?: string, bltypDtlId?: string, bltypId?: Array<string>, conYn?: string, costrStatCd?: string, createUserId?: string, elvStatCd?: string, exclBldYn?: string, excludingIndustryLargeCd?: string, excludingIndustryMiddleCd?: Array<string>, flrOpt?: Array<string>, freeParkCnt?: number, hdyOpenTypeCd?: string, heatSplyTypeCd?: string, houseOfficeYn?: string, includingIndustryLargeCd?: string, includingIndustryMiddleCd?: Array<string>, intYn?: string, mainConYn?: string, maxCmplCostrRmdlYear?: string, maxDpstAmt?: number, maxLastChkDy?: string, maxMtnFeeAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, maxRentAmt?: number, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, maxWlkTimeMin?: number, minCmplCostrRmdlYear?: string, minDpstAmt?: number, minLastChkDy?: string, minMtnFeeAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, minRentAmt?: number, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, minWlkTimeMin?: number, neLat?: number, neLng?: number, orderBy?: string, paroTypeCd?: Array<string>, partnYn?: string, phtOrdCd?: string, pkltTypeCd?: string, prdYn?: string, premiumYn?: string, rentCfCd?: string, searchType?: string, servOpt?: string, swLat?: number, swLng?: number, wcTypeCd?: Array<string>, zoneGeom?: string, zoneId?: string, options?: any): AxiosPromise<GetRetailPrdOut>;
};
export declare class RetailBldControllerApi extends BaseAPI {
    getPhtListForBldCard(authorization: string, bldId: string, phtOrdCd?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string[], any>>;
    getPrdListForBldCard(authorization: string, bldId: string, bldId2?: string, bldLeaseYn?: string, createUserId?: string, excludingIndustryLargeCd?: string, excludingIndustryMiddleCd?: Array<string>, flrOpt?: Array<string>, freeParkCnt?: number, includingIndustryLargeCd?: string, includingIndustryMiddleCd?: Array<string>, intYn?: string, maxDpstAmt?: number, maxMtnFeeAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, maxRentAmt?: number, minDpstAmt?: number, minMtnFeeAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, minRentAmt?: number, partnYn?: string, premiumYn?: string, searchType?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetRetailPrdForCardOut[], any>>;
    getSearchBldForRetail(authorization: string, acSplyTypeCd?: string, allDayOpenTypeCd?: string, bldLeaseYn?: string, bltypDtlId?: string, bltypId?: Array<string>, conYn?: string, costrStatCd?: string, createUserId?: string, elvStatCd?: string, exclBldYn?: string, excludingIndustryLargeCd?: string, excludingIndustryMiddleCd?: Array<string>, flrOpt?: Array<string>, freeParkCnt?: number, hdyOpenTypeCd?: string, heatSplyTypeCd?: string, houseOfficeYn?: string, includingIndustryLargeCd?: string, includingIndustryMiddleCd?: Array<string>, intYn?: string, mainConYn?: string, maxCmplCostrRmdlYear?: string, maxDpstAmt?: number, maxLastChkDy?: string, maxMtnFeeAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, maxRentAmt?: number, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, maxWlkTimeMin?: number, minCmplCostrRmdlYear?: string, minDpstAmt?: number, minLastChkDy?: string, minMtnFeeAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, minRentAmt?: number, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, minWlkTimeMin?: number, neLat?: number, neLng?: number, orderBy?: string, paroTypeCd?: Array<string>, partnYn?: string, phtOrdCd?: string, pkltTypeCd?: string, prdYn?: string, premiumYn?: string, rentCfCd?: string, searchType?: string, servOpt?: string, swLat?: number, swLng?: number, wcTypeCd?: Array<string>, zoneGeom?: string, zoneId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetRetailBldOut, any>>;
    getSearchPrdForRetail(authorization: string, acSplyTypeCd?: string, allDayOpenTypeCd?: string, bldLeaseYn?: string, bltypDtlId?: string, bltypId?: Array<string>, conYn?: string, costrStatCd?: string, createUserId?: string, elvStatCd?: string, exclBldYn?: string, excludingIndustryLargeCd?: string, excludingIndustryMiddleCd?: Array<string>, flrOpt?: Array<string>, freeParkCnt?: number, hdyOpenTypeCd?: string, heatSplyTypeCd?: string, houseOfficeYn?: string, includingIndustryLargeCd?: string, includingIndustryMiddleCd?: Array<string>, intYn?: string, mainConYn?: string, maxCmplCostrRmdlYear?: string, maxDpstAmt?: number, maxLastChkDy?: string, maxMtnFeeAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, maxRentAmt?: number, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, maxWlkTimeMin?: number, minCmplCostrRmdlYear?: string, minDpstAmt?: number, minLastChkDy?: string, minMtnFeeAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, minRentAmt?: number, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, minWlkTimeMin?: number, neLat?: number, neLng?: number, orderBy?: string, paroTypeCd?: Array<string>, partnYn?: string, phtOrdCd?: string, pkltTypeCd?: string, prdYn?: string, premiumYn?: string, rentCfCd?: string, searchType?: string, servOpt?: string, swLat?: number, swLng?: number, wcTypeCd?: Array<string>, zoneGeom?: string, zoneId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetRetailPrdOut, any>>;
}
