
/**
*
* Generated by Rsquare Codegen (v3.0.1) (2022-07-22 14:26:31 192)
*
* 사무실
*
*/


import axios from 'axios'
import { Injectable } from "@nestjs/common"
import { Remote } from '../rfind.config'

import PagingMyProductOut from '../models/PagingMyProductOut'
import PostInterestTourOut from '../models/PostInterestTourOut'
import WwwPostInterestOrTourPrdIn from '../models/WwwPostInterestOrTourPrdIn'
import DeleteInterestTourOut from '../models/DeleteInterestTourOut'
import WwwDeleteInterestOrTourIn from '../models/WwwDeleteInterestOrTourIn'
import WwwGetPrdPht from '../models/WwwGetPrdPht'
import WwwGetPrdCompareOut from '../models/WwwGetPrdCompareOut'
import WwwGetPrdBasicInfo from '../models/WwwGetPrdBasicInfo'

/**
* @description 사무실
*/
@Injectable()
export default class WwwMbrPrdService {

  /**
  * @summary 로그인된 유저 관심 또는 투어 사무실 조회
  */
  async getInterestOrTourPrds (orderBy?: string, pageSize?: number, pageNum?: number, hopeTypeCd?: string, mbrId?: string): Promise<PagingMyProductOut> {
    const data = await axios.get(Remote + '/web/www/prd/interest-tour', {params:{orderBy, pageSize, pageNum, hopeTypeCd, mbrId}}) as PagingMyProductOut
    return new Promise<PagingMyProductOut>((resolve)=>{resolve(data)})
  }

  /**
  * @summary 로그인된 유저의 관심 투어 사무실 등록
  */
  async postInterestOrTourPrds (wwwPostInterestOrTourPrdIn: WwwPostInterestOrTourPrdIn): Promise<PostInterestTourOut> {
    const data = await axios.post(Remote + '/web/www/prd/interest-tour', wwwPostInterestOrTourPrdIn) as PostInterestTourOut
    return new Promise<PostInterestTourOut>((resolve)=>{resolve(data)})
  }

  /**
  * @summary 로그인된 유저의 관심 투어 사무실 삭제
  */
  async deleteInterestOrTourPrd (wwwDeleteInterestOrTourIn: WwwDeleteInterestOrTourIn): Promise<DeleteInterestTourOut> {
    const data = await axios.patch(Remote + '/web/www/prd/interest-tour', wwwDeleteInterestOrTourIn) as DeleteInterestTourOut
    return new Promise<DeleteInterestTourOut>((resolve)=>{resolve(data)})
  }

  /**
  * @summary 로그인된 유저에게 추천된 사무실 목록을 조회
  */
  async getRecommendPrds (orderBy?: string, pageSize?: number, pageNum?: number, mbrId?: string): Promise<PagingMyProductOut> {
    const data = await axios.get(Remote + '/web/www/prd/recommend', {params:{orderBy, pageSize, pageNum, mbrId}}) as PagingMyProductOut
    return new Promise<PagingMyProductOut>((resolve)=>{resolve(data)})
  }

  /**
  * @summary 사무실 전체 사진 리스트 조회
  */
  async getPrdPhtList (prdId: string): Promise<WwwGetPrdPht[]> {
    const data = await axios.get(Remote + '/web/www/prd/pht', {params:{prdId}}) as WwwGetPrdPht[]
    return new Promise<WwwGetPrdPht[]>((resolve)=>{resolve(data)})
  }

  /**
  * @summary 사무실 기본 정보 다건 조회
  */
  async getPrdsCompare (prdIds: string): Promise<WwwGetPrdCompareOut[]> {
    const data = await axios.get(Remote + '/web/www/prd/compare', {params:{prdIds}}) as WwwGetPrdCompareOut[]
    return new Promise<WwwGetPrdCompareOut[]>((resolve)=>{resolve(data)})
  }

  /**
  * @summary 사무실 기본 정보 단건 조회
  */
  async getPrdBasicInfo (prdId: string): Promise<WwwGetPrdBasicInfo> {
    const data = await axios.get(Remote + '/web/www/prd/basic', {params:{prdId}}) as WwwGetPrdBasicInfo
    return new Promise<WwwGetPrdBasicInfo>((resolve)=>{resolve(data)})
  }

  /**
  * @summary 사무실 기본 정보 다건 조회
  */
  async getPrdsBasicInfo (prdIds: string[]): Promise<WwwGetPrdBasicInfo[]> {
    const data = await axios.get(Remote + '/web/www/prd/basic-multiple', {params:{prdIds}}) as WwwGetPrdBasicInfo[]
    return new Promise<WwwGetPrdBasicInfo[]>((resolve)=>{resolve(data)})
  }

}
