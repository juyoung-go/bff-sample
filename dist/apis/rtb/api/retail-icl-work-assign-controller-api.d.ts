import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { PagingGetPhtShtAssignOut } from '../model';
import { PagingGetRetailPrdChkAssignOut } from '../model';
import { PatchIclWorkTaskStatIn } from '../model';
import { PostIclWorkAssignIn } from '../model';
import { PostRetailPrdChkWorkAssignIn } from '../model';
export declare const RetailIclWorkAssignControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    getPrdChkAssignPaging1: (authorization: string, bjdCd?: Array<string>, bldId?: string, bldLastCallYn?: string, bltypDtlId?: string, bltypId?: Array<string>, bonBunji?: string, buBunji?: string, cmplCostrYearYn?: string, collectCycleCd?: string, collectCycleResnCd?: string, costrStatCd?: string, firstFlrGlaM2?: number, flrCntYn?: string, houseOfficeYn?: string, mainConYn?: string, mainPurposeCd?: string, maxBldLastCallDy?: string, maxCmplCostrYear?: string, maxFlrCnt?: number, maxNlaPy?: number, maxPrdChkDy?: string, maxRmdlYear?: number, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, minBldLastCallDy?: string, minCmplCostrYear?: string, minFlrCnt?: number, minNlaPy?: number, minPrdChkDy?: string, minRmdlYear?: number, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, prdChkYn?: string, prdYn?: string, rentCfCd?: Array<string>, rmdlYearYn?: string, servOpt?: string, tmAsgmtDlyCd?: string, tmAsgmtDlyResn?: string, zoneGeom?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getRetailPhtShtAssignPaging: (authorization: string, bjdCd?: Array<string>, bldId?: string, bldName?: string, bldPhtCollectExptCd?: string, bltypCnt?: number, bltypDtlId?: string, bltypId?: Array<string>, bonBunji?: string, buBunji?: string, cmplCostrYearYn?: string, collectCycleCd?: string, collectCycleResnCd?: string, costrStatCd?: string, exteriorCaptPsblYn?: string, firstFlrGlaM2?: number, flrCntYn?: string, houseOfficeYn?: string, mainPurposeCd?: string, maxCmplCostrYear?: string, maxFlrCnt?: number, maxNlaPy?: number, maxPrdCreateDt?: string, maxPrdUpdateDt?: string, maxRmdlYear?: number, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, minCmplCostrYear?: string, minFlrCnt?: number, minNlaPy?: number, minPrdCreateDt?: string, minPrdUpdateDt?: string, minRmdlYear?: number, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, prdYn?: string, rentCfCd?: Array<string>, rmdlYearYn?: string, servOpt?: string, unKnownPht?: string, workPrcsCd?: string, zoneGeom?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchRetailIclWorkTaskStat: (authorization: string, input: PatchIclWorkTaskStatIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postRetailPhtShtAssign: (authorization: string, input: PostIclWorkAssignIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postRetailPrdChkWorkAssign: (authorization: string, input: PostRetailPrdChkWorkAssignIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
export declare const RetailIclWorkAssignControllerApiFp: (configuration?: Configuration) => {
    getPrdChkAssignPaging1(authorization: string, bjdCd?: Array<string>, bldId?: string, bldLastCallYn?: string, bltypDtlId?: string, bltypId?: Array<string>, bonBunji?: string, buBunji?: string, cmplCostrYearYn?: string, collectCycleCd?: string, collectCycleResnCd?: string, costrStatCd?: string, firstFlrGlaM2?: number, flrCntYn?: string, houseOfficeYn?: string, mainConYn?: string, mainPurposeCd?: string, maxBldLastCallDy?: string, maxCmplCostrYear?: string, maxFlrCnt?: number, maxNlaPy?: number, maxPrdChkDy?: string, maxRmdlYear?: number, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, minBldLastCallDy?: string, minCmplCostrYear?: string, minFlrCnt?: number, minNlaPy?: number, minPrdChkDy?: string, minRmdlYear?: number, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, prdChkYn?: string, prdYn?: string, rentCfCd?: Array<string>, rmdlYearYn?: string, servOpt?: string, tmAsgmtDlyCd?: string, tmAsgmtDlyResn?: string, zoneGeom?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetRetailPrdChkAssignOut>>;
    getRetailPhtShtAssignPaging(authorization: string, bjdCd?: Array<string>, bldId?: string, bldName?: string, bldPhtCollectExptCd?: string, bltypCnt?: number, bltypDtlId?: string, bltypId?: Array<string>, bonBunji?: string, buBunji?: string, cmplCostrYearYn?: string, collectCycleCd?: string, collectCycleResnCd?: string, costrStatCd?: string, exteriorCaptPsblYn?: string, firstFlrGlaM2?: number, flrCntYn?: string, houseOfficeYn?: string, mainPurposeCd?: string, maxCmplCostrYear?: string, maxFlrCnt?: number, maxNlaPy?: number, maxPrdCreateDt?: string, maxPrdUpdateDt?: string, maxRmdlYear?: number, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, minCmplCostrYear?: string, minFlrCnt?: number, minNlaPy?: number, minPrdCreateDt?: string, minPrdUpdateDt?: string, minRmdlYear?: number, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, prdYn?: string, rentCfCd?: Array<string>, rmdlYearYn?: string, servOpt?: string, unKnownPht?: string, workPrcsCd?: string, zoneGeom?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetPhtShtAssignOut>>;
    patchRetailIclWorkTaskStat(authorization: string, input: PatchIclWorkTaskStatIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    postRetailPhtShtAssign(authorization: string, input: PostIclWorkAssignIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    postRetailPrdChkWorkAssign(authorization: string, input: PostRetailPrdChkWorkAssignIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
};
export declare const RetailIclWorkAssignControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    getPrdChkAssignPaging1(authorization: string, bjdCd?: Array<string>, bldId?: string, bldLastCallYn?: string, bltypDtlId?: string, bltypId?: Array<string>, bonBunji?: string, buBunji?: string, cmplCostrYearYn?: string, collectCycleCd?: string, collectCycleResnCd?: string, costrStatCd?: string, firstFlrGlaM2?: number, flrCntYn?: string, houseOfficeYn?: string, mainConYn?: string, mainPurposeCd?: string, maxBldLastCallDy?: string, maxCmplCostrYear?: string, maxFlrCnt?: number, maxNlaPy?: number, maxPrdChkDy?: string, maxRmdlYear?: number, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, minBldLastCallDy?: string, minCmplCostrYear?: string, minFlrCnt?: number, minNlaPy?: number, minPrdChkDy?: string, minRmdlYear?: number, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, prdChkYn?: string, prdYn?: string, rentCfCd?: Array<string>, rmdlYearYn?: string, servOpt?: string, tmAsgmtDlyCd?: string, tmAsgmtDlyResn?: string, zoneGeom?: string, options?: any): AxiosPromise<PagingGetRetailPrdChkAssignOut>;
    getRetailPhtShtAssignPaging(authorization: string, bjdCd?: Array<string>, bldId?: string, bldName?: string, bldPhtCollectExptCd?: string, bltypCnt?: number, bltypDtlId?: string, bltypId?: Array<string>, bonBunji?: string, buBunji?: string, cmplCostrYearYn?: string, collectCycleCd?: string, collectCycleResnCd?: string, costrStatCd?: string, exteriorCaptPsblYn?: string, firstFlrGlaM2?: number, flrCntYn?: string, houseOfficeYn?: string, mainPurposeCd?: string, maxCmplCostrYear?: string, maxFlrCnt?: number, maxNlaPy?: number, maxPrdCreateDt?: string, maxPrdUpdateDt?: string, maxRmdlYear?: number, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, minCmplCostrYear?: string, minFlrCnt?: number, minNlaPy?: number, minPrdCreateDt?: string, minPrdUpdateDt?: string, minRmdlYear?: number, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, prdYn?: string, rentCfCd?: Array<string>, rmdlYearYn?: string, servOpt?: string, unKnownPht?: string, workPrcsCd?: string, zoneGeom?: string, options?: any): AxiosPromise<PagingGetPhtShtAssignOut>;
    patchRetailIclWorkTaskStat(authorization: string, input: PatchIclWorkTaskStatIn, options?: any): AxiosPromise<void>;
    postRetailPhtShtAssign(authorization: string, input: PostIclWorkAssignIn, options?: any): AxiosPromise<string>;
    postRetailPrdChkWorkAssign(authorization: string, input: PostRetailPrdChkWorkAssignIn, options?: any): AxiosPromise<string>;
};
export declare class RetailIclWorkAssignControllerApi extends BaseAPI {
    getPrdChkAssignPaging1(authorization: string, bjdCd?: Array<string>, bldId?: string, bldLastCallYn?: string, bltypDtlId?: string, bltypId?: Array<string>, bonBunji?: string, buBunji?: string, cmplCostrYearYn?: string, collectCycleCd?: string, collectCycleResnCd?: string, costrStatCd?: string, firstFlrGlaM2?: number, flrCntYn?: string, houseOfficeYn?: string, mainConYn?: string, mainPurposeCd?: string, maxBldLastCallDy?: string, maxCmplCostrYear?: string, maxFlrCnt?: number, maxNlaPy?: number, maxPrdChkDy?: string, maxRmdlYear?: number, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, minBldLastCallDy?: string, minCmplCostrYear?: string, minFlrCnt?: number, minNlaPy?: number, minPrdChkDy?: string, minRmdlYear?: number, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, prdChkYn?: string, prdYn?: string, rentCfCd?: Array<string>, rmdlYearYn?: string, servOpt?: string, tmAsgmtDlyCd?: string, tmAsgmtDlyResn?: string, zoneGeom?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetRetailPrdChkAssignOut, any>>;
    getRetailPhtShtAssignPaging(authorization: string, bjdCd?: Array<string>, bldId?: string, bldName?: string, bldPhtCollectExptCd?: string, bltypCnt?: number, bltypDtlId?: string, bltypId?: Array<string>, bonBunji?: string, buBunji?: string, cmplCostrYearYn?: string, collectCycleCd?: string, collectCycleResnCd?: string, costrStatCd?: string, exteriorCaptPsblYn?: string, firstFlrGlaM2?: number, flrCntYn?: string, houseOfficeYn?: string, mainPurposeCd?: string, maxCmplCostrYear?: string, maxFlrCnt?: number, maxNlaPy?: number, maxPrdCreateDt?: string, maxPrdUpdateDt?: string, maxRmdlYear?: number, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, minCmplCostrYear?: string, minFlrCnt?: number, minNlaPy?: number, minPrdCreateDt?: string, minPrdUpdateDt?: string, minRmdlYear?: number, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, prdYn?: string, rentCfCd?: Array<string>, rmdlYearYn?: string, servOpt?: string, unKnownPht?: string, workPrcsCd?: string, zoneGeom?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetPhtShtAssignOut, any>>;
    patchRetailIclWorkTaskStat(authorization: string, input: PatchIclWorkTaskStatIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    postRetailPhtShtAssign(authorization: string, input: PostIclWorkAssignIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    postRetailPrdChkWorkAssign(authorization: string, input: PostRetailPrdChkWorkAssignIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
}
