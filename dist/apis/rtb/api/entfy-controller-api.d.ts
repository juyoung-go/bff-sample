import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { GetEntfyInfoOut } from '../model';
import { PagingGetEntfyDeptListOut } from '../model';
import { PagingGetEntfyGmlListOut } from '../model';
import { PagingGetEntfyListOut } from '../model';
import { PagingGetEntfyRefListOut } from '../model';
export declare const EntfyControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    deleteEntfyDept: (authorization: string, entfyId: string, deptId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteEntfyGml: (authorization: string, entfyId: string, gmlId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteEntfyRef: (authorization: string, entfyId: string, userId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getEntfyBasicInfo: (authorization: string, entfyId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getEntfyDeptListPaging: (authorization: string, entfyId?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getEntfyGmlListPaging: (authorization: string, entfyId?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getEntfyListPaging: (authorization: string, deptId?: string, entfyId?: string, entfyTypeName?: string, orderBy?: string, pageNum?: number, pageSize?: number, sbjName?: string, userId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getEntfyRefListPaging: (authorization: string, entfyId?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getEntfyUsingGET: (authorization: string, entfyTypeVal: string, old?: string, seq?: number, tgtId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postEntfyDept: (authorization: string, entfyId: string, deptId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postEntfyGml: (authorization: string, entfyId: string, gmlIdList?: Array<string>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postEntfyRef: (authorization: string, entfyId: string, userId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    sendTodayTaskEntfyUsingGET: (authorization: string, baseDate?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    sendTodayTodoEntfyUsingGET: (authorization: string, baseDate?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
export declare const EntfyControllerApiFp: (configuration?: Configuration) => {
    deleteEntfyDept(authorization: string, entfyId: string, deptId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    deleteEntfyGml(authorization: string, entfyId: string, gmlId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    deleteEntfyRef(authorization: string, entfyId: string, userId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    getEntfyBasicInfo(authorization: string, entfyId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetEntfyInfoOut>>;
    getEntfyDeptListPaging(authorization: string, entfyId?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetEntfyDeptListOut>>;
    getEntfyGmlListPaging(authorization: string, entfyId?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetEntfyGmlListOut>>;
    getEntfyListPaging(authorization: string, deptId?: string, entfyId?: string, entfyTypeName?: string, orderBy?: string, pageNum?: number, pageSize?: number, sbjName?: string, userId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetEntfyListOut>>;
    getEntfyRefListPaging(authorization: string, entfyId?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetEntfyRefListOut>>;
    getEntfyUsingGET(authorization: string, entfyTypeVal: string, old?: string, seq?: number, tgtId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    postEntfyDept(authorization: string, entfyId: string, deptId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postEntfyGml(authorization: string, entfyId: string, gmlIdList?: Array<string>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postEntfyRef(authorization: string, entfyId: string, userId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    sendTodayTaskEntfyUsingGET(authorization: string, baseDate?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    sendTodayTodoEntfyUsingGET(authorization: string, baseDate?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
export declare const EntfyControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    deleteEntfyDept(authorization: string, entfyId: string, deptId?: string, options?: any): AxiosPromise<number>;
    deleteEntfyGml(authorization: string, entfyId: string, gmlId?: string, options?: any): AxiosPromise<number>;
    deleteEntfyRef(authorization: string, entfyId: string, userId?: string, options?: any): AxiosPromise<number>;
    getEntfyBasicInfo(authorization: string, entfyId?: string, options?: any): AxiosPromise<GetEntfyInfoOut>;
    getEntfyDeptListPaging(authorization: string, entfyId?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetEntfyDeptListOut>;
    getEntfyGmlListPaging(authorization: string, entfyId?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetEntfyGmlListOut>;
    getEntfyListPaging(authorization: string, deptId?: string, entfyId?: string, entfyTypeName?: string, orderBy?: string, pageNum?: number, pageSize?: number, sbjName?: string, userId?: string, options?: any): AxiosPromise<PagingGetEntfyListOut>;
    getEntfyRefListPaging(authorization: string, entfyId?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetEntfyRefListOut>;
    getEntfyUsingGET(authorization: string, entfyTypeVal: string, old?: string, seq?: number, tgtId?: string, options?: any): AxiosPromise<void>;
    postEntfyDept(authorization: string, entfyId: string, deptId?: string, options?: any): AxiosPromise<number>;
    postEntfyGml(authorization: string, entfyId: string, gmlIdList?: Array<string>, options?: any): AxiosPromise<number>;
    postEntfyRef(authorization: string, entfyId: string, userId?: string, options?: any): AxiosPromise<number>;
    sendTodayTaskEntfyUsingGET(authorization: string, baseDate?: string, options?: any): AxiosPromise<void>;
    sendTodayTodoEntfyUsingGET(authorization: string, baseDate?: string, options?: any): AxiosPromise<void>;
};
export declare class EntfyControllerApi extends BaseAPI {
    deleteEntfyDept(authorization: string, entfyId: string, deptId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    deleteEntfyGml(authorization: string, entfyId: string, gmlId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    deleteEntfyRef(authorization: string, entfyId: string, userId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    getEntfyBasicInfo(authorization: string, entfyId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetEntfyInfoOut, any>>;
    getEntfyDeptListPaging(authorization: string, entfyId?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetEntfyDeptListOut, any>>;
    getEntfyGmlListPaging(authorization: string, entfyId?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetEntfyGmlListOut, any>>;
    getEntfyListPaging(authorization: string, deptId?: string, entfyId?: string, entfyTypeName?: string, orderBy?: string, pageNum?: number, pageSize?: number, sbjName?: string, userId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetEntfyListOut, any>>;
    getEntfyRefListPaging(authorization: string, entfyId?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetEntfyRefListOut, any>>;
    getEntfyUsingGET(authorization: string, entfyTypeVal: string, old?: string, seq?: number, tgtId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    postEntfyDept(authorization: string, entfyId: string, deptId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postEntfyGml(authorization: string, entfyId: string, gmlIdList?: Array<string>, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postEntfyRef(authorization: string, entfyId: string, userId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    sendTodayTaskEntfyUsingGET(authorization: string, baseDate?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    sendTodayTodoEntfyUsingGET(authorization: string, baseDate?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
}
