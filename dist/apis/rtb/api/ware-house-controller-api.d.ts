import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { AddrInfo } from '../model';
import { DeleteLwhIn } from '../model';
import { GetBldClnOut } from '../model';
import { GetBldConOut } from '../model';
import { GetBldForUploadPhtOut } from '../model';
import { GetBldLatLngListOut } from '../model';
import { GetBldPhtOut } from '../model';
import { GetBldPnuOut } from '../model';
import { GetBldRelPnuMobileOut } from '../model';
import { GetCdOut } from '../model';
import { GetConNumSameBldOut } from '../model';
import { GetHwOut } from '../model';
import { GetIcInfoOut } from '../model';
import { GetLwhDtlOut } from '../model';
import { GetLwhMobOut } from '../model';
import { GetLwhPrdFlrNumIn } from '../model';
import { GetMyTaskListOut } from '../model';
import { GetPhtForBldScreenOut } from '../model';
import { GetPrdForLwhCardOut } from '../model';
import { GetTodayProcTaskListOut } from '../model';
import { GetWhtypOut } from '../model';
import { ObjLwhMst } from '../model';
import { PagingGetConClctFailResnPagingOut } from '../model';
import { PagingGetLwhMngOut } from '../model';
import { PagingGetLwhOut } from '../model';
import { PagingGetOutLineListOut } from '../model';
import { PatchBldUploadPhtIn } from '../model';
import { PatchLwhCollectCycleIn } from '../model';
import { PatchLwhIn } from '../model';
import { PatchLwhPrdInfoFromModalIn } from '../model';
import { PatchMobLwhIn } from '../model';
import { PostLwhIn } from '../model';
import { SearchLwhCardOut } from '../model';
import { SelectLwhPrdListForScreenOut } from '../model';
import { SelectLwhUnitPrdLinkForScreenOut } from '../model';
export declare const WareHouseControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    deleteLwh: (authorization: string, lwhId: string, input: DeleteLwhIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getAvailItemList: (authorization: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getConvTypeList: (authorization: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getDangerLev: (authorization: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getEntryTypeList: (authorization: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getHwList: (authorization: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getIcForLwh: (authorization: string, lwhId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getIcList: (authorization: string, hwId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getIcListForModal: (authorization: string, lwhId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLowTemp: (authorization: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLwhClnList: (authorization: string, bldId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLwhConList: (authorization: string, lwhId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLwhConListMobile: (authorization: string, lwhId: string, conNum?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLwhDtlOne: (authorization: string, lwhId: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLwhLatLngList: (authorization: string, limit?: number, neLat?: string, neLng?: string, swLat?: string, swLng?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLwhListPaging: (authorization: string, bjdCd?: Array<string>, bonBunji?: string, buBunji?: string, govLwhYn?: string, jibunAddr?: string, lowTempTypeId?: string, lwhConOwnTypeCd?: string, lwhDtlType?: Array<string>, lwhId?: string, lwhName?: string, lwhPrdTrStatCd?: string, lwhType?: Array<string>, maxBlaPy?: number, maxGraPy?: number, maxPlaPy?: number, maxTotalCnt?: number, minBlaPy?: number, minGraPy?: number, minPlaPy?: number, minTotalCnt?: number, orderBy?: string, pageNum?: number, pageSize?: number, prdLwhId?: string, prdYn?: string, rentCfCd?: Array<string>, roadNameAddr?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLwhMngListForScreen: (authorization: string, lwhId?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLwhMob: (authorization: string, lwhId: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLwhOutlineList: (authorization: string, lwhId?: string, orderBy?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLwhPhtList: (authorization: string, lwhId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLwhPnuMobile: (authorization: string, lwhId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getPhtForLwh: (authorization: string, lwhId: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getPhtForLwhScreen: (authorization: string, lwhId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getPrdForLwhCard: (authorization: string, lwhId: string, lwhId2?: string, maxDpstAmt?: number, maxMaintAmt?: number, maxNlaPy?: number, maxPrdRegDy?: string, minDpstAmt?: number, minMaintAmt?: number, minNlaPy?: number, minPrdRegDy?: string, ownUserId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getTenBizType: (authorization: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchHwList: (authorization: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchLwhBunji: (authorization: string, lwhId: string, input: AddrInfo, lat?: number, lng?: number, roadAddr?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchLwhClctCycleMng: (authorization: string, input: PatchLwhCollectCycleIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchLwhPrdCheck: (authorization: string, lwhId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchLwhPrdFlrNum: (authorization: string, input: GetLwhPrdFlrNumIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchLwhPrdInfoFromModal: (authorization: string, prdId: string, input: PatchLwhPrdInfoFromModalIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postLwh: (authorization: string, input: PostLwhIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    searchLwhOrPrdList: (authorization: string, berthTypeCd?: string, conYn?: string, costrStatCd?: string, distKm?: number, distMin?: number, elvStatCd?: string, exclBldYn?: string, flrOpt?: string, govLwhYn?: string, icName?: string, lowTempTypeId?: string, lwhDtlType?: Array<string>, lwhType?: Array<string>, mainConYn?: string, maxBlaPy?: number, maxCmplCostrRmdlYear?: string, maxDpstAmt?: number, maxGraPy?: number, maxLastChkDy?: string, maxMaintAmt?: number, maxNlaPy?: number, maxPlaPy?: number, maxPrdRegDy?: string, maxTotalCnt?: number, maxTotalNlaPy?: number, minBlaPy?: number, minCmplCostrRmdlYear?: string, minDpstAmt?: number, minGraPy?: number, minLastChkDy?: string, minMaintAmt?: number, minNlaPy?: number, minPlaPy?: number, minPrdRegDy?: string, minTotalCnt?: number, minTotalNlaPy?: number, neLat?: number, neLng?: number, orderBy?: string, ownUserId?: string, paroTypeCd?: Array<string>, phtOrdCd?: string, prdYn?: string, rentCfCd?: Array<string>, subLeaseYn?: string, swLat?: number, swLng?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    searchLwhPrdList: (authorization: string, berthTypeCd?: string, conYn?: string, costrStatCd?: string, distKm?: number, distMin?: number, elvStatCd?: string, exclBldYn?: string, flrOpt?: string, govLwhYn?: string, icName?: string, lowTempTypeId?: string, lwhDtlType?: Array<string>, lwhType?: Array<string>, mainConYn?: string, maxBlaPy?: number, maxCmplCostrRmdlYear?: string, maxDpstAmt?: number, maxGraPy?: number, maxLastChkDy?: string, maxMaintAmt?: number, maxNlaPy?: number, maxPlaPy?: number, maxPrdRegDy?: string, maxTotalCnt?: number, maxTotalNlaPy?: number, minBlaPy?: number, minCmplCostrRmdlYear?: string, minDpstAmt?: number, minGraPy?: number, minLastChkDy?: string, minMaintAmt?: number, minNlaPy?: number, minPlaPy?: number, minPrdRegDy?: string, minTotalCnt?: number, minTotalNlaPy?: number, neLat?: number, neLng?: number, orderBy?: string, ownUserId?: string, paroTypeCd?: Array<string>, phtOrdCd?: string, prdYn?: string, rentCfCd?: Array<string>, subLeaseYn?: string, swLat?: number, swLng?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectLwhConClcFrsn: (authorization: string, lwhId: string, bldId?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectLwhMyTaskListScreen: (authorization: string, workCfCd?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectLwhPrdListForScreen: (authorization: string, lwhId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectLwhTodayProcTaskListScreen: (authorization: string, maxExpireDy?: string, minExpireDy?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectLwhUnitListForPrdLink: (authorization: string, lwhId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    updateLwh: (authorization: string, lwhId: string, input: PatchLwhIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    updateLwhForUploadPht: (authorization: string, lwhId: string, input: PatchBldUploadPhtIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    updateLwhRoadAddr: (authorization: string, lwhId: string, roadAddr?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    updateMobLwh: (authorization: string, lwhId: string, input: PatchMobLwhIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
export declare const WareHouseControllerApiFp: (configuration?: Configuration) => {
    deleteLwh(authorization: string, lwhId: string, input: DeleteLwhIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    getAvailItemList(authorization: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetCdOut>>>;
    getConvTypeList(authorization: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetCdOut>>>;
    getDangerLev(authorization: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetWhtypOut>>>;
    getEntryTypeList(authorization: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetCdOut>>>;
    getHwList(authorization: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetHwOut>>>;
    getIcForLwh(authorization: string, lwhId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetIcInfoOut>>>;
    getIcList(authorization: string, hwId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetIcInfoOut>>>;
    getIcListForModal(authorization: string, lwhId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetIcInfoOut>>>;
    getLowTemp(authorization: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetWhtypOut>>>;
    getLwhClnList(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetBldClnOut>>>;
    getLwhConList(authorization: string, lwhId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetBldConOut>>>;
    getLwhConListMobile(authorization: string, lwhId: string, conNum?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetConNumSameBldOut>>>;
    getLwhDtlOne(authorization: string, lwhId: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLwhDtlOut>>;
    getLwhLatLngList(authorization: string, limit?: number, neLat?: string, neLng?: string, swLat?: string, swLng?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetBldLatLngListOut>>;
    getLwhListPaging(authorization: string, bjdCd?: Array<string>, bonBunji?: string, buBunji?: string, govLwhYn?: string, jibunAddr?: string, lowTempTypeId?: string, lwhConOwnTypeCd?: string, lwhDtlType?: Array<string>, lwhId?: string, lwhName?: string, lwhPrdTrStatCd?: string, lwhType?: Array<string>, maxBlaPy?: number, maxGraPy?: number, maxPlaPy?: number, maxTotalCnt?: number, minBlaPy?: number, minGraPy?: number, minPlaPy?: number, minTotalCnt?: number, orderBy?: string, pageNum?: number, pageSize?: number, prdLwhId?: string, prdYn?: string, rentCfCd?: Array<string>, roadNameAddr?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetLwhOut>>;
    getLwhMngListForScreen(authorization: string, lwhId?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetLwhMngOut>>;
    getLwhMob(authorization: string, lwhId: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLwhMobOut>>;
    getLwhOutlineList(authorization: string, lwhId?: string, orderBy?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetOutLineListOut>>;
    getLwhPhtList(authorization: string, lwhId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetBldPhtOut>>>;
    getLwhPnuMobile(authorization: string, lwhId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetBldRelPnuMobileOut>>>;
    getPhtForLwh(authorization: string, lwhId: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetBldForUploadPhtOut>>;
    getPhtForLwhScreen(authorization: string, lwhId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetPhtForBldScreenOut>>>;
    getPrdForLwhCard(authorization: string, lwhId: string, lwhId2?: string, maxDpstAmt?: number, maxMaintAmt?: number, maxNlaPy?: number, maxPrdRegDy?: string, minDpstAmt?: number, minMaintAmt?: number, minNlaPy?: number, minPrdRegDy?: string, ownUserId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetPrdForLwhCardOut>>>;
    getTenBizType(authorization: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetCdOut>>>;
    patchHwList(authorization: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    patchLwhBunji(authorization: string, lwhId: string, input: AddrInfo, lat?: number, lng?: number, roadAddr?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetBldPnuOut>>;
    patchLwhClctCycleMng(authorization: string, input: PatchLwhCollectCycleIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    patchLwhPrdCheck(authorization: string, lwhId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    patchLwhPrdFlrNum(authorization: string, input: GetLwhPrdFlrNumIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    patchLwhPrdInfoFromModal(authorization: string, prdId: string, input: PatchLwhPrdInfoFromModalIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    postLwh(authorization: string, input: PostLwhIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ObjLwhMst>>;
    searchLwhOrPrdList(authorization: string, berthTypeCd?: string, conYn?: string, costrStatCd?: string, distKm?: number, distMin?: number, elvStatCd?: string, exclBldYn?: string, flrOpt?: string, govLwhYn?: string, icName?: string, lowTempTypeId?: string, lwhDtlType?: Array<string>, lwhType?: Array<string>, mainConYn?: string, maxBlaPy?: number, maxCmplCostrRmdlYear?: string, maxDpstAmt?: number, maxGraPy?: number, maxLastChkDy?: string, maxMaintAmt?: number, maxNlaPy?: number, maxPlaPy?: number, maxPrdRegDy?: string, maxTotalCnt?: number, maxTotalNlaPy?: number, minBlaPy?: number, minCmplCostrRmdlYear?: string, minDpstAmt?: number, minGraPy?: number, minLastChkDy?: string, minMaintAmt?: number, minNlaPy?: number, minPlaPy?: number, minPrdRegDy?: string, minTotalCnt?: number, minTotalNlaPy?: number, neLat?: number, neLng?: number, orderBy?: string, ownUserId?: string, paroTypeCd?: Array<string>, phtOrdCd?: string, prdYn?: string, rentCfCd?: Array<string>, subLeaseYn?: string, swLat?: number, swLng?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SearchLwhCardOut>>;
    searchLwhPrdList(authorization: string, berthTypeCd?: string, conYn?: string, costrStatCd?: string, distKm?: number, distMin?: number, elvStatCd?: string, exclBldYn?: string, flrOpt?: string, govLwhYn?: string, icName?: string, lowTempTypeId?: string, lwhDtlType?: Array<string>, lwhType?: Array<string>, mainConYn?: string, maxBlaPy?: number, maxCmplCostrRmdlYear?: string, maxDpstAmt?: number, maxGraPy?: number, maxLastChkDy?: string, maxMaintAmt?: number, maxNlaPy?: number, maxPlaPy?: number, maxPrdRegDy?: string, maxTotalCnt?: number, maxTotalNlaPy?: number, minBlaPy?: number, minCmplCostrRmdlYear?: string, minDpstAmt?: number, minGraPy?: number, minLastChkDy?: string, minMaintAmt?: number, minNlaPy?: number, minPlaPy?: number, minPrdRegDy?: string, minTotalCnt?: number, minTotalNlaPy?: number, neLat?: number, neLng?: number, orderBy?: string, ownUserId?: string, paroTypeCd?: Array<string>, phtOrdCd?: string, prdYn?: string, rentCfCd?: Array<string>, subLeaseYn?: string, swLat?: number, swLng?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SearchLwhCardOut>>;
    selectLwhConClcFrsn(authorization: string, lwhId: string, bldId?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetConClctFailResnPagingOut>>;
    selectLwhMyTaskListScreen(authorization: string, workCfCd?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetMyTaskListOut>>>;
    selectLwhPrdListForScreen(authorization: string, lwhId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<SelectLwhPrdListForScreenOut>>>;
    selectLwhTodayProcTaskListScreen(authorization: string, maxExpireDy?: string, minExpireDy?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetTodayProcTaskListOut>>>;
    selectLwhUnitListForPrdLink(authorization: string, lwhId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<SelectLwhUnitPrdLinkForScreenOut>>>;
    updateLwh(authorization: string, lwhId: string, input: PatchLwhIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    updateLwhForUploadPht(authorization: string, lwhId: string, input: PatchBldUploadPhtIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    updateLwhRoadAddr(authorization: string, lwhId: string, roadAddr?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    updateMobLwh(authorization: string, lwhId: string, input: PatchMobLwhIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
export declare const WareHouseControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    deleteLwh(authorization: string, lwhId: string, input: DeleteLwhIn, options?: any): AxiosPromise<void>;
    getAvailItemList(authorization: string, options?: any): AxiosPromise<Array<GetCdOut>>;
    getConvTypeList(authorization: string, options?: any): AxiosPromise<Array<GetCdOut>>;
    getDangerLev(authorization: string, options?: any): AxiosPromise<Array<GetWhtypOut>>;
    getEntryTypeList(authorization: string, options?: any): AxiosPromise<Array<GetCdOut>>;
    getHwList(authorization: string, options?: any): AxiosPromise<Array<GetHwOut>>;
    getIcForLwh(authorization: string, lwhId: string, options?: any): AxiosPromise<Array<GetIcInfoOut>>;
    getIcList(authorization: string, hwId: string, options?: any): AxiosPromise<Array<GetIcInfoOut>>;
    getIcListForModal(authorization: string, lwhId?: string, options?: any): AxiosPromise<Array<GetIcInfoOut>>;
    getLowTemp(authorization: string, options?: any): AxiosPromise<Array<GetWhtypOut>>;
    getLwhClnList(authorization: string, bldId: string, options?: any): AxiosPromise<Array<GetBldClnOut>>;
    getLwhConList(authorization: string, lwhId: string, options?: any): AxiosPromise<Array<GetBldConOut>>;
    getLwhConListMobile(authorization: string, lwhId: string, conNum?: string, options?: any): AxiosPromise<Array<GetConNumSameBldOut>>;
    getLwhDtlOne(authorization: string, lwhId: string, taskId?: string, options?: any): AxiosPromise<GetLwhDtlOut>;
    getLwhLatLngList(authorization: string, limit?: number, neLat?: string, neLng?: string, swLat?: string, swLng?: string, options?: any): AxiosPromise<GetBldLatLngListOut>;
    getLwhListPaging(authorization: string, bjdCd?: Array<string>, bonBunji?: string, buBunji?: string, govLwhYn?: string, jibunAddr?: string, lowTempTypeId?: string, lwhConOwnTypeCd?: string, lwhDtlType?: Array<string>, lwhId?: string, lwhName?: string, lwhPrdTrStatCd?: string, lwhType?: Array<string>, maxBlaPy?: number, maxGraPy?: number, maxPlaPy?: number, maxTotalCnt?: number, minBlaPy?: number, minGraPy?: number, minPlaPy?: number, minTotalCnt?: number, orderBy?: string, pageNum?: number, pageSize?: number, prdLwhId?: string, prdYn?: string, rentCfCd?: Array<string>, roadNameAddr?: string, options?: any): AxiosPromise<PagingGetLwhOut>;
    getLwhMngListForScreen(authorization: string, lwhId?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetLwhMngOut>;
    getLwhMob(authorization: string, lwhId: string, taskId?: string, options?: any): AxiosPromise<GetLwhMobOut>;
    getLwhOutlineList(authorization: string, lwhId?: string, orderBy?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: any): AxiosPromise<PagingGetOutLineListOut>;
    getLwhPhtList(authorization: string, lwhId: string, options?: any): AxiosPromise<Array<GetBldPhtOut>>;
    getLwhPnuMobile(authorization: string, lwhId: string, options?: any): AxiosPromise<Array<GetBldRelPnuMobileOut>>;
    getPhtForLwh(authorization: string, lwhId: string, taskId?: string, options?: any): AxiosPromise<GetBldForUploadPhtOut>;
    getPhtForLwhScreen(authorization: string, lwhId?: string, options?: any): AxiosPromise<Array<GetPhtForBldScreenOut>>;
    getPrdForLwhCard(authorization: string, lwhId: string, lwhId2?: string, maxDpstAmt?: number, maxMaintAmt?: number, maxNlaPy?: number, maxPrdRegDy?: string, minDpstAmt?: number, minMaintAmt?: number, minNlaPy?: number, minPrdRegDy?: string, ownUserId?: string, options?: any): AxiosPromise<Array<GetPrdForLwhCardOut>>;
    getTenBizType(authorization: string, options?: any): AxiosPromise<Array<GetCdOut>>;
    patchHwList(authorization: string, options?: any): AxiosPromise<void>;
    patchLwhBunji(authorization: string, lwhId: string, input: AddrInfo, lat?: number, lng?: number, roadAddr?: string, options?: any): AxiosPromise<GetBldPnuOut>;
    patchLwhClctCycleMng(authorization: string, input: PatchLwhCollectCycleIn, options?: any): AxiosPromise<void>;
    patchLwhPrdCheck(authorization: string, lwhId: string, options?: any): AxiosPromise<void>;
    patchLwhPrdFlrNum(authorization: string, input: GetLwhPrdFlrNumIn, options?: any): AxiosPromise<void>;
    patchLwhPrdInfoFromModal(authorization: string, prdId: string, input: PatchLwhPrdInfoFromModalIn, options?: any): AxiosPromise<void>;
    postLwh(authorization: string, input: PostLwhIn, options?: any): AxiosPromise<ObjLwhMst>;
    searchLwhOrPrdList(authorization: string, berthTypeCd?: string, conYn?: string, costrStatCd?: string, distKm?: number, distMin?: number, elvStatCd?: string, exclBldYn?: string, flrOpt?: string, govLwhYn?: string, icName?: string, lowTempTypeId?: string, lwhDtlType?: Array<string>, lwhType?: Array<string>, mainConYn?: string, maxBlaPy?: number, maxCmplCostrRmdlYear?: string, maxDpstAmt?: number, maxGraPy?: number, maxLastChkDy?: string, maxMaintAmt?: number, maxNlaPy?: number, maxPlaPy?: number, maxPrdRegDy?: string, maxTotalCnt?: number, maxTotalNlaPy?: number, minBlaPy?: number, minCmplCostrRmdlYear?: string, minDpstAmt?: number, minGraPy?: number, minLastChkDy?: string, minMaintAmt?: number, minNlaPy?: number, minPlaPy?: number, minPrdRegDy?: string, minTotalCnt?: number, minTotalNlaPy?: number, neLat?: number, neLng?: number, orderBy?: string, ownUserId?: string, paroTypeCd?: Array<string>, phtOrdCd?: string, prdYn?: string, rentCfCd?: Array<string>, subLeaseYn?: string, swLat?: number, swLng?: number, options?: any): AxiosPromise<SearchLwhCardOut>;
    searchLwhPrdList(authorization: string, berthTypeCd?: string, conYn?: string, costrStatCd?: string, distKm?: number, distMin?: number, elvStatCd?: string, exclBldYn?: string, flrOpt?: string, govLwhYn?: string, icName?: string, lowTempTypeId?: string, lwhDtlType?: Array<string>, lwhType?: Array<string>, mainConYn?: string, maxBlaPy?: number, maxCmplCostrRmdlYear?: string, maxDpstAmt?: number, maxGraPy?: number, maxLastChkDy?: string, maxMaintAmt?: number, maxNlaPy?: number, maxPlaPy?: number, maxPrdRegDy?: string, maxTotalCnt?: number, maxTotalNlaPy?: number, minBlaPy?: number, minCmplCostrRmdlYear?: string, minDpstAmt?: number, minGraPy?: number, minLastChkDy?: string, minMaintAmt?: number, minNlaPy?: number, minPlaPy?: number, minPrdRegDy?: string, minTotalCnt?: number, minTotalNlaPy?: number, neLat?: number, neLng?: number, orderBy?: string, ownUserId?: string, paroTypeCd?: Array<string>, phtOrdCd?: string, prdYn?: string, rentCfCd?: Array<string>, subLeaseYn?: string, swLat?: number, swLng?: number, options?: any): AxiosPromise<SearchLwhCardOut>;
    selectLwhConClcFrsn(authorization: string, lwhId: string, bldId?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetConClctFailResnPagingOut>;
    selectLwhMyTaskListScreen(authorization: string, workCfCd?: string, options?: any): AxiosPromise<Array<GetMyTaskListOut>>;
    selectLwhPrdListForScreen(authorization: string, lwhId: string, options?: any): AxiosPromise<Array<SelectLwhPrdListForScreenOut>>;
    selectLwhTodayProcTaskListScreen(authorization: string, maxExpireDy?: string, minExpireDy?: string, options?: any): AxiosPromise<Array<GetTodayProcTaskListOut>>;
    selectLwhUnitListForPrdLink(authorization: string, lwhId: string, options?: any): AxiosPromise<Array<SelectLwhUnitPrdLinkForScreenOut>>;
    updateLwh(authorization: string, lwhId: string, input: PatchLwhIn, options?: any): AxiosPromise<void>;
    updateLwhForUploadPht(authorization: string, lwhId: string, input: PatchBldUploadPhtIn, options?: any): AxiosPromise<void>;
    updateLwhRoadAddr(authorization: string, lwhId: string, roadAddr?: string, options?: any): AxiosPromise<void>;
    updateMobLwh(authorization: string, lwhId: string, input: PatchMobLwhIn, options?: any): AxiosPromise<void>;
};
export declare class WareHouseControllerApi extends BaseAPI {
    deleteLwh(authorization: string, lwhId: string, input: DeleteLwhIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    getAvailItemList(authorization: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetCdOut[], any>>;
    getConvTypeList(authorization: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetCdOut[], any>>;
    getDangerLev(authorization: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetWhtypOut[], any>>;
    getEntryTypeList(authorization: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetCdOut[], any>>;
    getHwList(authorization: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetHwOut[], any>>;
    getIcForLwh(authorization: string, lwhId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetIcInfoOut[], any>>;
    getIcList(authorization: string, hwId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetIcInfoOut[], any>>;
    getIcListForModal(authorization: string, lwhId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetIcInfoOut[], any>>;
    getLowTemp(authorization: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetWhtypOut[], any>>;
    getLwhClnList(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetBldClnOut[], any>>;
    getLwhConList(authorization: string, lwhId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetBldConOut[], any>>;
    getLwhConListMobile(authorization: string, lwhId: string, conNum?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetConNumSameBldOut[], any>>;
    getLwhDtlOne(authorization: string, lwhId: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetLwhDtlOut, any>>;
    getLwhLatLngList(authorization: string, limit?: number, neLat?: string, neLng?: string, swLat?: string, swLng?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetBldLatLngListOut, any>>;
    getLwhListPaging(authorization: string, bjdCd?: Array<string>, bonBunji?: string, buBunji?: string, govLwhYn?: string, jibunAddr?: string, lowTempTypeId?: string, lwhConOwnTypeCd?: string, lwhDtlType?: Array<string>, lwhId?: string, lwhName?: string, lwhPrdTrStatCd?: string, lwhType?: Array<string>, maxBlaPy?: number, maxGraPy?: number, maxPlaPy?: number, maxTotalCnt?: number, minBlaPy?: number, minGraPy?: number, minPlaPy?: number, minTotalCnt?: number, orderBy?: string, pageNum?: number, pageSize?: number, prdLwhId?: string, prdYn?: string, rentCfCd?: Array<string>, roadNameAddr?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetLwhOut, any>>;
    getLwhMngListForScreen(authorization: string, lwhId?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetLwhMngOut, any>>;
    getLwhMob(authorization: string, lwhId: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetLwhMobOut, any>>;
    getLwhOutlineList(authorization: string, lwhId?: string, orderBy?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetOutLineListOut, any>>;
    getLwhPhtList(authorization: string, lwhId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetBldPhtOut[], any>>;
    getLwhPnuMobile(authorization: string, lwhId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetBldRelPnuMobileOut[], any>>;
    getPhtForLwh(authorization: string, lwhId: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetBldForUploadPhtOut, any>>;
    getPhtForLwhScreen(authorization: string, lwhId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetPhtForBldScreenOut[], any>>;
    getPrdForLwhCard(authorization: string, lwhId: string, lwhId2?: string, maxDpstAmt?: number, maxMaintAmt?: number, maxNlaPy?: number, maxPrdRegDy?: string, minDpstAmt?: number, minMaintAmt?: number, minNlaPy?: number, minPrdRegDy?: string, ownUserId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetPrdForLwhCardOut[], any>>;
    getTenBizType(authorization: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetCdOut[], any>>;
    patchHwList(authorization: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    patchLwhBunji(authorization: string, lwhId: string, input: AddrInfo, lat?: number, lng?: number, roadAddr?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetBldPnuOut, any>>;
    patchLwhClctCycleMng(authorization: string, input: PatchLwhCollectCycleIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    patchLwhPrdCheck(authorization: string, lwhId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    patchLwhPrdFlrNum(authorization: string, input: GetLwhPrdFlrNumIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    patchLwhPrdInfoFromModal(authorization: string, prdId: string, input: PatchLwhPrdInfoFromModalIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    postLwh(authorization: string, input: PostLwhIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ObjLwhMst, any>>;
    searchLwhOrPrdList(authorization: string, berthTypeCd?: string, conYn?: string, costrStatCd?: string, distKm?: number, distMin?: number, elvStatCd?: string, exclBldYn?: string, flrOpt?: string, govLwhYn?: string, icName?: string, lowTempTypeId?: string, lwhDtlType?: Array<string>, lwhType?: Array<string>, mainConYn?: string, maxBlaPy?: number, maxCmplCostrRmdlYear?: string, maxDpstAmt?: number, maxGraPy?: number, maxLastChkDy?: string, maxMaintAmt?: number, maxNlaPy?: number, maxPlaPy?: number, maxPrdRegDy?: string, maxTotalCnt?: number, maxTotalNlaPy?: number, minBlaPy?: number, minCmplCostrRmdlYear?: string, minDpstAmt?: number, minGraPy?: number, minLastChkDy?: string, minMaintAmt?: number, minNlaPy?: number, minPlaPy?: number, minPrdRegDy?: string, minTotalCnt?: number, minTotalNlaPy?: number, neLat?: number, neLng?: number, orderBy?: string, ownUserId?: string, paroTypeCd?: Array<string>, phtOrdCd?: string, prdYn?: string, rentCfCd?: Array<string>, subLeaseYn?: string, swLat?: number, swLng?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SearchLwhCardOut, any>>;
    searchLwhPrdList(authorization: string, berthTypeCd?: string, conYn?: string, costrStatCd?: string, distKm?: number, distMin?: number, elvStatCd?: string, exclBldYn?: string, flrOpt?: string, govLwhYn?: string, icName?: string, lowTempTypeId?: string, lwhDtlType?: Array<string>, lwhType?: Array<string>, mainConYn?: string, maxBlaPy?: number, maxCmplCostrRmdlYear?: string, maxDpstAmt?: number, maxGraPy?: number, maxLastChkDy?: string, maxMaintAmt?: number, maxNlaPy?: number, maxPlaPy?: number, maxPrdRegDy?: string, maxTotalCnt?: number, maxTotalNlaPy?: number, minBlaPy?: number, minCmplCostrRmdlYear?: string, minDpstAmt?: number, minGraPy?: number, minLastChkDy?: string, minMaintAmt?: number, minNlaPy?: number, minPlaPy?: number, minPrdRegDy?: string, minTotalCnt?: number, minTotalNlaPy?: number, neLat?: number, neLng?: number, orderBy?: string, ownUserId?: string, paroTypeCd?: Array<string>, phtOrdCd?: string, prdYn?: string, rentCfCd?: Array<string>, subLeaseYn?: string, swLat?: number, swLng?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SearchLwhCardOut, any>>;
    selectLwhConClcFrsn(authorization: string, lwhId: string, bldId?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetConClctFailResnPagingOut, any>>;
    selectLwhMyTaskListScreen(authorization: string, workCfCd?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetMyTaskListOut[], any>>;
    selectLwhPrdListForScreen(authorization: string, lwhId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SelectLwhPrdListForScreenOut[], any>>;
    selectLwhTodayProcTaskListScreen(authorization: string, maxExpireDy?: string, minExpireDy?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetTodayProcTaskListOut[], any>>;
    selectLwhUnitListForPrdLink(authorization: string, lwhId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SelectLwhUnitPrdLinkForScreenOut[], any>>;
    updateLwh(authorization: string, lwhId: string, input: PatchLwhIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    updateLwhForUploadPht(authorization: string, lwhId: string, input: PatchBldUploadPhtIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    updateLwhRoadAddr(authorization: string, lwhId: string, roadAddr?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    updateMobLwh(authorization: string, lwhId: string, input: PatchMobLwhIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
}
