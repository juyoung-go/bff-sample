
/**
*
* Generated by Rsquare Codegen (v3.0.1) (2022-07-22 14:26:31 192)
*
* 클라이언트 유저 컨트롤러 
*
*/


import axios from 'axios'
import { Injectable } from "@nestjs/common"
import { Remote } from '../rfind.config'

import WwwGetPrdCdtDtlOut from '../models/WwwGetPrdCdtDtlOut'
import WwwPatchPrdCdtDtlIn from '../models/WwwPatchPrdCdtDtlIn'
import WwwGetLeaveMbrOut from '../models/WwwGetLeaveMbrOut'
import WwwPostLeaveMbrIn from '../models/WwwPostLeaveMbrIn'
import WwwGetMbrInfoOut from '../models/WwwGetMbrInfoOut'
import WwwPatchUserInfoIn from '../models/WwwPatchUserInfoIn'
import WwwPatchMbrStatIn from '../models/WwwPatchMbrStatIn'
import WwwPatchMobNumIn from '../models/WwwPatchMobNumIn'
import RentConditionOut from '../models/RentConditionOut'

/**
* @description 클라이언트 유저 컨트롤러 
*/
@Injectable()
export default class WwwMbrUserService {

  /**
  * @summary 로그인된 유저의 입주조건 수정
  */
  async patchRentCondition (wwwPatchPrdCdtDtlIn: WwwPatchPrdCdtDtlIn): Promise<WwwGetPrdCdtDtlOut> {
    const data = await axios.put(Remote + '/web/www/me/rent-condition', wwwPatchPrdCdtDtlIn) as WwwGetPrdCdtDtlOut
    return new Promise<WwwGetPrdCdtDtlOut>((resolve)=>{resolve(data)})
  }

  /**
  * @summary 로그인된 유저 탈퇴
  */
  async patchLeave (wwwPostLeaveMbrIn: WwwPostLeaveMbrIn): Promise<WwwGetLeaveMbrOut> {
    const data = await axios.post(Remote + '/web/www/me/leave', wwwPostLeaveMbrIn) as WwwGetLeaveMbrOut
    return new Promise<WwwGetLeaveMbrOut>((resolve)=>{resolve(data)})
  }

  /**
  * @summary 로그인된 유저의 메일 인증 상태 변경
  */
  async postConfirmEmail (): Promise<void> {
    const data = await axios.post(Remote + '/web/www/me/confirm-email', {}) as void
    return new Promise<void>((resolve)=>{resolve(data)})
  }

  /**
  * @summary 로그인된 유저의 정보 수정
  */
  async patchInfo (wwwPatchUserInfoIn: WwwPatchUserInfoIn): Promise<WwwGetMbrInfoOut> {
    const data = await axios.patch(Remote + '/web/www/me/user-info', wwwPatchUserInfoIn) as WwwGetMbrInfoOut
    return new Promise<WwwGetMbrInfoOut>((resolve)=>{resolve(data)})
  }

  /**
  * @summary  휴면계정 -> 일반계정으로 전환 
  */
  async patchMbrStat (wwwPatchMbrStatIn: WwwPatchMbrStatIn): Promise<WwwGetMbrInfoOut> {
    const data = await axios.patch(Remote + '/web/www/me/sleep', wwwPatchMbrStatIn) as WwwGetMbrInfoOut
    return new Promise<WwwGetMbrInfoOut>((resolve)=>{resolve(data)})
  }

  /**
  * @summary  로그인마다 sign_in_cnt +1 
  */
  async patchSignInCnt (mbrId: string): Promise<WwwGetMbrInfoOut> {
    const data = await axios.patch(Remote + '/web/www/me/sign-cnt', {}) as WwwGetMbrInfoOut
    return new Promise<WwwGetMbrInfoOut>((resolve)=>{resolve(data)})
  }

  /**
  * @summary 로그인된 유저의 전화번호 수정
  */
  async patchMobNum (wwwPatchMobNumIn: WwwPatchMobNumIn): Promise<WwwGetMbrInfoOut> {
    const data = await axios.patch(Remote + '/web/www/me/mob-num', wwwPatchMobNumIn) as WwwGetMbrInfoOut
    return new Promise<WwwGetMbrInfoOut>((resolve)=>{resolve(data)})
  }

  /**
  * @summary 로그인된 유저의 정보 조회
  */
  async getMbrInfo (mbrId: string): Promise<WwwGetMbrInfoOut> {
    const data = await axios.get(Remote + '/web/www/me', {params:{mbrId}}) as WwwGetMbrInfoOut
    return new Promise<WwwGetMbrInfoOut>((resolve)=>{resolve(data)})
  }

  /**
  * @summary 로그인된 유저의 입주조건 정보 조회
  */
  async getPrdCdtDtl (mbrId: string): Promise<RentConditionOut> {
    const data = await axios.get(Remote + '/web/www/me/prd-cdt-dtl', {params:{mbrId}}) as RentConditionOut
    return new Promise<RentConditionOut>((resolve)=>{resolve(data)})
  }

  /**
  * @summary 로그인된 유저의 알림메세지 조회
  */
  async getNoticeMessage (): Promise<void> {
    const data = await axios.get(Remote + '/web/www/me/notice', {params:{}}) as void
    return new Promise<void>((resolve)=>{resolve(data)})
  }

  /**
  * @summary 로그인된 유저가 진행중인 딜중에서 담당자 노출이 설정된 딜 목록 조회
  */
  async getDeals (): Promise<void> {
    const data = await axios.get(Remote + '/web/www/me/deals', {params:{}}) as void
    return new Promise<void>((resolve)=>{resolve(data)})
  }

}
