import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { GetContrFeeInfo } from '../model';
import { GetContrInfoOut } from '../model';
import { GetContrInfoToFeeOut } from '../model';
import { GetFeeInfoListOut } from '../model';
import { GetFeeInfoOneOut } from '../model';
import { PagingGetFeeListOut } from '../model';
import { PatchFeeInfoIn } from '../model';
import { PatchSavingInfoIn } from '../model';
import { PostFeeInfoIn } from '../model';
import { PostSavingInfoIn } from '../model';
import { Resource } from '../model';
export declare const LwhFeeControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    deleteLwhFeeInfo: (authorization: string, contrId: string, feeId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteLwhSavingInfo: (authorization: string, feeId: string, seq: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLwhContrFeeList: (authorization: string, contrId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLwhContrInfoList: (authorization: string, contrId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLwhContrInfoOfSavingStat: (authorization: string, contrId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLwhContrInfoOne: (authorization: string, clnId?: string, contrId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLwhFeeInfoList: (authorization: string, contrId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLwhFeeInfoOne: (authorization: string, contrId?: string, feeId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLwhFeePaging: (authorization: string, clnName?: string, contrId?: string, feeId?: string, feePymtAgrmtYn?: string, maxBalancePmtDy?: string, maxContrDy?: string, maxSavingDueDy?: string, maxSavingDy?: string, maxTaxinvDueDy?: string, maxTaxinvIssDy?: string, maxVatTotalFeeAmt?: number, minBalancePmtDy?: string, minContrDy?: string, minSavingDueDy?: string, minSavingDy?: string, minTaxinvDueDy?: string, minTaxinvIssDy?: string, minVatTotalFeeAmt?: number, orderBy?: string, pageNum?: number, pageSize?: number, savingStatCd?: Array<string>, savingYn?: string, taxinvIssStatCd?: Array<string>, taxinvIssYn?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchLwhFeeInfo: (authorization: string, contrId: string, feeId: string, input: PatchFeeInfoIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchLwhFeeSavingStat: (authorization: string, contrId: string, savingFeeStatCd: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchLwhSavingInfo: (authorization: string, feeId: string, seq: number, input: PatchSavingInfoIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postLwhFeeInfo: (authorization: string, contrId: string, input: PostFeeInfoIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postLwhSavingInfo: (authorization: string, feeId: string, input: PostSavingInfoIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectLwhFeeListDownloadExcel: (authorization: string, clnName?: string, contrId?: string, feeId?: string, feePymtAgrmtYn?: string, maxBalancePmtDy?: string, maxContrDy?: string, maxSavingDueDy?: string, maxSavingDy?: string, maxTaxinvDueDy?: string, maxTaxinvIssDy?: string, maxVatTotalFeeAmt?: number, minBalancePmtDy?: string, minContrDy?: string, minSavingDueDy?: string, minSavingDy?: string, minTaxinvDueDy?: string, minTaxinvIssDy?: string, minVatTotalFeeAmt?: number, orderBy?: string, pageNum?: number, pageSize?: number, savingStatCd?: Array<string>, savingYn?: string, taxinvIssStatCd?: Array<string>, taxinvIssYn?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
export declare const LwhFeeControllerApiFp: (configuration?: Configuration) => {
    deleteLwhFeeInfo(authorization: string, contrId: string, feeId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    deleteLwhSavingInfo(authorization: string, feeId: string, seq: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    getLwhContrFeeList(authorization: string, contrId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetContrFeeInfo>>>;
    getLwhContrInfoList(authorization: string, contrId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetContrInfoOut>>>;
    getLwhContrInfoOfSavingStat(authorization: string, contrId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetContrInfoToFeeOut>>;
    getLwhContrInfoOne(authorization: string, clnId?: string, contrId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetContrInfoOut>>;
    getLwhFeeInfoList(authorization: string, contrId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetFeeInfoListOut>>>;
    getLwhFeeInfoOne(authorization: string, contrId?: string, feeId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetFeeInfoOneOut>>;
    getLwhFeePaging(authorization: string, clnName?: string, contrId?: string, feeId?: string, feePymtAgrmtYn?: string, maxBalancePmtDy?: string, maxContrDy?: string, maxSavingDueDy?: string, maxSavingDy?: string, maxTaxinvDueDy?: string, maxTaxinvIssDy?: string, maxVatTotalFeeAmt?: number, minBalancePmtDy?: string, minContrDy?: string, minSavingDueDy?: string, minSavingDy?: string, minTaxinvDueDy?: string, minTaxinvIssDy?: string, minVatTotalFeeAmt?: number, orderBy?: string, pageNum?: number, pageSize?: number, savingStatCd?: Array<string>, savingYn?: string, taxinvIssStatCd?: Array<string>, taxinvIssYn?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetFeeListOut>>;
    patchLwhFeeInfo(authorization: string, contrId: string, feeId: string, input: PatchFeeInfoIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    patchLwhFeeSavingStat(authorization: string, contrId: string, savingFeeStatCd: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    patchLwhSavingInfo(authorization: string, feeId: string, seq: number, input: PatchSavingInfoIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postLwhFeeInfo(authorization: string, contrId: string, input: PostFeeInfoIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postLwhSavingInfo(authorization: string, feeId: string, input: PostSavingInfoIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    selectLwhFeeListDownloadExcel(authorization: string, clnName?: string, contrId?: string, feeId?: string, feePymtAgrmtYn?: string, maxBalancePmtDy?: string, maxContrDy?: string, maxSavingDueDy?: string, maxSavingDy?: string, maxTaxinvDueDy?: string, maxTaxinvIssDy?: string, maxVatTotalFeeAmt?: number, minBalancePmtDy?: string, minContrDy?: string, minSavingDueDy?: string, minSavingDy?: string, minTaxinvDueDy?: string, minTaxinvIssDy?: string, minVatTotalFeeAmt?: number, orderBy?: string, pageNum?: number, pageSize?: number, savingStatCd?: Array<string>, savingYn?: string, taxinvIssStatCd?: Array<string>, taxinvIssYn?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Resource>>;
};
export declare const LwhFeeControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    deleteLwhFeeInfo(authorization: string, contrId: string, feeId: string, options?: any): AxiosPromise<number>;
    deleteLwhSavingInfo(authorization: string, feeId: string, seq: number, options?: any): AxiosPromise<number>;
    getLwhContrFeeList(authorization: string, contrId?: string, options?: any): AxiosPromise<Array<GetContrFeeInfo>>;
    getLwhContrInfoList(authorization: string, contrId?: string, options?: any): AxiosPromise<Array<GetContrInfoOut>>;
    getLwhContrInfoOfSavingStat(authorization: string, contrId?: string, options?: any): AxiosPromise<GetContrInfoToFeeOut>;
    getLwhContrInfoOne(authorization: string, clnId?: string, contrId?: string, options?: any): AxiosPromise<GetContrInfoOut>;
    getLwhFeeInfoList(authorization: string, contrId?: string, options?: any): AxiosPromise<Array<GetFeeInfoListOut>>;
    getLwhFeeInfoOne(authorization: string, contrId?: string, feeId?: string, options?: any): AxiosPromise<GetFeeInfoOneOut>;
    getLwhFeePaging(authorization: string, clnName?: string, contrId?: string, feeId?: string, feePymtAgrmtYn?: string, maxBalancePmtDy?: string, maxContrDy?: string, maxSavingDueDy?: string, maxSavingDy?: string, maxTaxinvDueDy?: string, maxTaxinvIssDy?: string, maxVatTotalFeeAmt?: number, minBalancePmtDy?: string, minContrDy?: string, minSavingDueDy?: string, minSavingDy?: string, minTaxinvDueDy?: string, minTaxinvIssDy?: string, minVatTotalFeeAmt?: number, orderBy?: string, pageNum?: number, pageSize?: number, savingStatCd?: Array<string>, savingYn?: string, taxinvIssStatCd?: Array<string>, taxinvIssYn?: string, options?: any): AxiosPromise<PagingGetFeeListOut>;
    patchLwhFeeInfo(authorization: string, contrId: string, feeId: string, input: PatchFeeInfoIn, options?: any): AxiosPromise<number>;
    patchLwhFeeSavingStat(authorization: string, contrId: string, savingFeeStatCd: string, options?: any): AxiosPromise<number>;
    patchLwhSavingInfo(authorization: string, feeId: string, seq: number, input: PatchSavingInfoIn, options?: any): AxiosPromise<number>;
    postLwhFeeInfo(authorization: string, contrId: string, input: PostFeeInfoIn, options?: any): AxiosPromise<number>;
    postLwhSavingInfo(authorization: string, feeId: string, input: PostSavingInfoIn, options?: any): AxiosPromise<number>;
    selectLwhFeeListDownloadExcel(authorization: string, clnName?: string, contrId?: string, feeId?: string, feePymtAgrmtYn?: string, maxBalancePmtDy?: string, maxContrDy?: string, maxSavingDueDy?: string, maxSavingDy?: string, maxTaxinvDueDy?: string, maxTaxinvIssDy?: string, maxVatTotalFeeAmt?: number, minBalancePmtDy?: string, minContrDy?: string, minSavingDueDy?: string, minSavingDy?: string, minTaxinvDueDy?: string, minTaxinvIssDy?: string, minVatTotalFeeAmt?: number, orderBy?: string, pageNum?: number, pageSize?: number, savingStatCd?: Array<string>, savingYn?: string, taxinvIssStatCd?: Array<string>, taxinvIssYn?: string, options?: any): AxiosPromise<Resource>;
};
export declare class LwhFeeControllerApi extends BaseAPI {
    deleteLwhFeeInfo(authorization: string, contrId: string, feeId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    deleteLwhSavingInfo(authorization: string, feeId: string, seq: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    getLwhContrFeeList(authorization: string, contrId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetContrFeeInfo[], any>>;
    getLwhContrInfoList(authorization: string, contrId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetContrInfoOut[], any>>;
    getLwhContrInfoOfSavingStat(authorization: string, contrId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetContrInfoToFeeOut, any>>;
    getLwhContrInfoOne(authorization: string, clnId?: string, contrId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetContrInfoOut, any>>;
    getLwhFeeInfoList(authorization: string, contrId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetFeeInfoListOut[], any>>;
    getLwhFeeInfoOne(authorization: string, contrId?: string, feeId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetFeeInfoOneOut, any>>;
    getLwhFeePaging(authorization: string, clnName?: string, contrId?: string, feeId?: string, feePymtAgrmtYn?: string, maxBalancePmtDy?: string, maxContrDy?: string, maxSavingDueDy?: string, maxSavingDy?: string, maxTaxinvDueDy?: string, maxTaxinvIssDy?: string, maxVatTotalFeeAmt?: number, minBalancePmtDy?: string, minContrDy?: string, minSavingDueDy?: string, minSavingDy?: string, minTaxinvDueDy?: string, minTaxinvIssDy?: string, minVatTotalFeeAmt?: number, orderBy?: string, pageNum?: number, pageSize?: number, savingStatCd?: Array<string>, savingYn?: string, taxinvIssStatCd?: Array<string>, taxinvIssYn?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetFeeListOut, any>>;
    patchLwhFeeInfo(authorization: string, contrId: string, feeId: string, input: PatchFeeInfoIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    patchLwhFeeSavingStat(authorization: string, contrId: string, savingFeeStatCd: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    patchLwhSavingInfo(authorization: string, feeId: string, seq: number, input: PatchSavingInfoIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postLwhFeeInfo(authorization: string, contrId: string, input: PostFeeInfoIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postLwhSavingInfo(authorization: string, feeId: string, input: PostSavingInfoIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    selectLwhFeeListDownloadExcel(authorization: string, clnName?: string, contrId?: string, feeId?: string, feePymtAgrmtYn?: string, maxBalancePmtDy?: string, maxContrDy?: string, maxSavingDueDy?: string, maxSavingDy?: string, maxTaxinvDueDy?: string, maxTaxinvIssDy?: string, maxVatTotalFeeAmt?: number, minBalancePmtDy?: string, minContrDy?: string, minSavingDueDy?: string, minSavingDy?: string, minTaxinvDueDy?: string, minTaxinvIssDy?: string, minVatTotalFeeAmt?: number, orderBy?: string, pageNum?: number, pageSize?: number, savingStatCd?: Array<string>, savingYn?: string, taxinvIssStatCd?: Array<string>, taxinvIssYn?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Resource, any>>;
}
