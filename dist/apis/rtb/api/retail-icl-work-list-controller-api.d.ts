import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { GetIclWorkStatusPercentOut } from '../model';
import { PagingGetPhtShtListOut } from '../model';
import { PagingGetRetailPrdChkListOut } from '../model';
import { PatchRetailPhtShtChangePtbIn } from '../model';
import { PatchRetailPrdChkIclWorkChangePtbIn } from '../model';
export declare const RetailIclWorkListControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    deleteRetailIclWork: (authorization: string, taskId: Array<string>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getRetailPhtShtIclWorkListPaging: (authorization: string, bjdCd?: Array<string>, bldId?: string, bltypDtlId?: string, bltypId?: Array<string>, costrStatCd?: string, iclTaskStatCd?: string, maxCmplDt?: string, maxPrdCnt?: number, maxRegDy?: string, minCmplDt?: string, minPrdCnt?: number, minRegDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, ptbId?: string, rentCfCd?: Array<string>, servOpt?: string, taskCfCd?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getRetailPhtShtIclWorkPercent: (authorization: string, bjdCd?: Array<string>, bldId?: string, bltypDtlId?: string, bltypId?: Array<string>, costrStatCd?: string, iclTaskStatCd?: string, maxCmplDt?: string, maxPrdCnt?: number, maxRegDy?: string, minCmplDt?: string, minPrdCnt?: number, minRegDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, ptbId?: string, rentCfCd?: Array<string>, servOpt?: string, taskCfCd?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getRetailPrdChkIclWorkListPaging: (authorization: string, bldId?: string, bltypDtlId?: string, bltypId?: Array<string>, costrStatCd?: string, houseOfficeYn?: string, iclTaskStatCd?: string, maxBldLastCallDy?: string, maxCmplDt?: string, maxRegDy?: string, maxUnitChkDy?: string, minBldLastCallDy?: string, minCmplDt?: string, minRegDy?: string, minUnitChkDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, ptbId?: string, rentCfCd?: Array<string>, servOpt?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getRetailPrdChkIclWorkPercent: (authorization: string, bldId?: string, bltypDtlId?: string, bltypId?: Array<string>, costrStatCd?: string, houseOfficeYn?: string, iclTaskStatCd?: string, maxBldLastCallDy?: string, maxCmplDt?: string, maxRegDy?: string, maxUnitChkDy?: string, minBldLastCallDy?: string, minCmplDt?: string, minRegDy?: string, minUnitChkDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, ptbId?: string, rentCfCd?: Array<string>, servOpt?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchRetailPhtShtIclWorkChangePtb: (authorization: string, input: PatchRetailPhtShtChangePtbIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchRetailPrdChkIclWorkChangePtb: (authorization: string, input: PatchRetailPrdChkIclWorkChangePtbIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
export declare const RetailIclWorkListControllerApiFp: (configuration?: Configuration) => {
    deleteRetailIclWork(authorization: string, taskId: Array<string>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    getRetailPhtShtIclWorkListPaging(authorization: string, bjdCd?: Array<string>, bldId?: string, bltypDtlId?: string, bltypId?: Array<string>, costrStatCd?: string, iclTaskStatCd?: string, maxCmplDt?: string, maxPrdCnt?: number, maxRegDy?: string, minCmplDt?: string, minPrdCnt?: number, minRegDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, ptbId?: string, rentCfCd?: Array<string>, servOpt?: string, taskCfCd?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetPhtShtListOut>>;
    getRetailPhtShtIclWorkPercent(authorization: string, bjdCd?: Array<string>, bldId?: string, bltypDtlId?: string, bltypId?: Array<string>, costrStatCd?: string, iclTaskStatCd?: string, maxCmplDt?: string, maxPrdCnt?: number, maxRegDy?: string, minCmplDt?: string, minPrdCnt?: number, minRegDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, ptbId?: string, rentCfCd?: Array<string>, servOpt?: string, taskCfCd?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetIclWorkStatusPercentOut>>;
    getRetailPrdChkIclWorkListPaging(authorization: string, bldId?: string, bltypDtlId?: string, bltypId?: Array<string>, costrStatCd?: string, houseOfficeYn?: string, iclTaskStatCd?: string, maxBldLastCallDy?: string, maxCmplDt?: string, maxRegDy?: string, maxUnitChkDy?: string, minBldLastCallDy?: string, minCmplDt?: string, minRegDy?: string, minUnitChkDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, ptbId?: string, rentCfCd?: Array<string>, servOpt?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetRetailPrdChkListOut>>;
    getRetailPrdChkIclWorkPercent(authorization: string, bldId?: string, bltypDtlId?: string, bltypId?: Array<string>, costrStatCd?: string, houseOfficeYn?: string, iclTaskStatCd?: string, maxBldLastCallDy?: string, maxCmplDt?: string, maxRegDy?: string, maxUnitChkDy?: string, minBldLastCallDy?: string, minCmplDt?: string, minRegDy?: string, minUnitChkDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, ptbId?: string, rentCfCd?: Array<string>, servOpt?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetIclWorkStatusPercentOut>>;
    patchRetailPhtShtIclWorkChangePtb(authorization: string, input: PatchRetailPhtShtChangePtbIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    patchRetailPrdChkIclWorkChangePtb(authorization: string, input: PatchRetailPrdChkIclWorkChangePtbIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
};
export declare const RetailIclWorkListControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    deleteRetailIclWork(authorization: string, taskId: Array<string>, options?: any): AxiosPromise<number>;
    getRetailPhtShtIclWorkListPaging(authorization: string, bjdCd?: Array<string>, bldId?: string, bltypDtlId?: string, bltypId?: Array<string>, costrStatCd?: string, iclTaskStatCd?: string, maxCmplDt?: string, maxPrdCnt?: number, maxRegDy?: string, minCmplDt?: string, minPrdCnt?: number, minRegDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, ptbId?: string, rentCfCd?: Array<string>, servOpt?: string, taskCfCd?: string, options?: any): AxiosPromise<PagingGetPhtShtListOut>;
    getRetailPhtShtIclWorkPercent(authorization: string, bjdCd?: Array<string>, bldId?: string, bltypDtlId?: string, bltypId?: Array<string>, costrStatCd?: string, iclTaskStatCd?: string, maxCmplDt?: string, maxPrdCnt?: number, maxRegDy?: string, minCmplDt?: string, minPrdCnt?: number, minRegDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, ptbId?: string, rentCfCd?: Array<string>, servOpt?: string, taskCfCd?: string, options?: any): AxiosPromise<GetIclWorkStatusPercentOut>;
    getRetailPrdChkIclWorkListPaging(authorization: string, bldId?: string, bltypDtlId?: string, bltypId?: Array<string>, costrStatCd?: string, houseOfficeYn?: string, iclTaskStatCd?: string, maxBldLastCallDy?: string, maxCmplDt?: string, maxRegDy?: string, maxUnitChkDy?: string, minBldLastCallDy?: string, minCmplDt?: string, minRegDy?: string, minUnitChkDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, ptbId?: string, rentCfCd?: Array<string>, servOpt?: string, options?: any): AxiosPromise<PagingGetRetailPrdChkListOut>;
    getRetailPrdChkIclWorkPercent(authorization: string, bldId?: string, bltypDtlId?: string, bltypId?: Array<string>, costrStatCd?: string, houseOfficeYn?: string, iclTaskStatCd?: string, maxBldLastCallDy?: string, maxCmplDt?: string, maxRegDy?: string, maxUnitChkDy?: string, minBldLastCallDy?: string, minCmplDt?: string, minRegDy?: string, minUnitChkDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, ptbId?: string, rentCfCd?: Array<string>, servOpt?: string, options?: any): AxiosPromise<GetIclWorkStatusPercentOut>;
    patchRetailPhtShtIclWorkChangePtb(authorization: string, input: PatchRetailPhtShtChangePtbIn, options?: any): AxiosPromise<string>;
    patchRetailPrdChkIclWorkChangePtb(authorization: string, input: PatchRetailPrdChkIclWorkChangePtbIn, options?: any): AxiosPromise<string>;
};
export declare class RetailIclWorkListControllerApi extends BaseAPI {
    deleteRetailIclWork(authorization: string, taskId: Array<string>, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    getRetailPhtShtIclWorkListPaging(authorization: string, bjdCd?: Array<string>, bldId?: string, bltypDtlId?: string, bltypId?: Array<string>, costrStatCd?: string, iclTaskStatCd?: string, maxCmplDt?: string, maxPrdCnt?: number, maxRegDy?: string, minCmplDt?: string, minPrdCnt?: number, minRegDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, ptbId?: string, rentCfCd?: Array<string>, servOpt?: string, taskCfCd?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetPhtShtListOut, any>>;
    getRetailPhtShtIclWorkPercent(authorization: string, bjdCd?: Array<string>, bldId?: string, bltypDtlId?: string, bltypId?: Array<string>, costrStatCd?: string, iclTaskStatCd?: string, maxCmplDt?: string, maxPrdCnt?: number, maxRegDy?: string, minCmplDt?: string, minPrdCnt?: number, minRegDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, ptbId?: string, rentCfCd?: Array<string>, servOpt?: string, taskCfCd?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetIclWorkStatusPercentOut, any>>;
    getRetailPrdChkIclWorkListPaging(authorization: string, bldId?: string, bltypDtlId?: string, bltypId?: Array<string>, costrStatCd?: string, houseOfficeYn?: string, iclTaskStatCd?: string, maxBldLastCallDy?: string, maxCmplDt?: string, maxRegDy?: string, maxUnitChkDy?: string, minBldLastCallDy?: string, minCmplDt?: string, minRegDy?: string, minUnitChkDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, ptbId?: string, rentCfCd?: Array<string>, servOpt?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetRetailPrdChkListOut, any>>;
    getRetailPrdChkIclWorkPercent(authorization: string, bldId?: string, bltypDtlId?: string, bltypId?: Array<string>, costrStatCd?: string, houseOfficeYn?: string, iclTaskStatCd?: string, maxBldLastCallDy?: string, maxCmplDt?: string, maxRegDy?: string, maxUnitChkDy?: string, minBldLastCallDy?: string, minCmplDt?: string, minRegDy?: string, minUnitChkDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, paroTypeCd?: Array<string>, ptbId?: string, rentCfCd?: Array<string>, servOpt?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetIclWorkStatusPercentOut, any>>;
    patchRetailPhtShtIclWorkChangePtb(authorization: string, input: PatchRetailPhtShtChangePtbIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    patchRetailPrdChkIclWorkChangePtb(authorization: string, input: PatchRetailPrdChkIclWorkChangePtbIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
}
