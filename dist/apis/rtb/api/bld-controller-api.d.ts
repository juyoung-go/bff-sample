import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { AddrInfo } from '../model';
import { DeleteBldIn } from '../model';
import { GetBldClctCycleResnIn } from '../model';
import { GetBldClnOut } from '../model';
import { GetBldConOneOut } from '../model';
import { GetBldConOut } from '../model';
import { GetBldExternalDispIn } from '../model';
import { GetBldForUploadPhtOut } from '../model';
import { GetBldLatLngListOut } from '../model';
import { GetBldMobOut } from '../model';
import { GetBldOut } from '../model';
import { GetBldOutlinePagingIn } from '../model';
import { GetBldPhtOut } from '../model';
import { GetBldPnuOut } from '../model';
import { GetBldPrdFlrNumIn } from '../model';
import { GetBldPrdOutWithPht } from '../model';
import { GetBldRelPnuMobileOut } from '../model';
import { GetBldShofiOut } from '../model';
import { GetBldSmsRcvrIn } from '../model';
import { GetBldTmAsgmDlyMngIn } from '../model';
import { GetBselListOut } from '../model';
import { GetConNumSameBldOut } from '../model';
import { GetConsecPrdForBldCardOut } from '../model';
import { GetMyTaskListOut } from '../model';
import { GetPhtForBldScreenOut } from '../model';
import { GetPrdForBldCardOut } from '../model';
import { GetRentCdtOut } from '../model';
import { GetTenantCurstsOut } from '../model';
import { GetTodayProcTaskListOut } from '../model';
import { GetwChkReqWorkCardPagingOut } from '../model';
import { MtaPhtMst } from '../model';
import { ObjBldMst } from '../model';
import { ObjRentCdtDtl } from '../model';
import { ObjRentCdtMst } from '../model';
import { ObjRephtgDtl } from '../model';
import { ObjShofiDtl } from '../model';
import { PagingGeBldMngCardPagingOut } from '../model';
import { PagingGetBldContrOut } from '../model';
import { PagingGetBldOut } from '../model';
import { PagingGetBldSmsOut } from '../model';
import { PagingGetConClctFailResnPagingOut } from '../model';
import { PagingGetFileOut } from '../model';
import { PagingGetOutLineListOut } from '../model';
import { PagingGetPtntlPrdOut } from '../model';
import { PagingGetRePhtgReqWorkCardPagingOut } from '../model';
import { PagingGetSchBldOut } from '../model';
import { PagingGetStregListOut } from '../model';
import { PagingGetTmMngChkReqPanelPagingOut } from '../model';
import { PagingGetwChkReqWorkCardPagingOut } from '../model';
import { PatchBldConRelIn } from '../model';
import { PatchBldIn } from '../model';
import { PatchBldPhtsIn } from '../model';
import { PatchBldUploadPhtIn } from '../model';
import { PatchMobBldIn } from '../model';
import { PatchRentCdtDtlIn } from '../model';
import { PatchRentCdtIn } from '../model';
import { PatchShofiIn } from '../model';
import { PatchTenantCurstsIn } from '../model';
import { PostBldConReqStatIn } from '../model';
import { PostBldIn } from '../model';
import { PostBldShofiIn } from '../model';
import { PostRentCdtDtlIn } from '../model';
import { PostRentCdtIn } from '../model';
import { PostTenantCurstsIn } from '../model';
import { PostTmMngChkReqIn } from '../model';
import { PostTransferBldConIn } from '../model';
import { PostUnitIn } from '../model';
import { Resource } from '../model';
import { SaveBldConRelIn } from '../model';
import { SaveRephtgIn } from '../model';
import { SearchBldCardOut } from '../model';
import { SelectBldPrdListForScreenOut } from '../model';
import { SelectBldUnitListForScreenOut } from '../model';
import { SelectUnitPrdLinkForScreenOut } from '../model';
export declare const BldControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    deleteBld: (authorization: string, bldId: string, input: DeleteBldIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteBldPnu: (authorization: string, bldId: string, pnuId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteBldRentCdt: (authorization: string, bldId: string, rentCdtSeq: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteBldRentCdtDtl: (authorization: string, bldId: string, rentCdtSeq: number, seq: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteBldShofi: (authorization: string, bldId: string, seq: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteTenantCursts: (authorization: string, bldId: string, tntId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    downloadBldPht: (authorization: string, bldId: string, bldId2?: string, phtLclCd?: string, prdId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getAddrRelBldInfoList: (authorization: string, pnuId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getAllBldIdList: (authorization: string, bjdCd?: Array<string>, bldBoeTypeCds?: Array<string>, bldConOwnTypeCd?: string, bldId?: string, bldName?: string, bltypCnt?: number, bltypDtlId?: string, bltypId?: Array<string>, bonBunji?: string, buBunji?: string, cityDvpDistYn?: string, costrStatCd?: string, flrCntYn?: string, jibunAddr?: string, mainConYn?: string, maxCreateDt?: string, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, minCreateDt?: string, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, prdId?: string, prdTrStatCd?: string, prdYn?: string, rentCfCd?: Array<string>, roadNameAddr?: string, servOpt?: string, validNumYn?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getBld: (authorization: string, bldId: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getBldBselPrd: (authorization: string, bldId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getBldClnList: (authorization: string, bldId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getBldConList: (authorization: string, bldId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getBldConListMobile: (authorization: string, bldId: string, conNum?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getBldContrPaging: (authorization: string, bldId: string, bldId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getBldFilePaging: (authorization: string, bldId: string, clnId?: string, fileTgtRelCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, tgtId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getBldLatLngList: (authorization: string, limit?: number, neLat?: string, neLng?: string, swLat?: string, swLng?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getBldListPaging: (authorization: string, bjdCd?: Array<string>, bldBoeTypeCds?: Array<string>, bldConOwnTypeCd?: string, bldId?: string, bldName?: string, bltypCnt?: number, bltypDtlId?: string, bltypId?: Array<string>, bonBunji?: string, buBunji?: string, cityDvpDistYn?: string, costrStatCd?: string, flrCntYn?: string, jibunAddr?: string, mainConYn?: string, maxCreateDt?: string, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, minCreateDt?: string, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, prdId?: string, prdTrStatCd?: string, prdYn?: string, rentCfCd?: Array<string>, roadNameAddr?: string, servOpt?: string, validNumYn?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getBldMob: (authorization: string, bldId: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getBldOneForUploadPht: (authorization: string, bldId: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getBldPhtList: (authorization: string, bldId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getBldPnuMobile: (authorization: string, bldId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getBldPrdPhtList: (authorization: string, bldId: string, isLwh?: boolean, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getBldRentCdtList: (authorization: string, bldId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getBldShofiOne: (authorization: string, bldId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getBldSmsPaging: (authorization: string, bldId: string, bldId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getBldStregList: (authorization: string, bldId?: string, orderBy?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getConIdSameBldList: (authorization: string, conId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getConsecPrdForBldCard: (authorization: string, bldId: string, bldId2?: string, eqpCostAmtYn?: string, flrOpt?: string, intYn?: string, maxDpstAmt?: number, maxMaintAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, maxSumNlaPy?: number, minDpstAmt?: number, minMaintAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, minSumNlaPy?: number, ownUserId?: string, shofiYn?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getExcelDown: (authorization: string, bldId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getPhtForBldScreen: (authorization: string, bldId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getPrdForBldCard: (authorization: string, bldId: string, bldId2?: string, eqpCostAmtYn?: string, flrOpt?: string, intYn?: string, maxDpstAmt?: number, maxMaintAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, minDpstAmt?: number, minMaintAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, ownUserId?: string, shofiYn?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getPtntlPrdPaging: (authorization: string, bjdCd?: Array<string>, bldName?: string, orderBy?: string, pageNum?: number, pageSize?: number, statCd?: Array<string>, taskName?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getSchBldPaging: (authorization: string, inputType?: string, inputValue?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getTenantCurstsList: (authorization: string, bldId: string, flrNum?: number, tenantStatCd?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getTmMngChkReqPanelListPaging: (authorization: string, bldId: string, bldId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    insertTenantCursts: (authorization: string, bldId: string, input: PostTenantCurstsIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchBldBunji: (authorization: string, bldId: string, input: AddrInfo, lat?: number, lng?: number, roadAddr?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchBldBunjilist: (authorization: string, afterBldId?: string, beforeBldId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchBldClctCycleMng: (authorization: string, bldId: string, input: GetBldClctCycleResnIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchBldCon: (authorization: string, bldId: string, conId: string, input: PatchBldConRelIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchBldExternalDisp: (authorization: string, bldId: string, input: GetBldExternalDispIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchBldPht: (authorization: string, bldId: string, input: PatchBldPhtsIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchBldRentCdt: (authorization: string, bldId: string, rentCdtSeq: number, input: PatchRentCdtIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchBldRentCdtDtl: (authorization: string, bldId: string, rentCdtSeq: number, seq: number, input: PatchRentCdtDtlIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchBldShofi: (authorization: string, bldId: string, seq: number, input: PatchShofiIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchBldTipMig: (authorization: string, bldId?: string, tipIdList?: Array<string>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchBldTmAsgmDlyMng: (authorization: string, bldId: string, input: GetBldTmAsgmDlyMngIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchLwhTipMig: (authorization: string, bldId?: string, tipIdList?: Array<string>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchPrdFlrNum: (authorization: string, bldId: string, input: GetBldPrdFlrNumIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchRePhtgReqWork: (authorization: string, bldId: string, rephtgTypeCd?: string, seq?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchTmMngChkReqCtn: (authorization: string, bldId: string, input: PostTmMngChkReqIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postBld: (authorization: string, input: PostBldIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postBldCon: (authorization: string, bldId: string, input: SaveBldConRelIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postBldConStatReq: (authorization: string, bldId: string, conId: string, input: PostBldConReqStatIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postBldPnu: (authorization: string, bldId: string, input: AddrInfo, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postBldRentCdt: (authorization: string, bldId: string, input: PostRentCdtIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postBldRentCdtDtl: (authorization: string, bldId: string, rentCdtSeq: number, input: PostRentCdtDtlIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postBldRephtg: (authorization: string, bldId: string, input: SaveRephtgIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postBldShofi: (authorization: string, bldId: string, input: PostBldShofiIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postBldTmChkReq: (authorization: string, bldId: string, input: PostTmMngChkReqIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postBldUrpInfo: (authorization: string, input: GetBldSmsRcvrIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postTransferBldContact: (authorization: string, bldId: string, input: PostTransferBldConIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postUnit: (authorization: string, bldId: string, input: PostUnitIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    searchBldOrPrdList: (authorization: string, acSplyTypeCd?: string, allDayOpenTypeCd?: string, bldBoeTypeCd?: string, bldLeaseYn?: string, bltypCnt?: number, bltypDtlId?: string, bltypId?: Array<string>, conYn?: string, costrStatCd?: string, elvStatCd?: string, eqpCostAmtYn?: string, exclBldYn?: string, flrOpt?: string, hdyOpenTypeCd?: string, heatSplyTypeCd?: string, houseOfficeYn?: string, intYn?: string, mainConYn?: string, maxCmplCostrRmdlYear?: string, maxDpstAmt?: number, maxLastChkDy?: string, maxMaintAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, maxSumNlaPy?: number, maxTotalNlaPy?: number, maxWlkTimeMin?: number, minCmplCostrRmdlYear?: string, minDpstAmt?: number, minLastChkDy?: string, minMaintAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, minSumNlaPy?: number, minTotalNlaPy?: number, minWlkTimeMin?: number, neLat?: number, neLng?: number, orderBy?: string, ownUserId?: string, paroTypeCd?: Array<string>, phtOrdCd?: string, pkltTypeCd?: string, prdYn?: string, rentCfCd?: string, servCd?: Array<string>, servOpt?: string, shofiYn?: string, swLat?: number, swLng?: number, tmAsgmtDlyCd?: string, wcTypeCd?: Array<string>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    searchBldWithConsecPrd: (authorization: string, acSplyTypeCd?: string, allDayOpenTypeCd?: string, bldBoeTypeCd?: string, bldLeaseYn?: string, bltypCnt?: number, bltypDtlId?: string, bltypId?: Array<string>, conYn?: string, costrStatCd?: string, elvStatCd?: string, eqpCostAmtYn?: string, exclBldYn?: string, flrOpt?: string, hdyOpenTypeCd?: string, heatSplyTypeCd?: string, houseOfficeYn?: string, intYn?: string, mainConYn?: string, maxCmplCostrRmdlYear?: string, maxDpstAmt?: number, maxLastChkDy?: string, maxMaintAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, maxSumNlaPy?: number, maxTotalNlaPy?: number, maxWlkTimeMin?: number, minCmplCostrRmdlYear?: string, minDpstAmt?: number, minLastChkDy?: string, minMaintAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, minSumNlaPy?: number, minTotalNlaPy?: number, minWlkTimeMin?: number, neLat?: number, neLng?: number, orderBy?: string, ownUserId?: string, paroTypeCd?: Array<string>, phtOrdCd?: string, pkltTypeCd?: string, prdYn?: string, rentCfCd?: string, servCd?: Array<string>, servOpt?: string, shofiYn?: string, swLat?: number, swLng?: number, tmAsgmtDlyCd?: string, wcTypeCd?: Array<string>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    searchPrdList: (authorization: string, acSplyTypeCd?: string, allDayOpenTypeCd?: string, bldBoeTypeCd?: string, bldLeaseYn?: string, bltypCnt?: number, bltypDtlId?: string, bltypId?: Array<string>, conYn?: string, costrStatCd?: string, elvStatCd?: string, eqpCostAmtYn?: string, exclBldYn?: string, flrOpt?: string, hdyOpenTypeCd?: string, heatSplyTypeCd?: string, houseOfficeYn?: string, intYn?: string, mainConYn?: string, maxCmplCostrRmdlYear?: string, maxDpstAmt?: number, maxLastChkDy?: string, maxMaintAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, maxSumNlaPy?: number, maxTotalNlaPy?: number, maxWlkTimeMin?: number, minCmplCostrRmdlYear?: string, minDpstAmt?: number, minLastChkDy?: string, minMaintAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, minSumNlaPy?: number, minTotalNlaPy?: number, minWlkTimeMin?: number, neLat?: number, neLng?: number, orderBy?: string, ownUserId?: string, paroTypeCd?: Array<string>, phtOrdCd?: string, pkltTypeCd?: string, prdYn?: string, rentCfCd?: string, servCd?: Array<string>, servOpt?: string, shofiYn?: string, swLat?: number, swLng?: number, tmAsgmtDlyCd?: string, wcTypeCd?: Array<string>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectBjdBldOutlineListForScreen: (authorization: string, bjdCd: Array<string>, countPerPage: number, currentPage: number, keyword: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectBjdLwhOutlineListForScreen: (authorization: string, bjdCd: Array<string>, countPerPage: number, currentPage: number, keyword: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectBldConClcFrsn: (authorization: string, bldId: string, bldId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectBldMngListForScreen: (authorization: string, bldId: string, bldId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, tabKey?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectBldMyTaskListScreen: (authorization: string, workCfCd?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectBldOutlineList: (authorization: string, bldId?: string, mgmBldrgstPk?: string, orderBy?: string, outMngCd?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectBldOutlineListForScreen: (authorization: string, countPerPage: number, currentPage: number, keyword: string, searchType: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectBldOutlineOne: (authorization: string, bldId?: string, mgmBldrgstPk?: string, orderBy?: string, outMngCd?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectBldOutlineYn: (authorization: string, bldId?: string, mgmBldrgstPk?: string, orderBy?: string, outMngCd?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectBldPrdListForScreen: (authorization: string, bldId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectBldTenantListForScreenExcel: (authorization: string, bldId: string, flrNum?: number, tenantStatCd?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectBldTodayProcTaskListScreen: (authorization: string, maxExpireDy?: string, minExpireDy?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectBldUnitListForScreen: (authorization: string, bldId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectBldUnitListForScreenExcel: (authorization: string, bldId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectInbInfoDownloadExcel: (authorization: string, bjdCd?: Array<string>, bldBoeTypeCds?: Array<string>, bldConOwnTypeCd?: string, bldId?: string, bldName?: string, bltypCnt?: number, bltypDtlId?: string, bltypId?: Array<string>, bonBunji?: string, buBunji?: string, cityDvpDistYn?: string, costrStatCd?: string, flrCntYn?: string, jibunAddr?: string, mainConYn?: string, maxCreateDt?: string, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, minCreateDt?: string, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, prdId?: string, prdTrStatCd?: string, prdYn?: string, rentCfCd?: Array<string>, roadNameAddr?: string, servOpt?: string, validNumYn?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectLwhOutlineList: (authorization: string, bldId?: string, mgmBldrgstPk?: string, orderBy?: string, outMngCd?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectLwhOutlineListForScreen: (authorization: string, countPerPage: number, currentPage: number, keyword: string, searchType: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectLwhOutlineOne: (authorization: string, bldId?: string, mgmBldrgstPk?: string, orderBy?: string, outMngCd?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectMigBldOutlineList: (authorization: string, bldId?: string, mgmBldrgstPk?: string, orderBy?: string, outMngCd?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectMigLwhOutlineList: (authorization: string, bldId?: string, mgmBldrgstPk?: string, orderBy?: string, outMngCd?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectMobOtreqChkReqWork: (authorization: string, bldId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectOtreqChkReqWork: (authorization: string, bldId: string, bldId2?: string, conTab?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectRePhtgWork: (authorization: string, bldId: string, bldId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectRetailUnitListForScreen: (authorization: string, bldId: string, outId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    selectUnitListForPrdLink: (authorization: string, bldId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    updateBld: (authorization: string, bldId: string, input: PatchBldIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    updateBldForUploadPht: (authorization: string, bldId: string, input: PatchBldUploadPhtIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    updateBldOutline: (authorization: string, input: GetBldOutlinePagingIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    updateBldPrdCheck: (authorization: string, bldId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    updateBldRoadAddr: (authorization: string, bldId: string, roadAddr?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    updateLwhOutline: (authorization: string, input: GetBldOutlinePagingIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    updateMobBld: (authorization: string, bldId: string, input: PatchMobBldIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    updateTenantCursts: (authorization: string, bldId: string, input: PatchTenantCurstsIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    uploadBldPhoto: (authorization: string, bldId?: string, phtLclCd?: string, phtgrId?: string, prdId?: string, ptbId?: string, taskId?: string, watermarkYn?: string, pht?: any, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
export declare const BldControllerApiFp: (configuration?: Configuration) => {
    deleteBld(authorization: string, bldId: string, input: DeleteBldIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    deleteBldPnu(authorization: string, bldId: string, pnuId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    deleteBldRentCdt(authorization: string, bldId: string, rentCdtSeq: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    deleteBldRentCdtDtl(authorization: string, bldId: string, rentCdtSeq: number, seq: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    deleteBldShofi(authorization: string, bldId: string, seq: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    deleteTenantCursts(authorization: string, bldId: string, tntId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    downloadBldPht(authorization: string, bldId: string, bldId2?: string, phtLclCd?: string, prdId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    getAddrRelBldInfoList(authorization: string, pnuId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ObjBldMst>>>;
    getAllBldIdList(authorization: string, bjdCd?: Array<string>, bldBoeTypeCds?: Array<string>, bldConOwnTypeCd?: string, bldId?: string, bldName?: string, bltypCnt?: number, bltypDtlId?: string, bltypId?: Array<string>, bonBunji?: string, buBunji?: string, cityDvpDistYn?: string, costrStatCd?: string, flrCntYn?: string, jibunAddr?: string, mainConYn?: string, maxCreateDt?: string, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, minCreateDt?: string, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, prdId?: string, prdTrStatCd?: string, prdYn?: string, rentCfCd?: Array<string>, roadNameAddr?: string, servOpt?: string, validNumYn?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<string>>>;
    getBld(authorization: string, bldId: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetBldOut>>;
    getBldBselPrd(authorization: string, bldId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetBselListOut>>>;
    getBldClnList(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetBldClnOut>>>;
    getBldConList(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetBldConOut>>>;
    getBldConListMobile(authorization: string, bldId: string, conNum?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetConNumSameBldOut>>>;
    getBldContrPaging(authorization: string, bldId: string, bldId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetBldContrOut>>;
    getBldFilePaging(authorization: string, bldId: string, clnId?: string, fileTgtRelCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, tgtId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetFileOut>>;
    getBldLatLngList(authorization: string, limit?: number, neLat?: string, neLng?: string, swLat?: string, swLng?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetBldLatLngListOut>>;
    getBldListPaging(authorization: string, bjdCd?: Array<string>, bldBoeTypeCds?: Array<string>, bldConOwnTypeCd?: string, bldId?: string, bldName?: string, bltypCnt?: number, bltypDtlId?: string, bltypId?: Array<string>, bonBunji?: string, buBunji?: string, cityDvpDistYn?: string, costrStatCd?: string, flrCntYn?: string, jibunAddr?: string, mainConYn?: string, maxCreateDt?: string, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, minCreateDt?: string, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, prdId?: string, prdTrStatCd?: string, prdYn?: string, rentCfCd?: Array<string>, roadNameAddr?: string, servOpt?: string, validNumYn?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetBldOut>>;
    getBldMob(authorization: string, bldId: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetBldMobOut>>;
    getBldOneForUploadPht(authorization: string, bldId: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetBldForUploadPhtOut>>;
    getBldPhtList(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetBldPhtOut>>>;
    getBldPnuMobile(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetBldRelPnuMobileOut>>>;
    getBldPrdPhtList(authorization: string, bldId: string, isLwh?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetBldPrdOutWithPht>>>;
    getBldRentCdtList(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetRentCdtOut>>>;
    getBldShofiOne(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetBldShofiOut>>;
    getBldSmsPaging(authorization: string, bldId: string, bldId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetBldSmsOut>>;
    getBldStregList(authorization: string, bldId?: string, orderBy?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetOutLineListOut>>;
    getConIdSameBldList(authorization: string, conId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetConNumSameBldOut>>>;
    getConsecPrdForBldCard(authorization: string, bldId: string, bldId2?: string, eqpCostAmtYn?: string, flrOpt?: string, intYn?: string, maxDpstAmt?: number, maxMaintAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, maxSumNlaPy?: number, minDpstAmt?: number, minMaintAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, minSumNlaPy?: number, ownUserId?: string, shofiYn?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetConsecPrdForBldCardOut>>>;
    getExcelDown(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Resource>>;
    getPhtForBldScreen(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetPhtForBldScreenOut>>>;
    getPrdForBldCard(authorization: string, bldId: string, bldId2?: string, eqpCostAmtYn?: string, flrOpt?: string, intYn?: string, maxDpstAmt?: number, maxMaintAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, minDpstAmt?: number, minMaintAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, ownUserId?: string, shofiYn?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetPrdForBldCardOut>>>;
    getPtntlPrdPaging(authorization: string, bjdCd?: Array<string>, bldName?: string, orderBy?: string, pageNum?: number, pageSize?: number, statCd?: Array<string>, taskName?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetPtntlPrdOut>>;
    getSchBldPaging(authorization: string, inputType?: string, inputValue?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetSchBldOut>>;
    getTenantCurstsList(authorization: string, bldId: string, flrNum?: number, tenantStatCd?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetTenantCurstsOut>>>;
    getTmMngChkReqPanelListPaging(authorization: string, bldId: string, bldId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetTmMngChkReqPanelPagingOut>>;
    insertTenantCursts(authorization: string, bldId: string, input: PostTenantCurstsIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    patchBldBunji(authorization: string, bldId: string, input: AddrInfo, lat?: number, lng?: number, roadAddr?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetBldPnuOut>>;
    patchBldBunjilist(authorization: string, afterBldId?: string, beforeBldId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    patchBldClctCycleMng(authorization: string, bldId: string, input: GetBldClctCycleResnIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    patchBldCon(authorization: string, bldId: string, conId: string, input: PatchBldConRelIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetBldConOneOut>>;
    patchBldExternalDisp(authorization: string, bldId: string, input: GetBldExternalDispIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    patchBldPht(authorization: string, bldId: string, input: PatchBldPhtsIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    patchBldRentCdt(authorization: string, bldId: string, rentCdtSeq: number, input: PatchRentCdtIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ObjRentCdtMst>>;
    patchBldRentCdtDtl(authorization: string, bldId: string, rentCdtSeq: number, seq: number, input: PatchRentCdtDtlIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ObjRentCdtDtl>>;
    patchBldShofi(authorization: string, bldId: string, seq: number, input: PatchShofiIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ObjShofiDtl>>;
    patchBldTipMig(authorization: string, bldId?: string, tipIdList?: Array<string>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    patchBldTmAsgmDlyMng(authorization: string, bldId: string, input: GetBldTmAsgmDlyMngIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    patchLwhTipMig(authorization: string, bldId?: string, tipIdList?: Array<string>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    patchPrdFlrNum(authorization: string, bldId: string, input: GetBldPrdFlrNumIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    patchRePhtgReqWork(authorization: string, bldId: string, rephtgTypeCd?: string, seq?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    patchTmMngChkReqCtn(authorization: string, bldId: string, input: PostTmMngChkReqIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    postBld(authorization: string, input: PostBldIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ObjBldMst>>;
    postBldCon(authorization: string, bldId: string, input: SaveBldConRelIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetBldConOneOut>>;
    postBldConStatReq(authorization: string, bldId: string, conId: string, input: PostBldConReqStatIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postBldPnu(authorization: string, bldId: string, input: AddrInfo, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetBldPnuOut>>;
    postBldRentCdt(authorization: string, bldId: string, input: PostRentCdtIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postBldRentCdtDtl(authorization: string, bldId: string, rentCdtSeq: number, input: PostRentCdtDtlIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postBldRephtg(authorization: string, bldId: string, input: SaveRephtgIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ObjRephtgDtl>>;
    postBldShofi(authorization: string, bldId: string, input: PostBldShofiIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postBldTmChkReq(authorization: string, bldId: string, input: PostTmMngChkReqIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postBldUrpInfo(authorization: string, input: GetBldSmsRcvrIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postTransferBldContact(authorization: string, bldId: string, input: PostTransferBldConIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    postUnit(authorization: string, bldId: string, input: PostUnitIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    searchBldOrPrdList(authorization: string, acSplyTypeCd?: string, allDayOpenTypeCd?: string, bldBoeTypeCd?: string, bldLeaseYn?: string, bltypCnt?: number, bltypDtlId?: string, bltypId?: Array<string>, conYn?: string, costrStatCd?: string, elvStatCd?: string, eqpCostAmtYn?: string, exclBldYn?: string, flrOpt?: string, hdyOpenTypeCd?: string, heatSplyTypeCd?: string, houseOfficeYn?: string, intYn?: string, mainConYn?: string, maxCmplCostrRmdlYear?: string, maxDpstAmt?: number, maxLastChkDy?: string, maxMaintAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, maxSumNlaPy?: number, maxTotalNlaPy?: number, maxWlkTimeMin?: number, minCmplCostrRmdlYear?: string, minDpstAmt?: number, minLastChkDy?: string, minMaintAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, minSumNlaPy?: number, minTotalNlaPy?: number, minWlkTimeMin?: number, neLat?: number, neLng?: number, orderBy?: string, ownUserId?: string, paroTypeCd?: Array<string>, phtOrdCd?: string, pkltTypeCd?: string, prdYn?: string, rentCfCd?: string, servCd?: Array<string>, servOpt?: string, shofiYn?: string, swLat?: number, swLng?: number, tmAsgmtDlyCd?: string, wcTypeCd?: Array<string>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SearchBldCardOut>>;
    searchBldWithConsecPrd(authorization: string, acSplyTypeCd?: string, allDayOpenTypeCd?: string, bldBoeTypeCd?: string, bldLeaseYn?: string, bltypCnt?: number, bltypDtlId?: string, bltypId?: Array<string>, conYn?: string, costrStatCd?: string, elvStatCd?: string, eqpCostAmtYn?: string, exclBldYn?: string, flrOpt?: string, hdyOpenTypeCd?: string, heatSplyTypeCd?: string, houseOfficeYn?: string, intYn?: string, mainConYn?: string, maxCmplCostrRmdlYear?: string, maxDpstAmt?: number, maxLastChkDy?: string, maxMaintAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, maxSumNlaPy?: number, maxTotalNlaPy?: number, maxWlkTimeMin?: number, minCmplCostrRmdlYear?: string, minDpstAmt?: number, minLastChkDy?: string, minMaintAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, minSumNlaPy?: number, minTotalNlaPy?: number, minWlkTimeMin?: number, neLat?: number, neLng?: number, orderBy?: string, ownUserId?: string, paroTypeCd?: Array<string>, phtOrdCd?: string, pkltTypeCd?: string, prdYn?: string, rentCfCd?: string, servCd?: Array<string>, servOpt?: string, shofiYn?: string, swLat?: number, swLng?: number, tmAsgmtDlyCd?: string, wcTypeCd?: Array<string>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SearchBldCardOut>>;
    searchPrdList(authorization: string, acSplyTypeCd?: string, allDayOpenTypeCd?: string, bldBoeTypeCd?: string, bldLeaseYn?: string, bltypCnt?: number, bltypDtlId?: string, bltypId?: Array<string>, conYn?: string, costrStatCd?: string, elvStatCd?: string, eqpCostAmtYn?: string, exclBldYn?: string, flrOpt?: string, hdyOpenTypeCd?: string, heatSplyTypeCd?: string, houseOfficeYn?: string, intYn?: string, mainConYn?: string, maxCmplCostrRmdlYear?: string, maxDpstAmt?: number, maxLastChkDy?: string, maxMaintAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, maxSumNlaPy?: number, maxTotalNlaPy?: number, maxWlkTimeMin?: number, minCmplCostrRmdlYear?: string, minDpstAmt?: number, minLastChkDy?: string, minMaintAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, minSumNlaPy?: number, minTotalNlaPy?: number, minWlkTimeMin?: number, neLat?: number, neLng?: number, orderBy?: string, ownUserId?: string, paroTypeCd?: Array<string>, phtOrdCd?: string, pkltTypeCd?: string, prdYn?: string, rentCfCd?: string, servCd?: Array<string>, servOpt?: string, shofiYn?: string, swLat?: number, swLng?: number, tmAsgmtDlyCd?: string, wcTypeCd?: Array<string>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SearchBldCardOut>>;
    selectBjdBldOutlineListForScreen(authorization: string, bjdCd: Array<string>, countPerPage: number, currentPage: number, keyword: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetStregListOut>>;
    selectBjdLwhOutlineListForScreen(authorization: string, bjdCd: Array<string>, countPerPage: number, currentPage: number, keyword: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetStregListOut>>;
    selectBldConClcFrsn(authorization: string, bldId: string, bldId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetConClctFailResnPagingOut>>;
    selectBldMngListForScreen(authorization: string, bldId: string, bldId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, tabKey?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGeBldMngCardPagingOut>>;
    selectBldMyTaskListScreen(authorization: string, workCfCd?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetMyTaskListOut>>>;
    selectBldOutlineList(authorization: string, bldId?: string, mgmBldrgstPk?: string, orderBy?: string, outMngCd?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetStregListOut>>;
    selectBldOutlineListForScreen(authorization: string, countPerPage: number, currentPage: number, keyword: string, searchType: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetStregListOut>>;
    selectBldOutlineOne(authorization: string, bldId?: string, mgmBldrgstPk?: string, orderBy?: string, outMngCd?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    selectBldOutlineYn(authorization: string, bldId?: string, mgmBldrgstPk?: string, orderBy?: string, outMngCd?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    selectBldPrdListForScreen(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<SelectBldPrdListForScreenOut>>>;
    selectBldTenantListForScreenExcel(authorization: string, bldId: string, flrNum?: number, tenantStatCd?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Resource>>;
    selectBldTodayProcTaskListScreen(authorization: string, maxExpireDy?: string, minExpireDy?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetTodayProcTaskListOut>>>;
    selectBldUnitListForScreen(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<SelectBldUnitListForScreenOut>>>;
    selectBldUnitListForScreenExcel(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Resource>>;
    selectInbInfoDownloadExcel(authorization: string, bjdCd?: Array<string>, bldBoeTypeCds?: Array<string>, bldConOwnTypeCd?: string, bldId?: string, bldName?: string, bltypCnt?: number, bltypDtlId?: string, bltypId?: Array<string>, bonBunji?: string, buBunji?: string, cityDvpDistYn?: string, costrStatCd?: string, flrCntYn?: string, jibunAddr?: string, mainConYn?: string, maxCreateDt?: string, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, minCreateDt?: string, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, prdId?: string, prdTrStatCd?: string, prdYn?: string, rentCfCd?: Array<string>, roadNameAddr?: string, servOpt?: string, validNumYn?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Resource>>;
    selectLwhOutlineList(authorization: string, bldId?: string, mgmBldrgstPk?: string, orderBy?: string, outMngCd?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetStregListOut>>;
    selectLwhOutlineListForScreen(authorization: string, countPerPage: number, currentPage: number, keyword: string, searchType: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetStregListOut>>;
    selectLwhOutlineOne(authorization: string, bldId?: string, mgmBldrgstPk?: string, orderBy?: string, outMngCd?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    selectMigBldOutlineList(authorization: string, bldId?: string, mgmBldrgstPk?: string, orderBy?: string, outMngCd?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetStregListOut>>;
    selectMigLwhOutlineList(authorization: string, bldId?: string, mgmBldrgstPk?: string, orderBy?: string, outMngCd?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetStregListOut>>;
    selectMobOtreqChkReqWork(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetwChkReqWorkCardPagingOut>>>;
    selectOtreqChkReqWork(authorization: string, bldId: string, bldId2?: string, conTab?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetwChkReqWorkCardPagingOut>>;
    selectRePhtgWork(authorization: string, bldId: string, bldId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetRePhtgReqWorkCardPagingOut>>;
    selectRetailUnitListForScreen(authorization: string, bldId: string, outId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<SelectBldUnitListForScreenOut>>>;
    selectUnitListForPrdLink(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<SelectUnitPrdLinkForScreenOut>>>;
    updateBld(authorization: string, bldId: string, input: PatchBldIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    updateBldForUploadPht(authorization: string, bldId: string, input: PatchBldUploadPhtIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    updateBldOutline(authorization: string, input: GetBldOutlinePagingIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    updateBldPrdCheck(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    updateBldRoadAddr(authorization: string, bldId: string, roadAddr?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    updateLwhOutline(authorization: string, input: GetBldOutlinePagingIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    updateMobBld(authorization: string, bldId: string, input: PatchMobBldIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    updateTenantCursts(authorization: string, bldId: string, input: PatchTenantCurstsIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    uploadBldPhoto(authorization: string, bldId?: string, phtLclCd?: string, phtgrId?: string, prdId?: string, ptbId?: string, taskId?: string, watermarkYn?: string, pht?: any, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MtaPhtMst>>;
};
export declare const BldControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    deleteBld(authorization: string, bldId: string, input: DeleteBldIn, options?: any): AxiosPromise<number>;
    deleteBldPnu(authorization: string, bldId: string, pnuId: string, options?: any): AxiosPromise<number>;
    deleteBldRentCdt(authorization: string, bldId: string, rentCdtSeq: number, options?: any): AxiosPromise<number>;
    deleteBldRentCdtDtl(authorization: string, bldId: string, rentCdtSeq: number, seq: number, options?: any): AxiosPromise<number>;
    deleteBldShofi(authorization: string, bldId: string, seq: number, options?: any): AxiosPromise<number>;
    deleteTenantCursts(authorization: string, bldId: string, tntId?: string, options?: any): AxiosPromise<void>;
    downloadBldPht(authorization: string, bldId: string, bldId2?: string, phtLclCd?: string, prdId?: string, options?: any): AxiosPromise<string>;
    getAddrRelBldInfoList(authorization: string, pnuId?: string, options?: any): AxiosPromise<Array<ObjBldMst>>;
    getAllBldIdList(authorization: string, bjdCd?: Array<string>, bldBoeTypeCds?: Array<string>, bldConOwnTypeCd?: string, bldId?: string, bldName?: string, bltypCnt?: number, bltypDtlId?: string, bltypId?: Array<string>, bonBunji?: string, buBunji?: string, cityDvpDistYn?: string, costrStatCd?: string, flrCntYn?: string, jibunAddr?: string, mainConYn?: string, maxCreateDt?: string, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, minCreateDt?: string, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, prdId?: string, prdTrStatCd?: string, prdYn?: string, rentCfCd?: Array<string>, roadNameAddr?: string, servOpt?: string, validNumYn?: string, options?: any): AxiosPromise<Array<string>>;
    getBld(authorization: string, bldId: string, taskId?: string, options?: any): AxiosPromise<GetBldOut>;
    getBldBselPrd(authorization: string, bldId?: string, options?: any): AxiosPromise<Array<GetBselListOut>>;
    getBldClnList(authorization: string, bldId: string, options?: any): AxiosPromise<Array<GetBldClnOut>>;
    getBldConList(authorization: string, bldId: string, options?: any): AxiosPromise<Array<GetBldConOut>>;
    getBldConListMobile(authorization: string, bldId: string, conNum?: string, options?: any): AxiosPromise<Array<GetConNumSameBldOut>>;
    getBldContrPaging(authorization: string, bldId: string, bldId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetBldContrOut>;
    getBldFilePaging(authorization: string, bldId: string, clnId?: string, fileTgtRelCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, tgtId?: string, options?: any): AxiosPromise<PagingGetFileOut>;
    getBldLatLngList(authorization: string, limit?: number, neLat?: string, neLng?: string, swLat?: string, swLng?: string, options?: any): AxiosPromise<GetBldLatLngListOut>;
    getBldListPaging(authorization: string, bjdCd?: Array<string>, bldBoeTypeCds?: Array<string>, bldConOwnTypeCd?: string, bldId?: string, bldName?: string, bltypCnt?: number, bltypDtlId?: string, bltypId?: Array<string>, bonBunji?: string, buBunji?: string, cityDvpDistYn?: string, costrStatCd?: string, flrCntYn?: string, jibunAddr?: string, mainConYn?: string, maxCreateDt?: string, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, minCreateDt?: string, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, prdId?: string, prdTrStatCd?: string, prdYn?: string, rentCfCd?: Array<string>, roadNameAddr?: string, servOpt?: string, validNumYn?: string, options?: any): AxiosPromise<PagingGetBldOut>;
    getBldMob(authorization: string, bldId: string, taskId?: string, options?: any): AxiosPromise<GetBldMobOut>;
    getBldOneForUploadPht(authorization: string, bldId: string, taskId?: string, options?: any): AxiosPromise<GetBldForUploadPhtOut>;
    getBldPhtList(authorization: string, bldId: string, options?: any): AxiosPromise<Array<GetBldPhtOut>>;
    getBldPnuMobile(authorization: string, bldId: string, options?: any): AxiosPromise<Array<GetBldRelPnuMobileOut>>;
    getBldPrdPhtList(authorization: string, bldId: string, isLwh?: boolean, options?: any): AxiosPromise<Array<GetBldPrdOutWithPht>>;
    getBldRentCdtList(authorization: string, bldId: string, options?: any): AxiosPromise<Array<GetRentCdtOut>>;
    getBldShofiOne(authorization: string, bldId: string, options?: any): AxiosPromise<GetBldShofiOut>;
    getBldSmsPaging(authorization: string, bldId: string, bldId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetBldSmsOut>;
    getBldStregList(authorization: string, bldId?: string, orderBy?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: any): AxiosPromise<PagingGetOutLineListOut>;
    getConIdSameBldList(authorization: string, conId: string, options?: any): AxiosPromise<Array<GetConNumSameBldOut>>;
    getConsecPrdForBldCard(authorization: string, bldId: string, bldId2?: string, eqpCostAmtYn?: string, flrOpt?: string, intYn?: string, maxDpstAmt?: number, maxMaintAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, maxSumNlaPy?: number, minDpstAmt?: number, minMaintAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, minSumNlaPy?: number, ownUserId?: string, shofiYn?: string, options?: any): AxiosPromise<Array<GetConsecPrdForBldCardOut>>;
    getExcelDown(authorization: string, bldId: string, options?: any): AxiosPromise<Resource>;
    getPhtForBldScreen(authorization: string, bldId: string, options?: any): AxiosPromise<Array<GetPhtForBldScreenOut>>;
    getPrdForBldCard(authorization: string, bldId: string, bldId2?: string, eqpCostAmtYn?: string, flrOpt?: string, intYn?: string, maxDpstAmt?: number, maxMaintAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, minDpstAmt?: number, minMaintAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, ownUserId?: string, shofiYn?: string, options?: any): AxiosPromise<Array<GetPrdForBldCardOut>>;
    getPtntlPrdPaging(authorization: string, bjdCd?: Array<string>, bldName?: string, orderBy?: string, pageNum?: number, pageSize?: number, statCd?: Array<string>, taskName?: string, options?: any): AxiosPromise<PagingGetPtntlPrdOut>;
    getSchBldPaging(authorization: string, inputType?: string, inputValue?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetSchBldOut>;
    getTenantCurstsList(authorization: string, bldId: string, flrNum?: number, tenantStatCd?: string, options?: any): AxiosPromise<Array<GetTenantCurstsOut>>;
    getTmMngChkReqPanelListPaging(authorization: string, bldId: string, bldId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetTmMngChkReqPanelPagingOut>;
    insertTenantCursts(authorization: string, bldId: string, input: PostTenantCurstsIn, options?: any): AxiosPromise<void>;
    patchBldBunji(authorization: string, bldId: string, input: AddrInfo, lat?: number, lng?: number, roadAddr?: string, options?: any): AxiosPromise<GetBldPnuOut>;
    patchBldBunjilist(authorization: string, afterBldId?: string, beforeBldId?: string, options?: any): AxiosPromise<void>;
    patchBldClctCycleMng(authorization: string, bldId: string, input: GetBldClctCycleResnIn, options?: any): AxiosPromise<void>;
    patchBldCon(authorization: string, bldId: string, conId: string, input: PatchBldConRelIn, options?: any): AxiosPromise<GetBldConOneOut>;
    patchBldExternalDisp(authorization: string, bldId: string, input: GetBldExternalDispIn, options?: any): AxiosPromise<void>;
    patchBldPht(authorization: string, bldId: string, input: PatchBldPhtsIn, options?: any): AxiosPromise<void>;
    patchBldRentCdt(authorization: string, bldId: string, rentCdtSeq: number, input: PatchRentCdtIn, options?: any): AxiosPromise<ObjRentCdtMst>;
    patchBldRentCdtDtl(authorization: string, bldId: string, rentCdtSeq: number, seq: number, input: PatchRentCdtDtlIn, options?: any): AxiosPromise<ObjRentCdtDtl>;
    patchBldShofi(authorization: string, bldId: string, seq: number, input: PatchShofiIn, options?: any): AxiosPromise<ObjShofiDtl>;
    patchBldTipMig(authorization: string, bldId?: string, tipIdList?: Array<string>, options?: any): AxiosPromise<void>;
    patchBldTmAsgmDlyMng(authorization: string, bldId: string, input: GetBldTmAsgmDlyMngIn, options?: any): AxiosPromise<void>;
    patchLwhTipMig(authorization: string, bldId?: string, tipIdList?: Array<string>, options?: any): AxiosPromise<void>;
    patchPrdFlrNum(authorization: string, bldId: string, input: GetBldPrdFlrNumIn, options?: any): AxiosPromise<void>;
    patchRePhtgReqWork(authorization: string, bldId: string, rephtgTypeCd?: string, seq?: number, options?: any): AxiosPromise<void>;
    patchTmMngChkReqCtn(authorization: string, bldId: string, input: PostTmMngChkReqIn, options?: any): AxiosPromise<void>;
    postBld(authorization: string, input: PostBldIn, options?: any): AxiosPromise<ObjBldMst>;
    postBldCon(authorization: string, bldId: string, input: SaveBldConRelIn, options?: any): AxiosPromise<GetBldConOneOut>;
    postBldConStatReq(authorization: string, bldId: string, conId: string, input: PostBldConReqStatIn, options?: any): AxiosPromise<number>;
    postBldPnu(authorization: string, bldId: string, input: AddrInfo, options?: any): AxiosPromise<GetBldPnuOut>;
    postBldRentCdt(authorization: string, bldId: string, input: PostRentCdtIn, options?: any): AxiosPromise<number>;
    postBldRentCdtDtl(authorization: string, bldId: string, rentCdtSeq: number, input: PostRentCdtDtlIn, options?: any): AxiosPromise<number>;
    postBldRephtg(authorization: string, bldId: string, input: SaveRephtgIn, options?: any): AxiosPromise<ObjRephtgDtl>;
    postBldShofi(authorization: string, bldId: string, input: PostBldShofiIn, options?: any): AxiosPromise<number>;
    postBldTmChkReq(authorization: string, bldId: string, input: PostTmMngChkReqIn, options?: any): AxiosPromise<number>;
    postBldUrpInfo(authorization: string, input: GetBldSmsRcvrIn, options?: any): AxiosPromise<number>;
    postTransferBldContact(authorization: string, bldId: string, input: PostTransferBldConIn, options?: any): AxiosPromise<void>;
    postUnit(authorization: string, bldId: string, input: PostUnitIn, options?: any): AxiosPromise<number>;
    searchBldOrPrdList(authorization: string, acSplyTypeCd?: string, allDayOpenTypeCd?: string, bldBoeTypeCd?: string, bldLeaseYn?: string, bltypCnt?: number, bltypDtlId?: string, bltypId?: Array<string>, conYn?: string, costrStatCd?: string, elvStatCd?: string, eqpCostAmtYn?: string, exclBldYn?: string, flrOpt?: string, hdyOpenTypeCd?: string, heatSplyTypeCd?: string, houseOfficeYn?: string, intYn?: string, mainConYn?: string, maxCmplCostrRmdlYear?: string, maxDpstAmt?: number, maxLastChkDy?: string, maxMaintAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, maxSumNlaPy?: number, maxTotalNlaPy?: number, maxWlkTimeMin?: number, minCmplCostrRmdlYear?: string, minDpstAmt?: number, minLastChkDy?: string, minMaintAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, minSumNlaPy?: number, minTotalNlaPy?: number, minWlkTimeMin?: number, neLat?: number, neLng?: number, orderBy?: string, ownUserId?: string, paroTypeCd?: Array<string>, phtOrdCd?: string, pkltTypeCd?: string, prdYn?: string, rentCfCd?: string, servCd?: Array<string>, servOpt?: string, shofiYn?: string, swLat?: number, swLng?: number, tmAsgmtDlyCd?: string, wcTypeCd?: Array<string>, options?: any): AxiosPromise<SearchBldCardOut>;
    searchBldWithConsecPrd(authorization: string, acSplyTypeCd?: string, allDayOpenTypeCd?: string, bldBoeTypeCd?: string, bldLeaseYn?: string, bltypCnt?: number, bltypDtlId?: string, bltypId?: Array<string>, conYn?: string, costrStatCd?: string, elvStatCd?: string, eqpCostAmtYn?: string, exclBldYn?: string, flrOpt?: string, hdyOpenTypeCd?: string, heatSplyTypeCd?: string, houseOfficeYn?: string, intYn?: string, mainConYn?: string, maxCmplCostrRmdlYear?: string, maxDpstAmt?: number, maxLastChkDy?: string, maxMaintAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, maxSumNlaPy?: number, maxTotalNlaPy?: number, maxWlkTimeMin?: number, minCmplCostrRmdlYear?: string, minDpstAmt?: number, minLastChkDy?: string, minMaintAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, minSumNlaPy?: number, minTotalNlaPy?: number, minWlkTimeMin?: number, neLat?: number, neLng?: number, orderBy?: string, ownUserId?: string, paroTypeCd?: Array<string>, phtOrdCd?: string, pkltTypeCd?: string, prdYn?: string, rentCfCd?: string, servCd?: Array<string>, servOpt?: string, shofiYn?: string, swLat?: number, swLng?: number, tmAsgmtDlyCd?: string, wcTypeCd?: Array<string>, options?: any): AxiosPromise<SearchBldCardOut>;
    searchPrdList(authorization: string, acSplyTypeCd?: string, allDayOpenTypeCd?: string, bldBoeTypeCd?: string, bldLeaseYn?: string, bltypCnt?: number, bltypDtlId?: string, bltypId?: Array<string>, conYn?: string, costrStatCd?: string, elvStatCd?: string, eqpCostAmtYn?: string, exclBldYn?: string, flrOpt?: string, hdyOpenTypeCd?: string, heatSplyTypeCd?: string, houseOfficeYn?: string, intYn?: string, mainConYn?: string, maxCmplCostrRmdlYear?: string, maxDpstAmt?: number, maxLastChkDy?: string, maxMaintAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, maxSumNlaPy?: number, maxTotalNlaPy?: number, maxWlkTimeMin?: number, minCmplCostrRmdlYear?: string, minDpstAmt?: number, minLastChkDy?: string, minMaintAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, minSumNlaPy?: number, minTotalNlaPy?: number, minWlkTimeMin?: number, neLat?: number, neLng?: number, orderBy?: string, ownUserId?: string, paroTypeCd?: Array<string>, phtOrdCd?: string, pkltTypeCd?: string, prdYn?: string, rentCfCd?: string, servCd?: Array<string>, servOpt?: string, shofiYn?: string, swLat?: number, swLng?: number, tmAsgmtDlyCd?: string, wcTypeCd?: Array<string>, options?: any): AxiosPromise<SearchBldCardOut>;
    selectBjdBldOutlineListForScreen(authorization: string, bjdCd: Array<string>, countPerPage: number, currentPage: number, keyword: string, options?: any): AxiosPromise<PagingGetStregListOut>;
    selectBjdLwhOutlineListForScreen(authorization: string, bjdCd: Array<string>, countPerPage: number, currentPage: number, keyword: string, options?: any): AxiosPromise<PagingGetStregListOut>;
    selectBldConClcFrsn(authorization: string, bldId: string, bldId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetConClctFailResnPagingOut>;
    selectBldMngListForScreen(authorization: string, bldId: string, bldId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, tabKey?: string, options?: any): AxiosPromise<PagingGeBldMngCardPagingOut>;
    selectBldMyTaskListScreen(authorization: string, workCfCd?: string, options?: any): AxiosPromise<Array<GetMyTaskListOut>>;
    selectBldOutlineList(authorization: string, bldId?: string, mgmBldrgstPk?: string, orderBy?: string, outMngCd?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: any): AxiosPromise<PagingGetStregListOut>;
    selectBldOutlineListForScreen(authorization: string, countPerPage: number, currentPage: number, keyword: string, searchType: string, options?: any): AxiosPromise<PagingGetStregListOut>;
    selectBldOutlineOne(authorization: string, bldId?: string, mgmBldrgstPk?: string, orderBy?: string, outMngCd?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: any): AxiosPromise<string>;
    selectBldOutlineYn(authorization: string, bldId?: string, mgmBldrgstPk?: string, orderBy?: string, outMngCd?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: any): AxiosPromise<number>;
    selectBldPrdListForScreen(authorization: string, bldId: string, options?: any): AxiosPromise<Array<SelectBldPrdListForScreenOut>>;
    selectBldTenantListForScreenExcel(authorization: string, bldId: string, flrNum?: number, tenantStatCd?: string, options?: any): AxiosPromise<Resource>;
    selectBldTodayProcTaskListScreen(authorization: string, maxExpireDy?: string, minExpireDy?: string, options?: any): AxiosPromise<Array<GetTodayProcTaskListOut>>;
    selectBldUnitListForScreen(authorization: string, bldId: string, options?: any): AxiosPromise<Array<SelectBldUnitListForScreenOut>>;
    selectBldUnitListForScreenExcel(authorization: string, bldId: string, options?: any): AxiosPromise<Resource>;
    selectInbInfoDownloadExcel(authorization: string, bjdCd?: Array<string>, bldBoeTypeCds?: Array<string>, bldConOwnTypeCd?: string, bldId?: string, bldName?: string, bltypCnt?: number, bltypDtlId?: string, bltypId?: Array<string>, bonBunji?: string, buBunji?: string, cityDvpDistYn?: string, costrStatCd?: string, flrCntYn?: string, jibunAddr?: string, mainConYn?: string, maxCreateDt?: string, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, minCreateDt?: string, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, prdId?: string, prdTrStatCd?: string, prdYn?: string, rentCfCd?: Array<string>, roadNameAddr?: string, servOpt?: string, validNumYn?: string, options?: any): AxiosPromise<Resource>;
    selectLwhOutlineList(authorization: string, bldId?: string, mgmBldrgstPk?: string, orderBy?: string, outMngCd?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: any): AxiosPromise<PagingGetStregListOut>;
    selectLwhOutlineListForScreen(authorization: string, countPerPage: number, currentPage: number, keyword: string, searchType: string, options?: any): AxiosPromise<PagingGetStregListOut>;
    selectLwhOutlineOne(authorization: string, bldId?: string, mgmBldrgstPk?: string, orderBy?: string, outMngCd?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: any): AxiosPromise<string>;
    selectMigBldOutlineList(authorization: string, bldId?: string, mgmBldrgstPk?: string, orderBy?: string, outMngCd?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: any): AxiosPromise<PagingGetStregListOut>;
    selectMigLwhOutlineList(authorization: string, bldId?: string, mgmBldrgstPk?: string, orderBy?: string, outMngCd?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: any): AxiosPromise<PagingGetStregListOut>;
    selectMobOtreqChkReqWork(authorization: string, bldId: string, options?: any): AxiosPromise<Array<GetwChkReqWorkCardPagingOut>>;
    selectOtreqChkReqWork(authorization: string, bldId: string, bldId2?: string, conTab?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetwChkReqWorkCardPagingOut>;
    selectRePhtgWork(authorization: string, bldId: string, bldId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetRePhtgReqWorkCardPagingOut>;
    selectRetailUnitListForScreen(authorization: string, bldId: string, outId?: string, options?: any): AxiosPromise<Array<SelectBldUnitListForScreenOut>>;
    selectUnitListForPrdLink(authorization: string, bldId: string, options?: any): AxiosPromise<Array<SelectUnitPrdLinkForScreenOut>>;
    updateBld(authorization: string, bldId: string, input: PatchBldIn, options?: any): AxiosPromise<void>;
    updateBldForUploadPht(authorization: string, bldId: string, input: PatchBldUploadPhtIn, options?: any): AxiosPromise<void>;
    updateBldOutline(authorization: string, input: GetBldOutlinePagingIn, options?: any): AxiosPromise<void>;
    updateBldPrdCheck(authorization: string, bldId: string, options?: any): AxiosPromise<number>;
    updateBldRoadAddr(authorization: string, bldId: string, roadAddr?: string, options?: any): AxiosPromise<void>;
    updateLwhOutline(authorization: string, input: GetBldOutlinePagingIn, options?: any): AxiosPromise<void>;
    updateMobBld(authorization: string, bldId: string, input: PatchMobBldIn, options?: any): AxiosPromise<void>;
    updateTenantCursts(authorization: string, bldId: string, input: PatchTenantCurstsIn, options?: any): AxiosPromise<void>;
    uploadBldPhoto(authorization: string, bldId?: string, phtLclCd?: string, phtgrId?: string, prdId?: string, ptbId?: string, taskId?: string, watermarkYn?: string, pht?: any, options?: any): AxiosPromise<MtaPhtMst>;
};
export declare class BldControllerApi extends BaseAPI {
    deleteBld(authorization: string, bldId: string, input: DeleteBldIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    deleteBldPnu(authorization: string, bldId: string, pnuId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    deleteBldRentCdt(authorization: string, bldId: string, rentCdtSeq: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    deleteBldRentCdtDtl(authorization: string, bldId: string, rentCdtSeq: number, seq: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    deleteBldShofi(authorization: string, bldId: string, seq: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    deleteTenantCursts(authorization: string, bldId: string, tntId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    downloadBldPht(authorization: string, bldId: string, bldId2?: string, phtLclCd?: string, prdId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    getAddrRelBldInfoList(authorization: string, pnuId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ObjBldMst[], any>>;
    getAllBldIdList(authorization: string, bjdCd?: Array<string>, bldBoeTypeCds?: Array<string>, bldConOwnTypeCd?: string, bldId?: string, bldName?: string, bltypCnt?: number, bltypDtlId?: string, bltypId?: Array<string>, bonBunji?: string, buBunji?: string, cityDvpDistYn?: string, costrStatCd?: string, flrCntYn?: string, jibunAddr?: string, mainConYn?: string, maxCreateDt?: string, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, minCreateDt?: string, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, prdId?: string, prdTrStatCd?: string, prdYn?: string, rentCfCd?: Array<string>, roadNameAddr?: string, servOpt?: string, validNumYn?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string[], any>>;
    getBld(authorization: string, bldId: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetBldOut, any>>;
    getBldBselPrd(authorization: string, bldId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetBselListOut[], any>>;
    getBldClnList(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetBldClnOut[], any>>;
    getBldConList(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetBldConOut[], any>>;
    getBldConListMobile(authorization: string, bldId: string, conNum?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetConNumSameBldOut[], any>>;
    getBldContrPaging(authorization: string, bldId: string, bldId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetBldContrOut, any>>;
    getBldFilePaging(authorization: string, bldId: string, clnId?: string, fileTgtRelCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, tgtId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetFileOut, any>>;
    getBldLatLngList(authorization: string, limit?: number, neLat?: string, neLng?: string, swLat?: string, swLng?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetBldLatLngListOut, any>>;
    getBldListPaging(authorization: string, bjdCd?: Array<string>, bldBoeTypeCds?: Array<string>, bldConOwnTypeCd?: string, bldId?: string, bldName?: string, bltypCnt?: number, bltypDtlId?: string, bltypId?: Array<string>, bonBunji?: string, buBunji?: string, cityDvpDistYn?: string, costrStatCd?: string, flrCntYn?: string, jibunAddr?: string, mainConYn?: string, maxCreateDt?: string, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, minCreateDt?: string, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, prdId?: string, prdTrStatCd?: string, prdYn?: string, rentCfCd?: Array<string>, roadNameAddr?: string, servOpt?: string, validNumYn?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetBldOut, any>>;
    getBldMob(authorization: string, bldId: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetBldMobOut, any>>;
    getBldOneForUploadPht(authorization: string, bldId: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetBldForUploadPhtOut, any>>;
    getBldPhtList(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetBldPhtOut[], any>>;
    getBldPnuMobile(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetBldRelPnuMobileOut[], any>>;
    getBldPrdPhtList(authorization: string, bldId: string, isLwh?: boolean, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetBldPrdOutWithPht[], any>>;
    getBldRentCdtList(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetRentCdtOut[], any>>;
    getBldShofiOne(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetBldShofiOut, any>>;
    getBldSmsPaging(authorization: string, bldId: string, bldId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetBldSmsOut, any>>;
    getBldStregList(authorization: string, bldId?: string, orderBy?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetOutLineListOut, any>>;
    getConIdSameBldList(authorization: string, conId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetConNumSameBldOut[], any>>;
    getConsecPrdForBldCard(authorization: string, bldId: string, bldId2?: string, eqpCostAmtYn?: string, flrOpt?: string, intYn?: string, maxDpstAmt?: number, maxMaintAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, maxSumNlaPy?: number, minDpstAmt?: number, minMaintAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, minSumNlaPy?: number, ownUserId?: string, shofiYn?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetConsecPrdForBldCardOut[], any>>;
    getExcelDown(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Resource, any>>;
    getPhtForBldScreen(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetPhtForBldScreenOut[], any>>;
    getPrdForBldCard(authorization: string, bldId: string, bldId2?: string, eqpCostAmtYn?: string, flrOpt?: string, intYn?: string, maxDpstAmt?: number, maxMaintAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, minDpstAmt?: number, minMaintAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, ownUserId?: string, shofiYn?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetPrdForBldCardOut[], any>>;
    getPtntlPrdPaging(authorization: string, bjdCd?: Array<string>, bldName?: string, orderBy?: string, pageNum?: number, pageSize?: number, statCd?: Array<string>, taskName?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetPtntlPrdOut, any>>;
    getSchBldPaging(authorization: string, inputType?: string, inputValue?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetSchBldOut, any>>;
    getTenantCurstsList(authorization: string, bldId: string, flrNum?: number, tenantStatCd?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetTenantCurstsOut[], any>>;
    getTmMngChkReqPanelListPaging(authorization: string, bldId: string, bldId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetTmMngChkReqPanelPagingOut, any>>;
    insertTenantCursts(authorization: string, bldId: string, input: PostTenantCurstsIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    patchBldBunji(authorization: string, bldId: string, input: AddrInfo, lat?: number, lng?: number, roadAddr?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetBldPnuOut, any>>;
    patchBldBunjilist(authorization: string, afterBldId?: string, beforeBldId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    patchBldClctCycleMng(authorization: string, bldId: string, input: GetBldClctCycleResnIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    patchBldCon(authorization: string, bldId: string, conId: string, input: PatchBldConRelIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetBldConOneOut, any>>;
    patchBldExternalDisp(authorization: string, bldId: string, input: GetBldExternalDispIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    patchBldPht(authorization: string, bldId: string, input: PatchBldPhtsIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    patchBldRentCdt(authorization: string, bldId: string, rentCdtSeq: number, input: PatchRentCdtIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ObjRentCdtMst, any>>;
    patchBldRentCdtDtl(authorization: string, bldId: string, rentCdtSeq: number, seq: number, input: PatchRentCdtDtlIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ObjRentCdtDtl, any>>;
    patchBldShofi(authorization: string, bldId: string, seq: number, input: PatchShofiIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ObjShofiDtl, any>>;
    patchBldTipMig(authorization: string, bldId?: string, tipIdList?: Array<string>, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    patchBldTmAsgmDlyMng(authorization: string, bldId: string, input: GetBldTmAsgmDlyMngIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    patchLwhTipMig(authorization: string, bldId?: string, tipIdList?: Array<string>, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    patchPrdFlrNum(authorization: string, bldId: string, input: GetBldPrdFlrNumIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    patchRePhtgReqWork(authorization: string, bldId: string, rephtgTypeCd?: string, seq?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    patchTmMngChkReqCtn(authorization: string, bldId: string, input: PostTmMngChkReqIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    postBld(authorization: string, input: PostBldIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ObjBldMst, any>>;
    postBldCon(authorization: string, bldId: string, input: SaveBldConRelIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetBldConOneOut, any>>;
    postBldConStatReq(authorization: string, bldId: string, conId: string, input: PostBldConReqStatIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postBldPnu(authorization: string, bldId: string, input: AddrInfo, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetBldPnuOut, any>>;
    postBldRentCdt(authorization: string, bldId: string, input: PostRentCdtIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postBldRentCdtDtl(authorization: string, bldId: string, rentCdtSeq: number, input: PostRentCdtDtlIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postBldRephtg(authorization: string, bldId: string, input: SaveRephtgIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ObjRephtgDtl, any>>;
    postBldShofi(authorization: string, bldId: string, input: PostBldShofiIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postBldTmChkReq(authorization: string, bldId: string, input: PostTmMngChkReqIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postBldUrpInfo(authorization: string, input: GetBldSmsRcvrIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postTransferBldContact(authorization: string, bldId: string, input: PostTransferBldConIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    postUnit(authorization: string, bldId: string, input: PostUnitIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    searchBldOrPrdList(authorization: string, acSplyTypeCd?: string, allDayOpenTypeCd?: string, bldBoeTypeCd?: string, bldLeaseYn?: string, bltypCnt?: number, bltypDtlId?: string, bltypId?: Array<string>, conYn?: string, costrStatCd?: string, elvStatCd?: string, eqpCostAmtYn?: string, exclBldYn?: string, flrOpt?: string, hdyOpenTypeCd?: string, heatSplyTypeCd?: string, houseOfficeYn?: string, intYn?: string, mainConYn?: string, maxCmplCostrRmdlYear?: string, maxDpstAmt?: number, maxLastChkDy?: string, maxMaintAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, maxSumNlaPy?: number, maxTotalNlaPy?: number, maxWlkTimeMin?: number, minCmplCostrRmdlYear?: string, minDpstAmt?: number, minLastChkDy?: string, minMaintAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, minSumNlaPy?: number, minTotalNlaPy?: number, minWlkTimeMin?: number, neLat?: number, neLng?: number, orderBy?: string, ownUserId?: string, paroTypeCd?: Array<string>, phtOrdCd?: string, pkltTypeCd?: string, prdYn?: string, rentCfCd?: string, servCd?: Array<string>, servOpt?: string, shofiYn?: string, swLat?: number, swLng?: number, tmAsgmtDlyCd?: string, wcTypeCd?: Array<string>, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SearchBldCardOut, any>>;
    searchBldWithConsecPrd(authorization: string, acSplyTypeCd?: string, allDayOpenTypeCd?: string, bldBoeTypeCd?: string, bldLeaseYn?: string, bltypCnt?: number, bltypDtlId?: string, bltypId?: Array<string>, conYn?: string, costrStatCd?: string, elvStatCd?: string, eqpCostAmtYn?: string, exclBldYn?: string, flrOpt?: string, hdyOpenTypeCd?: string, heatSplyTypeCd?: string, houseOfficeYn?: string, intYn?: string, mainConYn?: string, maxCmplCostrRmdlYear?: string, maxDpstAmt?: number, maxLastChkDy?: string, maxMaintAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, maxSumNlaPy?: number, maxTotalNlaPy?: number, maxWlkTimeMin?: number, minCmplCostrRmdlYear?: string, minDpstAmt?: number, minLastChkDy?: string, minMaintAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, minSumNlaPy?: number, minTotalNlaPy?: number, minWlkTimeMin?: number, neLat?: number, neLng?: number, orderBy?: string, ownUserId?: string, paroTypeCd?: Array<string>, phtOrdCd?: string, pkltTypeCd?: string, prdYn?: string, rentCfCd?: string, servCd?: Array<string>, servOpt?: string, shofiYn?: string, swLat?: number, swLng?: number, tmAsgmtDlyCd?: string, wcTypeCd?: Array<string>, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SearchBldCardOut, any>>;
    searchPrdList(authorization: string, acSplyTypeCd?: string, allDayOpenTypeCd?: string, bldBoeTypeCd?: string, bldLeaseYn?: string, bltypCnt?: number, bltypDtlId?: string, bltypId?: Array<string>, conYn?: string, costrStatCd?: string, elvStatCd?: string, eqpCostAmtYn?: string, exclBldYn?: string, flrOpt?: string, hdyOpenTypeCd?: string, heatSplyTypeCd?: string, houseOfficeYn?: string, intYn?: string, mainConYn?: string, maxCmplCostrRmdlYear?: string, maxDpstAmt?: number, maxLastChkDy?: string, maxMaintAmt?: number, maxNlaPy?: number, maxNocAmt?: number, maxPrdRegDy?: string, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, maxSumNlaPy?: number, maxTotalNlaPy?: number, maxWlkTimeMin?: number, minCmplCostrRmdlYear?: string, minDpstAmt?: number, minLastChkDy?: string, minMaintAmt?: number, minNlaPy?: number, minNocAmt?: number, minPrdRegDy?: string, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, minSumNlaPy?: number, minTotalNlaPy?: number, minWlkTimeMin?: number, neLat?: number, neLng?: number, orderBy?: string, ownUserId?: string, paroTypeCd?: Array<string>, phtOrdCd?: string, pkltTypeCd?: string, prdYn?: string, rentCfCd?: string, servCd?: Array<string>, servOpt?: string, shofiYn?: string, swLat?: number, swLng?: number, tmAsgmtDlyCd?: string, wcTypeCd?: Array<string>, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SearchBldCardOut, any>>;
    selectBjdBldOutlineListForScreen(authorization: string, bjdCd: Array<string>, countPerPage: number, currentPage: number, keyword: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetStregListOut, any>>;
    selectBjdLwhOutlineListForScreen(authorization: string, bjdCd: Array<string>, countPerPage: number, currentPage: number, keyword: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetStregListOut, any>>;
    selectBldConClcFrsn(authorization: string, bldId: string, bldId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetConClctFailResnPagingOut, any>>;
    selectBldMngListForScreen(authorization: string, bldId: string, bldId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, tabKey?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGeBldMngCardPagingOut, any>>;
    selectBldMyTaskListScreen(authorization: string, workCfCd?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetMyTaskListOut[], any>>;
    selectBldOutlineList(authorization: string, bldId?: string, mgmBldrgstPk?: string, orderBy?: string, outMngCd?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetStregListOut, any>>;
    selectBldOutlineListForScreen(authorization: string, countPerPage: number, currentPage: number, keyword: string, searchType: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetStregListOut, any>>;
    selectBldOutlineOne(authorization: string, bldId?: string, mgmBldrgstPk?: string, orderBy?: string, outMngCd?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    selectBldOutlineYn(authorization: string, bldId?: string, mgmBldrgstPk?: string, orderBy?: string, outMngCd?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    selectBldPrdListForScreen(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SelectBldPrdListForScreenOut[], any>>;
    selectBldTenantListForScreenExcel(authorization: string, bldId: string, flrNum?: number, tenantStatCd?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Resource, any>>;
    selectBldTodayProcTaskListScreen(authorization: string, maxExpireDy?: string, minExpireDy?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetTodayProcTaskListOut[], any>>;
    selectBldUnitListForScreen(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SelectBldUnitListForScreenOut[], any>>;
    selectBldUnitListForScreenExcel(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Resource, any>>;
    selectInbInfoDownloadExcel(authorization: string, bjdCd?: Array<string>, bldBoeTypeCds?: Array<string>, bldConOwnTypeCd?: string, bldId?: string, bldName?: string, bltypCnt?: number, bltypDtlId?: string, bltypId?: Array<string>, bonBunji?: string, buBunji?: string, cityDvpDistYn?: string, costrStatCd?: string, flrCntYn?: string, jibunAddr?: string, mainConYn?: string, maxCreateDt?: string, maxStdFlrGlaPy?: number, maxStdFlrNlaPy?: number, minCreateDt?: string, minStdFlrGlaPy?: number, minStdFlrNlaPy?: number, orderBy?: string, pageNum?: number, pageSize?: number, prdId?: string, prdTrStatCd?: string, prdYn?: string, rentCfCd?: Array<string>, roadNameAddr?: string, servOpt?: string, validNumYn?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Resource, any>>;
    selectLwhOutlineList(authorization: string, bldId?: string, mgmBldrgstPk?: string, orderBy?: string, outMngCd?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetStregListOut, any>>;
    selectLwhOutlineListForScreen(authorization: string, countPerPage: number, currentPage: number, keyword: string, searchType: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetStregListOut, any>>;
    selectLwhOutlineOne(authorization: string, bldId?: string, mgmBldrgstPk?: string, orderBy?: string, outMngCd?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    selectMigBldOutlineList(authorization: string, bldId?: string, mgmBldrgstPk?: string, orderBy?: string, outMngCd?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetStregListOut, any>>;
    selectMigLwhOutlineList(authorization: string, bldId?: string, mgmBldrgstPk?: string, orderBy?: string, outMngCd?: string, pageNum?: number, pageSize?: number, pnuId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetStregListOut, any>>;
    selectMobOtreqChkReqWork(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetwChkReqWorkCardPagingOut[], any>>;
    selectOtreqChkReqWork(authorization: string, bldId: string, bldId2?: string, conTab?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetwChkReqWorkCardPagingOut, any>>;
    selectRePhtgWork(authorization: string, bldId: string, bldId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetRePhtgReqWorkCardPagingOut, any>>;
    selectRetailUnitListForScreen(authorization: string, bldId: string, outId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SelectBldUnitListForScreenOut[], any>>;
    selectUnitListForPrdLink(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SelectUnitPrdLinkForScreenOut[], any>>;
    updateBld(authorization: string, bldId: string, input: PatchBldIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    updateBldForUploadPht(authorization: string, bldId: string, input: PatchBldUploadPhtIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    updateBldOutline(authorization: string, input: GetBldOutlinePagingIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    updateBldPrdCheck(authorization: string, bldId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    updateBldRoadAddr(authorization: string, bldId: string, roadAddr?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    updateLwhOutline(authorization: string, input: GetBldOutlinePagingIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    updateMobBld(authorization: string, bldId: string, input: PatchMobBldIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    updateTenantCursts(authorization: string, bldId: string, input: PatchTenantCurstsIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    uploadBldPhoto(authorization: string, bldId?: string, phtLclCd?: string, phtgrId?: string, prdId?: string, ptbId?: string, taskId?: string, watermarkYn?: string, pht?: any, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MtaPhtMst, any>>;
}
