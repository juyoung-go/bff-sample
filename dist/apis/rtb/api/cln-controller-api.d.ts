import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { DeleteClnBselPrfAreaIn } from '../model';
import { DeleteClnCusRelIn } from '../model';
import { DeleteClnEvtTgtIn } from '../model';
import { DeleteClnMvinBldIn } from '../model';
import { GetClnComInfoOut } from '../model';
import { GetClnConOut } from '../model';
import { GetClnCusOut } from '../model';
import { GetClnMngOut } from '../model';
import { GetClnMngTeamOut } from '../model';
import { GetClnOut } from '../model';
import { GetLmClnExclBldTaskOut } from '../model';
import { MbrBselBjdcdRel } from '../model';
import { MbrClnBselRel } from '../model';
import { MbrClnCusRel } from '../model';
import { MbrClnMngDtl } from '../model';
import { MbrClnMst } from '../model';
import { MbrClnObjRel } from '../model';
import { MbrCusMst } from '../model';
import { MbrEvtTgtMst } from '../model';
import { PagingClnLeaseDealOut } from '../model';
import { PagingClnOrdOut } from '../model';
import { PagingClnRentDealOut } from '../model';
import { PagingGetAllClnListInDeptOut } from '../model';
import { PagingGetAllClnListOut } from '../model';
import { PagingGetBldContrOut } from '../model';
import { PagingGetClnAddrOut } from '../model';
import { PagingGetClnCusRelNonuHstOut } from '../model';
import { PagingGetClnEvtTgtDelHstOut } from '../model';
import { PagingGetClnEvtTgtOut } from '../model';
import { PagingGetClnIntProjOut } from '../model';
import { PagingGetClnMngBldOut } from '../model';
import { PagingGetClnMngBselPrdOut } from '../model';
import { PagingGetClnMngLwhOut } from '../model';
import { PagingGetLeaseMngBldListOut } from '../model';
import { PagingGetLmClnExclBldLeaseDealOut } from '../model';
import { PagingGetLmClnExclBldOut } from '../model';
import { PagingGetLmClnExclBldTaskOut } from '../model';
import { PagingGetLmClnMngBldForExclBldModalOut } from '../model';
import { PagingGetMngClnListOut } from '../model';
import { PatchClnBldAddrIn } from '../model';
import { PatchClnBldIn } from '../model';
import { PatchClnBselMngIn } from '../model';
import { PatchClnConRelIn } from '../model';
import { PatchClnCusRelIn } from '../model';
import { PatchClnEvtTgtIn } from '../model';
import { PatchClnIn } from '../model';
import { PatchClnLwhMngIn } from '../model';
import { PatchClnMngIn } from '../model';
import { PatchClnMngTeamIn } from '../model';
import { PatchClnMngTeamYnIn } from '../model';
import { PatchClnRetailMngIn } from '../model';
import { PatchCusEtcCtn } from '../model';
import { PatchLmClnExclBldIn } from '../model';
import { PatchLmClnExclBldTaskIn } from '../model';
import { PatchOwnMngBldIn } from '../model';
import { PostAllClnUrpIn } from '../model';
import { PostClnAddrIn } from '../model';
import { PostClnBselPrfAreaIn } from '../model';
import { PostClnMngBselPrdIn } from '../model';
import { Resource } from '../model';
import { SaveClnBldIn } from '../model';
import { SaveClnConRelIn } from '../model';
import { SaveClnEvtTgtIn } from '../model';
import { SaveClnIn } from '../model';
import { SaveLmClnExclBldIn } from '../model';
import { SaveLmClnExclBldTaskIn } from '../model';
export declare const ClnControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    deleteBselPrfArea: (authorization: string, clnId: string, input: DeleteClnBselPrfAreaIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteCln: (authorization: string, clnId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteClnCon: (authorization: string, clnId: string, conId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteClnCus: (authorization: string, clnId: string, cusId: string, input: DeleteClnCusRelIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteClnEvt: (authorization: string, clnId: string, input: DeleteClnEvtTgtIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteClnMngBld: (authorization: string, bldId: string, clnId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteClnMngBselPrd: (authorization: string, clnId: string, prdBselId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteClnMngLwh: (authorization: string, bldId: string, clnId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteClnMvinBld: (authorization: string, clnId: string, input: DeleteClnMvinBldIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteClnMvinLwh: (authorization: string, clnId: string, input: DeleteClnMvinBldIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteLmClnExclBld: (authorization: string, bldId: string, clnId: string, objTypeCd?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteLmClnExclBldTaskPaging: (authorization: string, taskId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteLmClnExclLwh: (authorization: string, bldId: string, clnId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getAllClnListInDeptPaging: (authorization: string, afltDeptYn?: string, afltMngPtbId?: Array<string>, allYn?: string, bjdCd?: Array<string>, bldMngPtbId?: string, brcHasYn?: string, bselBjdCd?: Array<string>, bselDeptYn?: string, bselMngPtbId?: Array<string>, clnAddr?: string, clnBselMngCfCd?: string, clnBselMngLevCd?: string, clnId?: string, clnLwhMngCfCd?: string, clnLwhMngLevCd?: string, clnMngDeptCd?: string, clnName?: string, clnRetailMngLevCdList?: Array<string>, clnTypeCd?: string, coMngLevCd?: Array<string>, coTypeCd?: string, contrTypeList?: Array<string>, corpSalTeamMngYn?: string, cusRelYn?: string, expNdsCd?: Array<string>, expectMoveDyHasYn?: string, finnTeamMngYn?: string, furDeptYn?: string, furMngPtbId?: Array<string>, furYn?: string, grpName?: string, industryLargeCd?: string, industryMiddleCdList?: Array<string>, intDeptYn?: string, intMngPtbId?: Array<string>, ksicCd?: string, lmDeptYn?: string, lmMngPtbId?: Array<string>, lmTeamMngYn?: string, lmYn?: string, lwhDeptYn?: string, lwhMngPtbId?: Array<string>, maxClnAddrChkDt?: string, maxContrEndDy?: string, maxCreateDt?: string, maxEsaPy?: number, maxExpectMoveDy?: string, maxOnlaPy?: number, maxRctCallSuccDy?: string, maxRctDlvrDy?: string, maxRctLmClnTaskDy?: string, maxRetailEsaPy?: number, maxTaskRegDy?: string, maxTipRegDy?: string, maxTotalOrdCnt?: number, maxTotalSalesAmt?: number, minClnAddrChkDt?: string, minContrEndDy?: string, minCreateDt?: string, minEsaPy?: number, minExpectMoveDy?: string, minOnlaPy?: number, minRctCallSuccDy?: string, minRctDlvrDy?: string, minRctLmClnTaskDy?: string, minRetailEsaPy?: number, minTaskRegDy?: string, minTipRegDy?: string, minTotalOrdCnt?: number, minTotalSalesAmt?: number, mktMngCd?: Array<string>, mktMngPtbId?: Array<string>, mktTeamMngYn?: string, mngBldYn?: string, mngExceptTgtCd?: string, mngExceptTgtYn?: string, mptbUserYn?: string, ongoingLeaseDealTypeList?: Array<string>, ongoingRentDealTypeList?: Array<string>, openStatCd?: string, ordInProgsYn?: string, orderBy?: string, ownMngBldLevCd?: Array<string>, ownMngBldTypeCd?: string, pageNum?: number, pageSize?: number, projYn?: string, retailDeptYn?: string, salDeptYn?: string, salYn?: string, tipYn?: string, wplcTypeCd?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getClnAddrPaging: (authorization: string, clnId: string, clnId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getClnComInfoOne: (authorization: string, clnId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getClnConList: (authorization: string, clnId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getClnCusRelNonuHstPaging: (authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getClnCusWithCon: (authorization: string, clnId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getClnEvtDelHstPaging: (authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getClnEvtPaging: (authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getClnExcelDownload: (authorization: string, bjdCd?: Array<string>, clnAddr?: string, clnId?: string, clnMngDeptCd?: string, clnName?: string, clnTypeCd?: string, coMngLevCd?: Array<string>, coTypeCd?: string, cusRelYn?: string, expectMoveDyHasYn?: string, finnTeamMngYn?: string, grpName?: string, ksicCd?: string, maxClnAddrChkDt?: string, maxContrEndDy?: string, maxEsaPy?: number, maxExpectMoveDy?: string, maxOnlaPy?: number, maxRctCallSuccDy?: string, maxTaskRegDy?: string, maxTipRegDy?: string, minClnAddrChkDt?: string, minContrEndDy?: string, minEsaPy?: number, minExpectMoveDy?: string, minOnlaPy?: number, minRctCallSuccDy?: string, minTaskRegDy?: string, minTipRegDy?: string, mktMngCd?: Array<string>, mktTeamMngYn?: string, mngExceptTgtCd?: string, mngExceptTgtYn?: string, mptbUserYn?: string, ongoingLeaseDealTypeList?: Array<string>, ongoingRentDealTypeList?: Array<string>, openStatCd?: string, ordInProgsYn?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getClnIntProjPaging: (authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getClnLeaseDealTaskPaging: (authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getClnLwhLeaseDealTaskPaging: (authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getClnLwhRentDealTaskPaging: (authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getClnMngBldPaging: (authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getClnMngBselPrdListPaging: (authorization: string, clnId?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getClnMngLwhPaging: (authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getClnMngOne: (authorization: string, clnId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getClnMngTeamOne: (authorization: string, clnId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getClnOne: (authorization: string, clnId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getClnOrdPaging: (authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getClnRentDealTaskPaging: (authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getClnSalLeaseTaskPaging: (authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getClnSalRentTaskPaging: (authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getDeptAfltClnListPaging: (authorization: string, afltMngPtbId?: Array<string>, bjdCd?: Array<string>, bldMngPtbId?: string, clnAddr?: string, clnId?: string, clnMngDeptCd?: string, clnName?: string, expNdsCd?: Array<string>, ksicCd?: string, lmTeamMngYn?: string, maxRctCallSuccDy?: string, maxTaskRegDy?: string, maxTipRegDy?: string, minRctCallSuccDy?: string, minTaskRegDy?: string, minTipRegDy?: string, mktMngCd?: Array<string>, mngExceptTgtCd?: string, mngExceptTgtYn?: string, orderBy?: string, ownMngBldLevCd?: Array<string>, ownMngBldTypeCd?: string, pageNum?: number, pageSize?: number, projYn?: string, tipYn?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getDeptBselClnListPaging: (authorization: string, bjdCd?: Array<string>, bselBjdCd?: Array<string>, bselMngPtbId?: Array<string>, clnAddr?: string, clnBselMngCfCd?: string, clnBselMngLevCd?: string, clnMngDeptCd?: string, clnName?: string, clnTypeCd?: string, ksicCd?: string, mngBldYn?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getDeptFurClnListPaging: (authorization: string, bjdCd?: Array<string>, clnAddr?: string, clnMngDeptCd?: string, clnName?: string, furMngPtbId?: Array<string>, maxRctDlvrDy?: string, maxTipRegDy?: string, maxTotalOrdCnt?: number, maxTotalSalesAmt?: number, minRctDlvrDy?: string, minTipRegDy?: string, minTotalOrdCnt?: number, minTotalSalesAmt?: number, mktMngCd?: Array<string>, ordInProgsYn?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getDeptIntClnListPaging: (authorization: string, bjdCd?: Array<string>, brcHasYn?: string, clnAddr?: string, clnMngDeptCd?: string, clnName?: string, clnTypeCd?: string, coMngLevCd?: Array<string>, coTypeCd?: string, intMngPtbId?: Array<string>, maxRctCallSuccDy?: string, maxTipRegDy?: string, minRctCallSuccDy?: string, minTipRegDy?: string, mktMngCd?: Array<string>, mngExceptTgtCd?: string, mngExceptTgtYn?: string, orderBy?: string, pageNum?: number, pageSize?: number, tipYn?: string, wplcTypeCd?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getDeptLmClnListPaging: (authorization: string, bjdCd?: Array<string>, clnAddr?: string, clnMngDeptCd?: string, clnName?: string, lmMngPtbId?: Array<string>, maxRctLmClnTaskDy?: string, maxTipRegDy?: string, minRctLmClnTaskDy?: string, minTipRegDy?: string, mktMngCd?: Array<string>, ongoingLeaseDealTypeList?: Array<string>, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getDeptLwhClnListPaging: (authorization: string, bjdCd?: Array<string>, clnAddr?: string, clnLwhMngCfCd?: string, clnLwhMngLevCd?: string, clnMngDeptCd?: string, clnName?: string, clnTypeCd?: string, coMngLevCd?: Array<string>, coTypeCd?: string, ksicCd?: string, lwhMngPtbId?: Array<string>, maxRctCallSuccDy?: string, maxTipRegDy?: string, minRctCallSuccDy?: string, minTipRegDy?: string, mktMngCd?: Array<string>, mngExceptTgtCd?: string, mngExceptTgtYn?: string, openStatCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, tipYn?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getDeptRetailClnListPaging: (authorization: string, bjdCd?: Array<string>, brcHasYn?: string, clnAddr?: string, clnName?: string, clnRetailMngLevCdList?: Array<string>, clnTypeCd?: string, coTypeCd?: string, contrTypeList?: Array<string>, industryLargeCd?: string, industryMiddleCdList?: Array<string>, ksicCd?: string, maxOnlaPy?: number, maxRctCallSuccDy?: string, maxRetailEsaPy?: number, maxTipRegDy?: string, minOnlaPy?: number, minRctCallSuccDy?: string, minRetailEsaPy?: number, minTipRegDy?: string, ongoingLeaseDealTypeList?: Array<string>, ongoingRentDealTypeList?: Array<string>, orderBy?: string, pageNum?: number, pageSize?: number, retailTeamMngYn?: string, tipYn?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getDeptSalClnListPaging: (authorization: string, bjdCd?: Array<string>, brcHasYn?: string, clnAddr?: string, clnName?: string, clnTypeCd?: string, coMngLevCd?: Array<string>, coTypeCd?: string, contrTypeList?: Array<string>, corpSalTeamMngYn?: string, finnTeamMngYn?: string, ksicCd?: string, maxEsaPy?: number, maxExpectMoveDy?: string, maxOnlaPy?: number, maxRctCallSuccDy?: string, maxTipRegDy?: string, minEsaPy?: number, minExpectMoveDy?: string, minOnlaPy?: number, minRctCallSuccDy?: string, minTipRegDy?: string, mktMngCd?: Array<string>, mktMngPtbId?: Array<string>, mktTeamMngYn?: string, mngExceptTgtCd?: string, mngExceptTgtYn?: string, ongoingRentDealTypeList?: Array<string>, orderBy?: string, pageNum?: number, pageSize?: number, tipYn?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLeaseMngBldListPaging: (authorization: string, clnId?: string, clnId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLeaseMngContrList: (authorization: string, bldId?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLmClnExclBld: (authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLmClnExclBldLeaseDealPaging: (authorization: string, bldId: string, clnId: string, bldId2?: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLmClnExclBldTaskPaging: (authorization: string, bldId: string, clnId: string, bldId2?: string, clnId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLmClnExclLwh: (authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLmClnExclLwhLeaseDealPaging: (authorization: string, bldId: string, clnId: string, bldId2?: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLmClnMngBldForExclBldModal: (authorization: string, clnId: string, bldId?: string, bldName?: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, roadNameAddr?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLmClnMngLwhForExclLwhModal: (authorization: string, clnId: string, bldId?: string, bldName?: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, roadNameAddr?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getMngClnListPaging: (authorization: string, clnBselMngLevCd?: string, clnId?: string, clnLwhMngLevCd?: string, clnMngDeptCd?: string, clnName?: string, coMngLevCd?: string, contrYn?: string, furDlvrYn?: string, mktMngCd?: Array<string>, orderBy?: string, pageNum?: number, pageSize?: number, projContrYn?: string, servCd?: Array<string>, servOpt?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getWhlClnListPaging: (authorization: string, bjdCd?: Array<string>, clnAddr?: string, clnId?: string, clnMngDeptCd?: string, clnName?: string, clnTypeCd?: string, coMngLevCd?: Array<string>, coTypeCd?: string, cusRelYn?: string, expectMoveDyHasYn?: string, finnTeamMngYn?: string, grpName?: string, ksicCd?: string, maxClnAddrChkDt?: string, maxContrEndDy?: string, maxEsaPy?: number, maxExpectMoveDy?: string, maxOnlaPy?: number, maxRctCallSuccDy?: string, maxTaskRegDy?: string, maxTipRegDy?: string, minClnAddrChkDt?: string, minContrEndDy?: string, minEsaPy?: number, minExpectMoveDy?: string, minOnlaPy?: number, minRctCallSuccDy?: string, minTaskRegDy?: string, minTipRegDy?: string, mktMngCd?: Array<string>, mktTeamMngYn?: string, mngExceptTgtCd?: string, mngExceptTgtYn?: string, mptbUserYn?: string, ongoingLeaseDealTypeList?: Array<string>, ongoingRentDealTypeList?: Array<string>, openStatCd?: string, ordInProgsYn?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchAddrChkDy: (authorization: string, clnId: string, input: PatchClnBldAddrIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchCln: (authorization: string, clnId: string, input: PatchClnIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchClnBselMngInfo: (authorization: string, clnId: string, input: PatchClnBselMngIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchClnCon: (authorization: string, clnId: string, conId: string, input: PatchClnConRelIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchClnCus: (authorization: string, clnId: string, input: PatchClnCusRelIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchClnEvt: (authorization: string, clnId: string, input: PatchClnEvtTgtIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchClnLwhMngInfo: (authorization: string, clnId: string, input: PatchClnLwhMngIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchClnMainAddr: (authorization: string, clnId: string, input: PatchClnBldAddrIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchClnMng: (authorization: string, clnId: string, input: PatchClnMngIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchClnMngBld: (authorization: string, bldId: string, clnId: string, input: PatchClnBldIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchClnMngBselPrd: (authorization: string, clnId: string, input: PostClnMngBselPrdIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchClnMngLwh: (authorization: string, bldId: string, clnId: string, input: PatchClnBldIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchClnMngTeam: (authorization: string, clnId: string, input: PatchClnMngTeamIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchClnMngTeamYn: (authorization: string, input: PatchClnMngTeamYnIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchClnMvinLwhUnit: (authorization: string, clnId: string, input: PostClnAddrIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchClnMvinUnit: (authorization: string, clnId: string, input: PostClnAddrIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchClnRetailMngInfo: (authorization: string, clnId: string, input: PatchClnRetailMngIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchCusEtcCtn: (authorization: string, input: PatchCusEtcCtn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchLmClnExclBld: (authorization: string, bldId: string, clnId: string, input: PatchLmClnExclBldIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchLmClnExclBldTaskPaging: (authorization: string, taskId: string, input: PatchLmClnExclBldTaskIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchLmClnExclLwh: (authorization: string, bldId: string, clnId: string, input: PatchLmClnExclBldIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchOwnMngBld: (authorization: string, clnId: string, input: PatchOwnMngBldIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postAllClnUrpInfo: (authorization: string, input: PostAllClnUrpIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postCln: (authorization: string, input: SaveClnIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postClnAddr: (authorization: string, clnId: string, input: PostClnAddrIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postClnAddrLwh: (authorization: string, clnId: string, input: PostClnAddrIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postClnBselPrfArea: (authorization: string, clnId: string, input: PostClnBselPrfAreaIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postClnEvt: (authorization: string, clnId: string, input: SaveClnEvtTgtIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postClnMngBld: (authorization: string, bldId: string, clnId: string, input: SaveClnBldIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postClnMngBselPrd: (authorization: string, clnId: string, input: PostClnMngBselPrdIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postClnMngLwh: (authorization: string, bldId: string, clnId: string, input: SaveClnBldIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postLmClnExclBld: (authorization: string, bldId: string, clnId: string, input: SaveLmClnExclBldIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postLmClnExclBldTaskPaging: (authorization: string, bldId: string, clnId: string, input: SaveLmClnExclBldTaskIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postLmClnExclLwh: (authorization: string, bldId: string, clnId: string, input: SaveLmClnExclBldIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    saveClnCon: (authorization: string, clnId: string, input: SaveClnConRelIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
export declare const ClnControllerApiFp: (configuration?: Configuration) => {
    deleteBselPrfArea(authorization: string, clnId: string, input: DeleteClnBselPrfAreaIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MbrBselBjdcdRel>>;
    deleteCln(authorization: string, clnId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    deleteClnCon(authorization: string, clnId: string, conId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    deleteClnCus(authorization: string, clnId: string, cusId: string, input: DeleteClnCusRelIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    deleteClnEvt(authorization: string, clnId: string, input: DeleteClnEvtTgtIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    deleteClnMngBld(authorization: string, bldId: string, clnId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    deleteClnMngBselPrd(authorization: string, clnId: string, prdBselId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    deleteClnMngLwh(authorization: string, bldId: string, clnId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    deleteClnMvinBld(authorization: string, clnId: string, input: DeleteClnMvinBldIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    deleteClnMvinLwh(authorization: string, clnId: string, input: DeleteClnMvinBldIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    deleteLmClnExclBld(authorization: string, bldId: string, clnId: string, objTypeCd?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    deleteLmClnExclBldTaskPaging(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    deleteLmClnExclLwh(authorization: string, bldId: string, clnId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    getAllClnListInDeptPaging(authorization: string, afltDeptYn?: string, afltMngPtbId?: Array<string>, allYn?: string, bjdCd?: Array<string>, bldMngPtbId?: string, brcHasYn?: string, bselBjdCd?: Array<string>, bselDeptYn?: string, bselMngPtbId?: Array<string>, clnAddr?: string, clnBselMngCfCd?: string, clnBselMngLevCd?: string, clnId?: string, clnLwhMngCfCd?: string, clnLwhMngLevCd?: string, clnMngDeptCd?: string, clnName?: string, clnRetailMngLevCdList?: Array<string>, clnTypeCd?: string, coMngLevCd?: Array<string>, coTypeCd?: string, contrTypeList?: Array<string>, corpSalTeamMngYn?: string, cusRelYn?: string, expNdsCd?: Array<string>, expectMoveDyHasYn?: string, finnTeamMngYn?: string, furDeptYn?: string, furMngPtbId?: Array<string>, furYn?: string, grpName?: string, industryLargeCd?: string, industryMiddleCdList?: Array<string>, intDeptYn?: string, intMngPtbId?: Array<string>, ksicCd?: string, lmDeptYn?: string, lmMngPtbId?: Array<string>, lmTeamMngYn?: string, lmYn?: string, lwhDeptYn?: string, lwhMngPtbId?: Array<string>, maxClnAddrChkDt?: string, maxContrEndDy?: string, maxCreateDt?: string, maxEsaPy?: number, maxExpectMoveDy?: string, maxOnlaPy?: number, maxRctCallSuccDy?: string, maxRctDlvrDy?: string, maxRctLmClnTaskDy?: string, maxRetailEsaPy?: number, maxTaskRegDy?: string, maxTipRegDy?: string, maxTotalOrdCnt?: number, maxTotalSalesAmt?: number, minClnAddrChkDt?: string, minContrEndDy?: string, minCreateDt?: string, minEsaPy?: number, minExpectMoveDy?: string, minOnlaPy?: number, minRctCallSuccDy?: string, minRctDlvrDy?: string, minRctLmClnTaskDy?: string, minRetailEsaPy?: number, minTaskRegDy?: string, minTipRegDy?: string, minTotalOrdCnt?: number, minTotalSalesAmt?: number, mktMngCd?: Array<string>, mktMngPtbId?: Array<string>, mktTeamMngYn?: string, mngBldYn?: string, mngExceptTgtCd?: string, mngExceptTgtYn?: string, mptbUserYn?: string, ongoingLeaseDealTypeList?: Array<string>, ongoingRentDealTypeList?: Array<string>, openStatCd?: string, ordInProgsYn?: string, orderBy?: string, ownMngBldLevCd?: Array<string>, ownMngBldTypeCd?: string, pageNum?: number, pageSize?: number, projYn?: string, retailDeptYn?: string, salDeptYn?: string, salYn?: string, tipYn?: string, wplcTypeCd?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetAllClnListInDeptOut>>;
    getClnAddrPaging(authorization: string, clnId: string, clnId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetClnAddrOut>>;
    getClnComInfoOne(authorization: string, clnId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetClnComInfoOut>>;
    getClnConList(authorization: string, clnId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetClnConOut>>>;
    getClnCusRelNonuHstPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetClnCusRelNonuHstOut>>;
    getClnCusWithCon(authorization: string, clnId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetClnCusOut>>;
    getClnEvtDelHstPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetClnEvtTgtDelHstOut>>;
    getClnEvtPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetClnEvtTgtOut>>;
    getClnExcelDownload(authorization: string, bjdCd?: Array<string>, clnAddr?: string, clnId?: string, clnMngDeptCd?: string, clnName?: string, clnTypeCd?: string, coMngLevCd?: Array<string>, coTypeCd?: string, cusRelYn?: string, expectMoveDyHasYn?: string, finnTeamMngYn?: string, grpName?: string, ksicCd?: string, maxClnAddrChkDt?: string, maxContrEndDy?: string, maxEsaPy?: number, maxExpectMoveDy?: string, maxOnlaPy?: number, maxRctCallSuccDy?: string, maxTaskRegDy?: string, maxTipRegDy?: string, minClnAddrChkDt?: string, minContrEndDy?: string, minEsaPy?: number, minExpectMoveDy?: string, minOnlaPy?: number, minRctCallSuccDy?: string, minTaskRegDy?: string, minTipRegDy?: string, mktMngCd?: Array<string>, mktTeamMngYn?: string, mngExceptTgtCd?: string, mngExceptTgtYn?: string, mptbUserYn?: string, ongoingLeaseDealTypeList?: Array<string>, ongoingRentDealTypeList?: Array<string>, openStatCd?: string, ordInProgsYn?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Resource>>;
    getClnIntProjPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetClnIntProjOut>>;
    getClnLeaseDealTaskPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingClnLeaseDealOut>>;
    getClnLwhLeaseDealTaskPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingClnLeaseDealOut>>;
    getClnLwhRentDealTaskPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingClnRentDealOut>>;
    getClnMngBldPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetClnMngBldOut>>;
    getClnMngBselPrdListPaging(authorization: string, clnId?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetClnMngBselPrdOut>>;
    getClnMngLwhPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetClnMngLwhOut>>;
    getClnMngOne(authorization: string, clnId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetClnMngOut>>;
    getClnMngTeamOne(authorization: string, clnId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetClnMngTeamOut>>;
    getClnOne(authorization: string, clnId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetClnOut>>;
    getClnOrdPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingClnOrdOut>>;
    getClnRentDealTaskPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingClnRentDealOut>>;
    getClnSalLeaseTaskPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingClnLeaseDealOut>>;
    getClnSalRentTaskPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingClnRentDealOut>>;
    getDeptAfltClnListPaging(authorization: string, afltMngPtbId?: Array<string>, bjdCd?: Array<string>, bldMngPtbId?: string, clnAddr?: string, clnId?: string, clnMngDeptCd?: string, clnName?: string, expNdsCd?: Array<string>, ksicCd?: string, lmTeamMngYn?: string, maxRctCallSuccDy?: string, maxTaskRegDy?: string, maxTipRegDy?: string, minRctCallSuccDy?: string, minTaskRegDy?: string, minTipRegDy?: string, mktMngCd?: Array<string>, mngExceptTgtCd?: string, mngExceptTgtYn?: string, orderBy?: string, ownMngBldLevCd?: Array<string>, ownMngBldTypeCd?: string, pageNum?: number, pageSize?: number, projYn?: string, tipYn?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetAllClnListOut>>;
    getDeptBselClnListPaging(authorization: string, bjdCd?: Array<string>, bselBjdCd?: Array<string>, bselMngPtbId?: Array<string>, clnAddr?: string, clnBselMngCfCd?: string, clnBselMngLevCd?: string, clnMngDeptCd?: string, clnName?: string, clnTypeCd?: string, ksicCd?: string, mngBldYn?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetAllClnListOut>>;
    getDeptFurClnListPaging(authorization: string, bjdCd?: Array<string>, clnAddr?: string, clnMngDeptCd?: string, clnName?: string, furMngPtbId?: Array<string>, maxRctDlvrDy?: string, maxTipRegDy?: string, maxTotalOrdCnt?: number, maxTotalSalesAmt?: number, minRctDlvrDy?: string, minTipRegDy?: string, minTotalOrdCnt?: number, minTotalSalesAmt?: number, mktMngCd?: Array<string>, ordInProgsYn?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetAllClnListOut>>;
    getDeptIntClnListPaging(authorization: string, bjdCd?: Array<string>, brcHasYn?: string, clnAddr?: string, clnMngDeptCd?: string, clnName?: string, clnTypeCd?: string, coMngLevCd?: Array<string>, coTypeCd?: string, intMngPtbId?: Array<string>, maxRctCallSuccDy?: string, maxTipRegDy?: string, minRctCallSuccDy?: string, minTipRegDy?: string, mktMngCd?: Array<string>, mngExceptTgtCd?: string, mngExceptTgtYn?: string, orderBy?: string, pageNum?: number, pageSize?: number, tipYn?: string, wplcTypeCd?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetAllClnListOut>>;
    getDeptLmClnListPaging(authorization: string, bjdCd?: Array<string>, clnAddr?: string, clnMngDeptCd?: string, clnName?: string, lmMngPtbId?: Array<string>, maxRctLmClnTaskDy?: string, maxTipRegDy?: string, minRctLmClnTaskDy?: string, minTipRegDy?: string, mktMngCd?: Array<string>, ongoingLeaseDealTypeList?: Array<string>, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetAllClnListOut>>;
    getDeptLwhClnListPaging(authorization: string, bjdCd?: Array<string>, clnAddr?: string, clnLwhMngCfCd?: string, clnLwhMngLevCd?: string, clnMngDeptCd?: string, clnName?: string, clnTypeCd?: string, coMngLevCd?: Array<string>, coTypeCd?: string, ksicCd?: string, lwhMngPtbId?: Array<string>, maxRctCallSuccDy?: string, maxTipRegDy?: string, minRctCallSuccDy?: string, minTipRegDy?: string, mktMngCd?: Array<string>, mngExceptTgtCd?: string, mngExceptTgtYn?: string, openStatCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, tipYn?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetAllClnListOut>>;
    getDeptRetailClnListPaging(authorization: string, bjdCd?: Array<string>, brcHasYn?: string, clnAddr?: string, clnName?: string, clnRetailMngLevCdList?: Array<string>, clnTypeCd?: string, coTypeCd?: string, contrTypeList?: Array<string>, industryLargeCd?: string, industryMiddleCdList?: Array<string>, ksicCd?: string, maxOnlaPy?: number, maxRctCallSuccDy?: string, maxRetailEsaPy?: number, maxTipRegDy?: string, minOnlaPy?: number, minRctCallSuccDy?: string, minRetailEsaPy?: number, minTipRegDy?: string, ongoingLeaseDealTypeList?: Array<string>, ongoingRentDealTypeList?: Array<string>, orderBy?: string, pageNum?: number, pageSize?: number, retailTeamMngYn?: string, tipYn?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetAllClnListOut>>;
    getDeptSalClnListPaging(authorization: string, bjdCd?: Array<string>, brcHasYn?: string, clnAddr?: string, clnName?: string, clnTypeCd?: string, coMngLevCd?: Array<string>, coTypeCd?: string, contrTypeList?: Array<string>, corpSalTeamMngYn?: string, finnTeamMngYn?: string, ksicCd?: string, maxEsaPy?: number, maxExpectMoveDy?: string, maxOnlaPy?: number, maxRctCallSuccDy?: string, maxTipRegDy?: string, minEsaPy?: number, minExpectMoveDy?: string, minOnlaPy?: number, minRctCallSuccDy?: string, minTipRegDy?: string, mktMngCd?: Array<string>, mktMngPtbId?: Array<string>, mktTeamMngYn?: string, mngExceptTgtCd?: string, mngExceptTgtYn?: string, ongoingRentDealTypeList?: Array<string>, orderBy?: string, pageNum?: number, pageSize?: number, tipYn?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetAllClnListOut>>;
    getLeaseMngBldListPaging(authorization: string, clnId?: string, clnId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetLeaseMngBldListOut>>;
    getLeaseMngContrList(authorization: string, bldId?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetBldContrOut>>;
    getLmClnExclBld(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetLmClnExclBldOut>>;
    getLmClnExclBldLeaseDealPaging(authorization: string, bldId: string, clnId: string, bldId2?: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetLmClnExclBldLeaseDealOut>>;
    getLmClnExclBldTaskPaging(authorization: string, bldId: string, clnId: string, bldId2?: string, clnId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetLmClnExclBldTaskOut>>;
    getLmClnExclLwh(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetLmClnExclBldOut>>;
    getLmClnExclLwhLeaseDealPaging(authorization: string, bldId: string, clnId: string, bldId2?: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetLmClnExclBldLeaseDealOut>>;
    getLmClnMngBldForExclBldModal(authorization: string, clnId: string, bldId?: string, bldName?: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, roadNameAddr?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetLmClnMngBldForExclBldModalOut>>;
    getLmClnMngLwhForExclLwhModal(authorization: string, clnId: string, bldId?: string, bldName?: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, roadNameAddr?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetLmClnMngBldForExclBldModalOut>>;
    getMngClnListPaging(authorization: string, clnBselMngLevCd?: string, clnId?: string, clnLwhMngLevCd?: string, clnMngDeptCd?: string, clnName?: string, coMngLevCd?: string, contrYn?: string, furDlvrYn?: string, mktMngCd?: Array<string>, orderBy?: string, pageNum?: number, pageSize?: number, projContrYn?: string, servCd?: Array<string>, servOpt?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetMngClnListOut>>;
    getWhlClnListPaging(authorization: string, bjdCd?: Array<string>, clnAddr?: string, clnId?: string, clnMngDeptCd?: string, clnName?: string, clnTypeCd?: string, coMngLevCd?: Array<string>, coTypeCd?: string, cusRelYn?: string, expectMoveDyHasYn?: string, finnTeamMngYn?: string, grpName?: string, ksicCd?: string, maxClnAddrChkDt?: string, maxContrEndDy?: string, maxEsaPy?: number, maxExpectMoveDy?: string, maxOnlaPy?: number, maxRctCallSuccDy?: string, maxTaskRegDy?: string, maxTipRegDy?: string, minClnAddrChkDt?: string, minContrEndDy?: string, minEsaPy?: number, minExpectMoveDy?: string, minOnlaPy?: number, minRctCallSuccDy?: string, minTaskRegDy?: string, minTipRegDy?: string, mktMngCd?: Array<string>, mktTeamMngYn?: string, mngExceptTgtCd?: string, mngExceptTgtYn?: string, mptbUserYn?: string, ongoingLeaseDealTypeList?: Array<string>, ongoingRentDealTypeList?: Array<string>, openStatCd?: string, ordInProgsYn?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetAllClnListOut>>;
    patchAddrChkDy(authorization: string, clnId: string, input: PatchClnBldAddrIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MbrClnMst>>;
    patchCln(authorization: string, clnId: string, input: PatchClnIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MbrClnMst>>;
    patchClnBselMngInfo(authorization: string, clnId: string, input: PatchClnBselMngIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetClnMngOut>>;
    patchClnCon(authorization: string, clnId: string, conId: string, input: PatchClnConRelIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    patchClnCus(authorization: string, clnId: string, input: PatchClnCusRelIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MbrClnCusRel>>;
    patchClnEvt(authorization: string, clnId: string, input: PatchClnEvtTgtIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MbrEvtTgtMst>>;
    patchClnLwhMngInfo(authorization: string, clnId: string, input: PatchClnLwhMngIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetClnMngOut>>;
    patchClnMainAddr(authorization: string, clnId: string, input: PatchClnBldAddrIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    patchClnMng(authorization: string, clnId: string, input: PatchClnMngIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetClnMngOut>>;
    patchClnMngBld(authorization: string, bldId: string, clnId: string, input: PatchClnBldIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MbrClnObjRel>>;
    patchClnMngBselPrd(authorization: string, clnId: string, input: PostClnMngBselPrdIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MbrClnBselRel>>;
    patchClnMngLwh(authorization: string, bldId: string, clnId: string, input: PatchClnBldIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MbrClnObjRel>>;
    patchClnMngTeam(authorization: string, clnId: string, input: PatchClnMngTeamIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MbrClnMngDtl>>;
    patchClnMngTeamYn(authorization: string, input: PatchClnMngTeamYnIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MbrClnMngDtl>>;
    patchClnMvinLwhUnit(authorization: string, clnId: string, input: PostClnAddrIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    patchClnMvinUnit(authorization: string, clnId: string, input: PostClnAddrIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    patchClnRetailMngInfo(authorization: string, clnId: string, input: PatchClnRetailMngIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MbrClnMngDtl>>;
    patchCusEtcCtn(authorization: string, input: PatchCusEtcCtn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MbrCusMst>>;
    patchLmClnExclBld(authorization: string, bldId: string, clnId: string, input: PatchLmClnExclBldIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MbrClnObjRel>>;
    patchLmClnExclBldTaskPaging(authorization: string, taskId: string, input: PatchLmClnExclBldTaskIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLmClnExclBldTaskOut>>;
    patchLmClnExclLwh(authorization: string, bldId: string, clnId: string, input: PatchLmClnExclBldIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MbrClnObjRel>>;
    patchOwnMngBld(authorization: string, clnId: string, input: PatchOwnMngBldIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MbrClnObjRel>>;
    postAllClnUrpInfo(authorization: string, input: PostAllClnUrpIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postCln(authorization: string, input: SaveClnIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MbrClnMst>>;
    postClnAddr(authorization: string, clnId: string, input: PostClnAddrIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postClnAddrLwh(authorization: string, clnId: string, input: PostClnAddrIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postClnBselPrfArea(authorization: string, clnId: string, input: PostClnBselPrfAreaIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postClnEvt(authorization: string, clnId: string, input: SaveClnEvtTgtIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MbrEvtTgtMst>>;
    postClnMngBld(authorization: string, bldId: string, clnId: string, input: SaveClnBldIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MbrClnObjRel>>;
    postClnMngBselPrd(authorization: string, clnId: string, input: PostClnMngBselPrdIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MbrClnBselRel>>;
    postClnMngLwh(authorization: string, bldId: string, clnId: string, input: SaveClnBldIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MbrClnObjRel>>;
    postLmClnExclBld(authorization: string, bldId: string, clnId: string, input: SaveLmClnExclBldIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MbrClnObjRel>>;
    postLmClnExclBldTaskPaging(authorization: string, bldId: string, clnId: string, input: SaveLmClnExclBldTaskIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLmClnExclBldTaskOut>>;
    postLmClnExclLwh(authorization: string, bldId: string, clnId: string, input: SaveLmClnExclBldIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MbrClnObjRel>>;
    saveClnCon(authorization: string, clnId: string, input: SaveClnConRelIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
};
export declare const ClnControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    deleteBselPrfArea(authorization: string, clnId: string, input: DeleteClnBselPrfAreaIn, options?: any): AxiosPromise<MbrBselBjdcdRel>;
    deleteCln(authorization: string, clnId: string, options?: any): AxiosPromise<void>;
    deleteClnCon(authorization: string, clnId: string, conId: string, options?: any): AxiosPromise<void>;
    deleteClnCus(authorization: string, clnId: string, cusId: string, input: DeleteClnCusRelIn, options?: any): AxiosPromise<void>;
    deleteClnEvt(authorization: string, clnId: string, input: DeleteClnEvtTgtIn, options?: any): AxiosPromise<void>;
    deleteClnMngBld(authorization: string, bldId: string, clnId: string, options?: any): AxiosPromise<void>;
    deleteClnMngBselPrd(authorization: string, clnId: string, prdBselId: string, options?: any): AxiosPromise<void>;
    deleteClnMngLwh(authorization: string, bldId: string, clnId: string, options?: any): AxiosPromise<void>;
    deleteClnMvinBld(authorization: string, clnId: string, input: DeleteClnMvinBldIn, options?: any): AxiosPromise<void>;
    deleteClnMvinLwh(authorization: string, clnId: string, input: DeleteClnMvinBldIn, options?: any): AxiosPromise<void>;
    deleteLmClnExclBld(authorization: string, bldId: string, clnId: string, objTypeCd?: string, options?: any): AxiosPromise<void>;
    deleteLmClnExclBldTaskPaging(authorization: string, taskId: string, options?: any): AxiosPromise<number>;
    deleteLmClnExclLwh(authorization: string, bldId: string, clnId: string, options?: any): AxiosPromise<void>;
    getAllClnListInDeptPaging(authorization: string, afltDeptYn?: string, afltMngPtbId?: Array<string>, allYn?: string, bjdCd?: Array<string>, bldMngPtbId?: string, brcHasYn?: string, bselBjdCd?: Array<string>, bselDeptYn?: string, bselMngPtbId?: Array<string>, clnAddr?: string, clnBselMngCfCd?: string, clnBselMngLevCd?: string, clnId?: string, clnLwhMngCfCd?: string, clnLwhMngLevCd?: string, clnMngDeptCd?: string, clnName?: string, clnRetailMngLevCdList?: Array<string>, clnTypeCd?: string, coMngLevCd?: Array<string>, coTypeCd?: string, contrTypeList?: Array<string>, corpSalTeamMngYn?: string, cusRelYn?: string, expNdsCd?: Array<string>, expectMoveDyHasYn?: string, finnTeamMngYn?: string, furDeptYn?: string, furMngPtbId?: Array<string>, furYn?: string, grpName?: string, industryLargeCd?: string, industryMiddleCdList?: Array<string>, intDeptYn?: string, intMngPtbId?: Array<string>, ksicCd?: string, lmDeptYn?: string, lmMngPtbId?: Array<string>, lmTeamMngYn?: string, lmYn?: string, lwhDeptYn?: string, lwhMngPtbId?: Array<string>, maxClnAddrChkDt?: string, maxContrEndDy?: string, maxCreateDt?: string, maxEsaPy?: number, maxExpectMoveDy?: string, maxOnlaPy?: number, maxRctCallSuccDy?: string, maxRctDlvrDy?: string, maxRctLmClnTaskDy?: string, maxRetailEsaPy?: number, maxTaskRegDy?: string, maxTipRegDy?: string, maxTotalOrdCnt?: number, maxTotalSalesAmt?: number, minClnAddrChkDt?: string, minContrEndDy?: string, minCreateDt?: string, minEsaPy?: number, minExpectMoveDy?: string, minOnlaPy?: number, minRctCallSuccDy?: string, minRctDlvrDy?: string, minRctLmClnTaskDy?: string, minRetailEsaPy?: number, minTaskRegDy?: string, minTipRegDy?: string, minTotalOrdCnt?: number, minTotalSalesAmt?: number, mktMngCd?: Array<string>, mktMngPtbId?: Array<string>, mktTeamMngYn?: string, mngBldYn?: string, mngExceptTgtCd?: string, mngExceptTgtYn?: string, mptbUserYn?: string, ongoingLeaseDealTypeList?: Array<string>, ongoingRentDealTypeList?: Array<string>, openStatCd?: string, ordInProgsYn?: string, orderBy?: string, ownMngBldLevCd?: Array<string>, ownMngBldTypeCd?: string, pageNum?: number, pageSize?: number, projYn?: string, retailDeptYn?: string, salDeptYn?: string, salYn?: string, tipYn?: string, wplcTypeCd?: string, options?: any): AxiosPromise<PagingGetAllClnListInDeptOut>;
    getClnAddrPaging(authorization: string, clnId: string, clnId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetClnAddrOut>;
    getClnComInfoOne(authorization: string, clnId: string, options?: any): AxiosPromise<GetClnComInfoOut>;
    getClnConList(authorization: string, clnId: string, options?: any): AxiosPromise<Array<GetClnConOut>>;
    getClnCusRelNonuHstPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetClnCusRelNonuHstOut>;
    getClnCusWithCon(authorization: string, clnId: string, options?: any): AxiosPromise<GetClnCusOut>;
    getClnEvtDelHstPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetClnEvtTgtDelHstOut>;
    getClnEvtPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetClnEvtTgtOut>;
    getClnExcelDownload(authorization: string, bjdCd?: Array<string>, clnAddr?: string, clnId?: string, clnMngDeptCd?: string, clnName?: string, clnTypeCd?: string, coMngLevCd?: Array<string>, coTypeCd?: string, cusRelYn?: string, expectMoveDyHasYn?: string, finnTeamMngYn?: string, grpName?: string, ksicCd?: string, maxClnAddrChkDt?: string, maxContrEndDy?: string, maxEsaPy?: number, maxExpectMoveDy?: string, maxOnlaPy?: number, maxRctCallSuccDy?: string, maxTaskRegDy?: string, maxTipRegDy?: string, minClnAddrChkDt?: string, minContrEndDy?: string, minEsaPy?: number, minExpectMoveDy?: string, minOnlaPy?: number, minRctCallSuccDy?: string, minTaskRegDy?: string, minTipRegDy?: string, mktMngCd?: Array<string>, mktTeamMngYn?: string, mngExceptTgtCd?: string, mngExceptTgtYn?: string, mptbUserYn?: string, ongoingLeaseDealTypeList?: Array<string>, ongoingRentDealTypeList?: Array<string>, openStatCd?: string, ordInProgsYn?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<Resource>;
    getClnIntProjPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetClnIntProjOut>;
    getClnLeaseDealTaskPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingClnLeaseDealOut>;
    getClnLwhLeaseDealTaskPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingClnLeaseDealOut>;
    getClnLwhRentDealTaskPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingClnRentDealOut>;
    getClnMngBldPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetClnMngBldOut>;
    getClnMngBselPrdListPaging(authorization: string, clnId?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetClnMngBselPrdOut>;
    getClnMngLwhPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetClnMngLwhOut>;
    getClnMngOne(authorization: string, clnId: string, options?: any): AxiosPromise<GetClnMngOut>;
    getClnMngTeamOne(authorization: string, clnId: string, options?: any): AxiosPromise<GetClnMngTeamOut>;
    getClnOne(authorization: string, clnId: string, options?: any): AxiosPromise<GetClnOut>;
    getClnOrdPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingClnOrdOut>;
    getClnRentDealTaskPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingClnRentDealOut>;
    getClnSalLeaseTaskPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingClnLeaseDealOut>;
    getClnSalRentTaskPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingClnRentDealOut>;
    getDeptAfltClnListPaging(authorization: string, afltMngPtbId?: Array<string>, bjdCd?: Array<string>, bldMngPtbId?: string, clnAddr?: string, clnId?: string, clnMngDeptCd?: string, clnName?: string, expNdsCd?: Array<string>, ksicCd?: string, lmTeamMngYn?: string, maxRctCallSuccDy?: string, maxTaskRegDy?: string, maxTipRegDy?: string, minRctCallSuccDy?: string, minTaskRegDy?: string, minTipRegDy?: string, mktMngCd?: Array<string>, mngExceptTgtCd?: string, mngExceptTgtYn?: string, orderBy?: string, ownMngBldLevCd?: Array<string>, ownMngBldTypeCd?: string, pageNum?: number, pageSize?: number, projYn?: string, tipYn?: string, options?: any): AxiosPromise<PagingGetAllClnListOut>;
    getDeptBselClnListPaging(authorization: string, bjdCd?: Array<string>, bselBjdCd?: Array<string>, bselMngPtbId?: Array<string>, clnAddr?: string, clnBselMngCfCd?: string, clnBselMngLevCd?: string, clnMngDeptCd?: string, clnName?: string, clnTypeCd?: string, ksicCd?: string, mngBldYn?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetAllClnListOut>;
    getDeptFurClnListPaging(authorization: string, bjdCd?: Array<string>, clnAddr?: string, clnMngDeptCd?: string, clnName?: string, furMngPtbId?: Array<string>, maxRctDlvrDy?: string, maxTipRegDy?: string, maxTotalOrdCnt?: number, maxTotalSalesAmt?: number, minRctDlvrDy?: string, minTipRegDy?: string, minTotalOrdCnt?: number, minTotalSalesAmt?: number, mktMngCd?: Array<string>, ordInProgsYn?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetAllClnListOut>;
    getDeptIntClnListPaging(authorization: string, bjdCd?: Array<string>, brcHasYn?: string, clnAddr?: string, clnMngDeptCd?: string, clnName?: string, clnTypeCd?: string, coMngLevCd?: Array<string>, coTypeCd?: string, intMngPtbId?: Array<string>, maxRctCallSuccDy?: string, maxTipRegDy?: string, minRctCallSuccDy?: string, minTipRegDy?: string, mktMngCd?: Array<string>, mngExceptTgtCd?: string, mngExceptTgtYn?: string, orderBy?: string, pageNum?: number, pageSize?: number, tipYn?: string, wplcTypeCd?: string, options?: any): AxiosPromise<PagingGetAllClnListOut>;
    getDeptLmClnListPaging(authorization: string, bjdCd?: Array<string>, clnAddr?: string, clnMngDeptCd?: string, clnName?: string, lmMngPtbId?: Array<string>, maxRctLmClnTaskDy?: string, maxTipRegDy?: string, minRctLmClnTaskDy?: string, minTipRegDy?: string, mktMngCd?: Array<string>, ongoingLeaseDealTypeList?: Array<string>, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetAllClnListOut>;
    getDeptLwhClnListPaging(authorization: string, bjdCd?: Array<string>, clnAddr?: string, clnLwhMngCfCd?: string, clnLwhMngLevCd?: string, clnMngDeptCd?: string, clnName?: string, clnTypeCd?: string, coMngLevCd?: Array<string>, coTypeCd?: string, ksicCd?: string, lwhMngPtbId?: Array<string>, maxRctCallSuccDy?: string, maxTipRegDy?: string, minRctCallSuccDy?: string, minTipRegDy?: string, mktMngCd?: Array<string>, mngExceptTgtCd?: string, mngExceptTgtYn?: string, openStatCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, tipYn?: string, options?: any): AxiosPromise<PagingGetAllClnListOut>;
    getDeptRetailClnListPaging(authorization: string, bjdCd?: Array<string>, brcHasYn?: string, clnAddr?: string, clnName?: string, clnRetailMngLevCdList?: Array<string>, clnTypeCd?: string, coTypeCd?: string, contrTypeList?: Array<string>, industryLargeCd?: string, industryMiddleCdList?: Array<string>, ksicCd?: string, maxOnlaPy?: number, maxRctCallSuccDy?: string, maxRetailEsaPy?: number, maxTipRegDy?: string, minOnlaPy?: number, minRctCallSuccDy?: string, minRetailEsaPy?: number, minTipRegDy?: string, ongoingLeaseDealTypeList?: Array<string>, ongoingRentDealTypeList?: Array<string>, orderBy?: string, pageNum?: number, pageSize?: number, retailTeamMngYn?: string, tipYn?: string, options?: any): AxiosPromise<PagingGetAllClnListOut>;
    getDeptSalClnListPaging(authorization: string, bjdCd?: Array<string>, brcHasYn?: string, clnAddr?: string, clnName?: string, clnTypeCd?: string, coMngLevCd?: Array<string>, coTypeCd?: string, contrTypeList?: Array<string>, corpSalTeamMngYn?: string, finnTeamMngYn?: string, ksicCd?: string, maxEsaPy?: number, maxExpectMoveDy?: string, maxOnlaPy?: number, maxRctCallSuccDy?: string, maxTipRegDy?: string, minEsaPy?: number, minExpectMoveDy?: string, minOnlaPy?: number, minRctCallSuccDy?: string, minTipRegDy?: string, mktMngCd?: Array<string>, mktMngPtbId?: Array<string>, mktTeamMngYn?: string, mngExceptTgtCd?: string, mngExceptTgtYn?: string, ongoingRentDealTypeList?: Array<string>, orderBy?: string, pageNum?: number, pageSize?: number, tipYn?: string, options?: any): AxiosPromise<PagingGetAllClnListOut>;
    getLeaseMngBldListPaging(authorization: string, clnId?: string, clnId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetLeaseMngBldListOut>;
    getLeaseMngContrList(authorization: string, bldId?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetBldContrOut>;
    getLmClnExclBld(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetLmClnExclBldOut>;
    getLmClnExclBldLeaseDealPaging(authorization: string, bldId: string, clnId: string, bldId2?: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetLmClnExclBldLeaseDealOut>;
    getLmClnExclBldTaskPaging(authorization: string, bldId: string, clnId: string, bldId2?: string, clnId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetLmClnExclBldTaskOut>;
    getLmClnExclLwh(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetLmClnExclBldOut>;
    getLmClnExclLwhLeaseDealPaging(authorization: string, bldId: string, clnId: string, bldId2?: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetLmClnExclBldLeaseDealOut>;
    getLmClnMngBldForExclBldModal(authorization: string, clnId: string, bldId?: string, bldName?: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, roadNameAddr?: string, options?: any): AxiosPromise<PagingGetLmClnMngBldForExclBldModalOut>;
    getLmClnMngLwhForExclLwhModal(authorization: string, clnId: string, bldId?: string, bldName?: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, roadNameAddr?: string, options?: any): AxiosPromise<PagingGetLmClnMngBldForExclBldModalOut>;
    getMngClnListPaging(authorization: string, clnBselMngLevCd?: string, clnId?: string, clnLwhMngLevCd?: string, clnMngDeptCd?: string, clnName?: string, coMngLevCd?: string, contrYn?: string, furDlvrYn?: string, mktMngCd?: Array<string>, orderBy?: string, pageNum?: number, pageSize?: number, projContrYn?: string, servCd?: Array<string>, servOpt?: string, options?: any): AxiosPromise<PagingGetMngClnListOut>;
    getWhlClnListPaging(authorization: string, bjdCd?: Array<string>, clnAddr?: string, clnId?: string, clnMngDeptCd?: string, clnName?: string, clnTypeCd?: string, coMngLevCd?: Array<string>, coTypeCd?: string, cusRelYn?: string, expectMoveDyHasYn?: string, finnTeamMngYn?: string, grpName?: string, ksicCd?: string, maxClnAddrChkDt?: string, maxContrEndDy?: string, maxEsaPy?: number, maxExpectMoveDy?: string, maxOnlaPy?: number, maxRctCallSuccDy?: string, maxTaskRegDy?: string, maxTipRegDy?: string, minClnAddrChkDt?: string, minContrEndDy?: string, minEsaPy?: number, minExpectMoveDy?: string, minOnlaPy?: number, minRctCallSuccDy?: string, minTaskRegDy?: string, minTipRegDy?: string, mktMngCd?: Array<string>, mktTeamMngYn?: string, mngExceptTgtCd?: string, mngExceptTgtYn?: string, mptbUserYn?: string, ongoingLeaseDealTypeList?: Array<string>, ongoingRentDealTypeList?: Array<string>, openStatCd?: string, ordInProgsYn?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: any): AxiosPromise<PagingGetAllClnListOut>;
    patchAddrChkDy(authorization: string, clnId: string, input: PatchClnBldAddrIn, options?: any): AxiosPromise<MbrClnMst>;
    patchCln(authorization: string, clnId: string, input: PatchClnIn, options?: any): AxiosPromise<MbrClnMst>;
    patchClnBselMngInfo(authorization: string, clnId: string, input: PatchClnBselMngIn, options?: any): AxiosPromise<GetClnMngOut>;
    patchClnCon(authorization: string, clnId: string, conId: string, input: PatchClnConRelIn, options?: any): AxiosPromise<number>;
    patchClnCus(authorization: string, clnId: string, input: PatchClnCusRelIn, options?: any): AxiosPromise<MbrClnCusRel>;
    patchClnEvt(authorization: string, clnId: string, input: PatchClnEvtTgtIn, options?: any): AxiosPromise<MbrEvtTgtMst>;
    patchClnLwhMngInfo(authorization: string, clnId: string, input: PatchClnLwhMngIn, options?: any): AxiosPromise<GetClnMngOut>;
    patchClnMainAddr(authorization: string, clnId: string, input: PatchClnBldAddrIn, options?: any): AxiosPromise<void>;
    patchClnMng(authorization: string, clnId: string, input: PatchClnMngIn, options?: any): AxiosPromise<GetClnMngOut>;
    patchClnMngBld(authorization: string, bldId: string, clnId: string, input: PatchClnBldIn, options?: any): AxiosPromise<MbrClnObjRel>;
    patchClnMngBselPrd(authorization: string, clnId: string, input: PostClnMngBselPrdIn, options?: any): AxiosPromise<MbrClnBselRel>;
    patchClnMngLwh(authorization: string, bldId: string, clnId: string, input: PatchClnBldIn, options?: any): AxiosPromise<MbrClnObjRel>;
    patchClnMngTeam(authorization: string, clnId: string, input: PatchClnMngTeamIn, options?: any): AxiosPromise<MbrClnMngDtl>;
    patchClnMngTeamYn(authorization: string, input: PatchClnMngTeamYnIn, options?: any): AxiosPromise<MbrClnMngDtl>;
    patchClnMvinLwhUnit(authorization: string, clnId: string, input: PostClnAddrIn, options?: any): AxiosPromise<void>;
    patchClnMvinUnit(authorization: string, clnId: string, input: PostClnAddrIn, options?: any): AxiosPromise<void>;
    patchClnRetailMngInfo(authorization: string, clnId: string, input: PatchClnRetailMngIn, options?: any): AxiosPromise<MbrClnMngDtl>;
    patchCusEtcCtn(authorization: string, input: PatchCusEtcCtn, options?: any): AxiosPromise<MbrCusMst>;
    patchLmClnExclBld(authorization: string, bldId: string, clnId: string, input: PatchLmClnExclBldIn, options?: any): AxiosPromise<MbrClnObjRel>;
    patchLmClnExclBldTaskPaging(authorization: string, taskId: string, input: PatchLmClnExclBldTaskIn, options?: any): AxiosPromise<GetLmClnExclBldTaskOut>;
    patchLmClnExclLwh(authorization: string, bldId: string, clnId: string, input: PatchLmClnExclBldIn, options?: any): AxiosPromise<MbrClnObjRel>;
    patchOwnMngBld(authorization: string, clnId: string, input: PatchOwnMngBldIn, options?: any): AxiosPromise<MbrClnObjRel>;
    postAllClnUrpInfo(authorization: string, input: PostAllClnUrpIn, options?: any): AxiosPromise<number>;
    postCln(authorization: string, input: SaveClnIn, options?: any): AxiosPromise<MbrClnMst>;
    postClnAddr(authorization: string, clnId: string, input: PostClnAddrIn, options?: any): AxiosPromise<number>;
    postClnAddrLwh(authorization: string, clnId: string, input: PostClnAddrIn, options?: any): AxiosPromise<number>;
    postClnBselPrfArea(authorization: string, clnId: string, input: PostClnBselPrfAreaIn, options?: any): AxiosPromise<number>;
    postClnEvt(authorization: string, clnId: string, input: SaveClnEvtTgtIn, options?: any): AxiosPromise<MbrEvtTgtMst>;
    postClnMngBld(authorization: string, bldId: string, clnId: string, input: SaveClnBldIn, options?: any): AxiosPromise<MbrClnObjRel>;
    postClnMngBselPrd(authorization: string, clnId: string, input: PostClnMngBselPrdIn, options?: any): AxiosPromise<MbrClnBselRel>;
    postClnMngLwh(authorization: string, bldId: string, clnId: string, input: SaveClnBldIn, options?: any): AxiosPromise<MbrClnObjRel>;
    postLmClnExclBld(authorization: string, bldId: string, clnId: string, input: SaveLmClnExclBldIn, options?: any): AxiosPromise<MbrClnObjRel>;
    postLmClnExclBldTaskPaging(authorization: string, bldId: string, clnId: string, input: SaveLmClnExclBldTaskIn, options?: any): AxiosPromise<GetLmClnExclBldTaskOut>;
    postLmClnExclLwh(authorization: string, bldId: string, clnId: string, input: SaveLmClnExclBldIn, options?: any): AxiosPromise<MbrClnObjRel>;
    saveClnCon(authorization: string, clnId: string, input: SaveClnConRelIn, options?: any): AxiosPromise<number>;
};
export declare class ClnControllerApi extends BaseAPI {
    deleteBselPrfArea(authorization: string, clnId: string, input: DeleteClnBselPrfAreaIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MbrBselBjdcdRel, any>>;
    deleteCln(authorization: string, clnId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    deleteClnCon(authorization: string, clnId: string, conId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    deleteClnCus(authorization: string, clnId: string, cusId: string, input: DeleteClnCusRelIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    deleteClnEvt(authorization: string, clnId: string, input: DeleteClnEvtTgtIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    deleteClnMngBld(authorization: string, bldId: string, clnId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    deleteClnMngBselPrd(authorization: string, clnId: string, prdBselId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    deleteClnMngLwh(authorization: string, bldId: string, clnId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    deleteClnMvinBld(authorization: string, clnId: string, input: DeleteClnMvinBldIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    deleteClnMvinLwh(authorization: string, clnId: string, input: DeleteClnMvinBldIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    deleteLmClnExclBld(authorization: string, bldId: string, clnId: string, objTypeCd?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    deleteLmClnExclBldTaskPaging(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    deleteLmClnExclLwh(authorization: string, bldId: string, clnId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    getAllClnListInDeptPaging(authorization: string, afltDeptYn?: string, afltMngPtbId?: Array<string>, allYn?: string, bjdCd?: Array<string>, bldMngPtbId?: string, brcHasYn?: string, bselBjdCd?: Array<string>, bselDeptYn?: string, bselMngPtbId?: Array<string>, clnAddr?: string, clnBselMngCfCd?: string, clnBselMngLevCd?: string, clnId?: string, clnLwhMngCfCd?: string, clnLwhMngLevCd?: string, clnMngDeptCd?: string, clnName?: string, clnRetailMngLevCdList?: Array<string>, clnTypeCd?: string, coMngLevCd?: Array<string>, coTypeCd?: string, contrTypeList?: Array<string>, corpSalTeamMngYn?: string, cusRelYn?: string, expNdsCd?: Array<string>, expectMoveDyHasYn?: string, finnTeamMngYn?: string, furDeptYn?: string, furMngPtbId?: Array<string>, furYn?: string, grpName?: string, industryLargeCd?: string, industryMiddleCdList?: Array<string>, intDeptYn?: string, intMngPtbId?: Array<string>, ksicCd?: string, lmDeptYn?: string, lmMngPtbId?: Array<string>, lmTeamMngYn?: string, lmYn?: string, lwhDeptYn?: string, lwhMngPtbId?: Array<string>, maxClnAddrChkDt?: string, maxContrEndDy?: string, maxCreateDt?: string, maxEsaPy?: number, maxExpectMoveDy?: string, maxOnlaPy?: number, maxRctCallSuccDy?: string, maxRctDlvrDy?: string, maxRctLmClnTaskDy?: string, maxRetailEsaPy?: number, maxTaskRegDy?: string, maxTipRegDy?: string, maxTotalOrdCnt?: number, maxTotalSalesAmt?: number, minClnAddrChkDt?: string, minContrEndDy?: string, minCreateDt?: string, minEsaPy?: number, minExpectMoveDy?: string, minOnlaPy?: number, minRctCallSuccDy?: string, minRctDlvrDy?: string, minRctLmClnTaskDy?: string, minRetailEsaPy?: number, minTaskRegDy?: string, minTipRegDy?: string, minTotalOrdCnt?: number, minTotalSalesAmt?: number, mktMngCd?: Array<string>, mktMngPtbId?: Array<string>, mktTeamMngYn?: string, mngBldYn?: string, mngExceptTgtCd?: string, mngExceptTgtYn?: string, mptbUserYn?: string, ongoingLeaseDealTypeList?: Array<string>, ongoingRentDealTypeList?: Array<string>, openStatCd?: string, ordInProgsYn?: string, orderBy?: string, ownMngBldLevCd?: Array<string>, ownMngBldTypeCd?: string, pageNum?: number, pageSize?: number, projYn?: string, retailDeptYn?: string, salDeptYn?: string, salYn?: string, tipYn?: string, wplcTypeCd?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetAllClnListInDeptOut, any>>;
    getClnAddrPaging(authorization: string, clnId: string, clnId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetClnAddrOut, any>>;
    getClnComInfoOne(authorization: string, clnId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetClnComInfoOut, any>>;
    getClnConList(authorization: string, clnId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetClnConOut[], any>>;
    getClnCusRelNonuHstPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetClnCusRelNonuHstOut, any>>;
    getClnCusWithCon(authorization: string, clnId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetClnCusOut, any>>;
    getClnEvtDelHstPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetClnEvtTgtDelHstOut, any>>;
    getClnEvtPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetClnEvtTgtOut, any>>;
    getClnExcelDownload(authorization: string, bjdCd?: Array<string>, clnAddr?: string, clnId?: string, clnMngDeptCd?: string, clnName?: string, clnTypeCd?: string, coMngLevCd?: Array<string>, coTypeCd?: string, cusRelYn?: string, expectMoveDyHasYn?: string, finnTeamMngYn?: string, grpName?: string, ksicCd?: string, maxClnAddrChkDt?: string, maxContrEndDy?: string, maxEsaPy?: number, maxExpectMoveDy?: string, maxOnlaPy?: number, maxRctCallSuccDy?: string, maxTaskRegDy?: string, maxTipRegDy?: string, minClnAddrChkDt?: string, minContrEndDy?: string, minEsaPy?: number, minExpectMoveDy?: string, minOnlaPy?: number, minRctCallSuccDy?: string, minTaskRegDy?: string, minTipRegDy?: string, mktMngCd?: Array<string>, mktTeamMngYn?: string, mngExceptTgtCd?: string, mngExceptTgtYn?: string, mptbUserYn?: string, ongoingLeaseDealTypeList?: Array<string>, ongoingRentDealTypeList?: Array<string>, openStatCd?: string, ordInProgsYn?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Resource, any>>;
    getClnIntProjPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetClnIntProjOut, any>>;
    getClnLeaseDealTaskPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingClnLeaseDealOut, any>>;
    getClnLwhLeaseDealTaskPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingClnLeaseDealOut, any>>;
    getClnLwhRentDealTaskPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingClnRentDealOut, any>>;
    getClnMngBldPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetClnMngBldOut, any>>;
    getClnMngBselPrdListPaging(authorization: string, clnId?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetClnMngBselPrdOut, any>>;
    getClnMngLwhPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetClnMngLwhOut, any>>;
    getClnMngOne(authorization: string, clnId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetClnMngOut, any>>;
    getClnMngTeamOne(authorization: string, clnId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetClnMngTeamOut, any>>;
    getClnOne(authorization: string, clnId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetClnOut, any>>;
    getClnOrdPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingClnOrdOut, any>>;
    getClnRentDealTaskPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingClnRentDealOut, any>>;
    getClnSalLeaseTaskPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingClnLeaseDealOut, any>>;
    getClnSalRentTaskPaging(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingClnRentDealOut, any>>;
    getDeptAfltClnListPaging(authorization: string, afltMngPtbId?: Array<string>, bjdCd?: Array<string>, bldMngPtbId?: string, clnAddr?: string, clnId?: string, clnMngDeptCd?: string, clnName?: string, expNdsCd?: Array<string>, ksicCd?: string, lmTeamMngYn?: string, maxRctCallSuccDy?: string, maxTaskRegDy?: string, maxTipRegDy?: string, minRctCallSuccDy?: string, minTaskRegDy?: string, minTipRegDy?: string, mktMngCd?: Array<string>, mngExceptTgtCd?: string, mngExceptTgtYn?: string, orderBy?: string, ownMngBldLevCd?: Array<string>, ownMngBldTypeCd?: string, pageNum?: number, pageSize?: number, projYn?: string, tipYn?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetAllClnListOut, any>>;
    getDeptBselClnListPaging(authorization: string, bjdCd?: Array<string>, bselBjdCd?: Array<string>, bselMngPtbId?: Array<string>, clnAddr?: string, clnBselMngCfCd?: string, clnBselMngLevCd?: string, clnMngDeptCd?: string, clnName?: string, clnTypeCd?: string, ksicCd?: string, mngBldYn?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetAllClnListOut, any>>;
    getDeptFurClnListPaging(authorization: string, bjdCd?: Array<string>, clnAddr?: string, clnMngDeptCd?: string, clnName?: string, furMngPtbId?: Array<string>, maxRctDlvrDy?: string, maxTipRegDy?: string, maxTotalOrdCnt?: number, maxTotalSalesAmt?: number, minRctDlvrDy?: string, minTipRegDy?: string, minTotalOrdCnt?: number, minTotalSalesAmt?: number, mktMngCd?: Array<string>, ordInProgsYn?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetAllClnListOut, any>>;
    getDeptIntClnListPaging(authorization: string, bjdCd?: Array<string>, brcHasYn?: string, clnAddr?: string, clnMngDeptCd?: string, clnName?: string, clnTypeCd?: string, coMngLevCd?: Array<string>, coTypeCd?: string, intMngPtbId?: Array<string>, maxRctCallSuccDy?: string, maxTipRegDy?: string, minRctCallSuccDy?: string, minTipRegDy?: string, mktMngCd?: Array<string>, mngExceptTgtCd?: string, mngExceptTgtYn?: string, orderBy?: string, pageNum?: number, pageSize?: number, tipYn?: string, wplcTypeCd?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetAllClnListOut, any>>;
    getDeptLmClnListPaging(authorization: string, bjdCd?: Array<string>, clnAddr?: string, clnMngDeptCd?: string, clnName?: string, lmMngPtbId?: Array<string>, maxRctLmClnTaskDy?: string, maxTipRegDy?: string, minRctLmClnTaskDy?: string, minTipRegDy?: string, mktMngCd?: Array<string>, ongoingLeaseDealTypeList?: Array<string>, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetAllClnListOut, any>>;
    getDeptLwhClnListPaging(authorization: string, bjdCd?: Array<string>, clnAddr?: string, clnLwhMngCfCd?: string, clnLwhMngLevCd?: string, clnMngDeptCd?: string, clnName?: string, clnTypeCd?: string, coMngLevCd?: Array<string>, coTypeCd?: string, ksicCd?: string, lwhMngPtbId?: Array<string>, maxRctCallSuccDy?: string, maxTipRegDy?: string, minRctCallSuccDy?: string, minTipRegDy?: string, mktMngCd?: Array<string>, mngExceptTgtCd?: string, mngExceptTgtYn?: string, openStatCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, tipYn?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetAllClnListOut, any>>;
    getDeptRetailClnListPaging(authorization: string, bjdCd?: Array<string>, brcHasYn?: string, clnAddr?: string, clnName?: string, clnRetailMngLevCdList?: Array<string>, clnTypeCd?: string, coTypeCd?: string, contrTypeList?: Array<string>, industryLargeCd?: string, industryMiddleCdList?: Array<string>, ksicCd?: string, maxOnlaPy?: number, maxRctCallSuccDy?: string, maxRetailEsaPy?: number, maxTipRegDy?: string, minOnlaPy?: number, minRctCallSuccDy?: string, minRetailEsaPy?: number, minTipRegDy?: string, ongoingLeaseDealTypeList?: Array<string>, ongoingRentDealTypeList?: Array<string>, orderBy?: string, pageNum?: number, pageSize?: number, retailTeamMngYn?: string, tipYn?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetAllClnListOut, any>>;
    getDeptSalClnListPaging(authorization: string, bjdCd?: Array<string>, brcHasYn?: string, clnAddr?: string, clnName?: string, clnTypeCd?: string, coMngLevCd?: Array<string>, coTypeCd?: string, contrTypeList?: Array<string>, corpSalTeamMngYn?: string, finnTeamMngYn?: string, ksicCd?: string, maxEsaPy?: number, maxExpectMoveDy?: string, maxOnlaPy?: number, maxRctCallSuccDy?: string, maxTipRegDy?: string, minEsaPy?: number, minExpectMoveDy?: string, minOnlaPy?: number, minRctCallSuccDy?: string, minTipRegDy?: string, mktMngCd?: Array<string>, mktMngPtbId?: Array<string>, mktTeamMngYn?: string, mngExceptTgtCd?: string, mngExceptTgtYn?: string, ongoingRentDealTypeList?: Array<string>, orderBy?: string, pageNum?: number, pageSize?: number, tipYn?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetAllClnListOut, any>>;
    getLeaseMngBldListPaging(authorization: string, clnId?: string, clnId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetLeaseMngBldListOut, any>>;
    getLeaseMngContrList(authorization: string, bldId?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetBldContrOut, any>>;
    getLmClnExclBld(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetLmClnExclBldOut, any>>;
    getLmClnExclBldLeaseDealPaging(authorization: string, bldId: string, clnId: string, bldId2?: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetLmClnExclBldLeaseDealOut, any>>;
    getLmClnExclBldTaskPaging(authorization: string, bldId: string, clnId: string, bldId2?: string, clnId2?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetLmClnExclBldTaskOut, any>>;
    getLmClnExclLwh(authorization: string, clnId: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetLmClnExclBldOut, any>>;
    getLmClnExclLwhLeaseDealPaging(authorization: string, bldId: string, clnId: string, bldId2?: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetLmClnExclBldLeaseDealOut, any>>;
    getLmClnMngBldForExclBldModal(authorization: string, clnId: string, bldId?: string, bldName?: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, roadNameAddr?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetLmClnMngBldForExclBldModalOut, any>>;
    getLmClnMngLwhForExclLwhModal(authorization: string, clnId: string, bldId?: string, bldName?: string, clnId2?: string, objTypeCd?: string, orderBy?: string, pageNum?: number, pageSize?: number, roadNameAddr?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetLmClnMngBldForExclBldModalOut, any>>;
    getMngClnListPaging(authorization: string, clnBselMngLevCd?: string, clnId?: string, clnLwhMngLevCd?: string, clnMngDeptCd?: string, clnName?: string, coMngLevCd?: string, contrYn?: string, furDlvrYn?: string, mktMngCd?: Array<string>, orderBy?: string, pageNum?: number, pageSize?: number, projContrYn?: string, servCd?: Array<string>, servOpt?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetMngClnListOut, any>>;
    getWhlClnListPaging(authorization: string, bjdCd?: Array<string>, clnAddr?: string, clnId?: string, clnMngDeptCd?: string, clnName?: string, clnTypeCd?: string, coMngLevCd?: Array<string>, coTypeCd?: string, cusRelYn?: string, expectMoveDyHasYn?: string, finnTeamMngYn?: string, grpName?: string, ksicCd?: string, maxClnAddrChkDt?: string, maxContrEndDy?: string, maxEsaPy?: number, maxExpectMoveDy?: string, maxOnlaPy?: number, maxRctCallSuccDy?: string, maxTaskRegDy?: string, maxTipRegDy?: string, minClnAddrChkDt?: string, minContrEndDy?: string, minEsaPy?: number, minExpectMoveDy?: string, minOnlaPy?: number, minRctCallSuccDy?: string, minTaskRegDy?: string, minTipRegDy?: string, mktMngCd?: Array<string>, mktTeamMngYn?: string, mngExceptTgtCd?: string, mngExceptTgtYn?: string, mptbUserYn?: string, ongoingLeaseDealTypeList?: Array<string>, ongoingRentDealTypeList?: Array<string>, openStatCd?: string, ordInProgsYn?: string, orderBy?: string, pageNum?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetAllClnListOut, any>>;
    patchAddrChkDy(authorization: string, clnId: string, input: PatchClnBldAddrIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MbrClnMst, any>>;
    patchCln(authorization: string, clnId: string, input: PatchClnIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MbrClnMst, any>>;
    patchClnBselMngInfo(authorization: string, clnId: string, input: PatchClnBselMngIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetClnMngOut, any>>;
    patchClnCon(authorization: string, clnId: string, conId: string, input: PatchClnConRelIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    patchClnCus(authorization: string, clnId: string, input: PatchClnCusRelIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MbrClnCusRel, any>>;
    patchClnEvt(authorization: string, clnId: string, input: PatchClnEvtTgtIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MbrEvtTgtMst, any>>;
    patchClnLwhMngInfo(authorization: string, clnId: string, input: PatchClnLwhMngIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetClnMngOut, any>>;
    patchClnMainAddr(authorization: string, clnId: string, input: PatchClnBldAddrIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    patchClnMng(authorization: string, clnId: string, input: PatchClnMngIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetClnMngOut, any>>;
    patchClnMngBld(authorization: string, bldId: string, clnId: string, input: PatchClnBldIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MbrClnObjRel, any>>;
    patchClnMngBselPrd(authorization: string, clnId: string, input: PostClnMngBselPrdIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MbrClnBselRel, any>>;
    patchClnMngLwh(authorization: string, bldId: string, clnId: string, input: PatchClnBldIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MbrClnObjRel, any>>;
    patchClnMngTeam(authorization: string, clnId: string, input: PatchClnMngTeamIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MbrClnMngDtl, any>>;
    patchClnMngTeamYn(authorization: string, input: PatchClnMngTeamYnIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MbrClnMngDtl, any>>;
    patchClnMvinLwhUnit(authorization: string, clnId: string, input: PostClnAddrIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    patchClnMvinUnit(authorization: string, clnId: string, input: PostClnAddrIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    patchClnRetailMngInfo(authorization: string, clnId: string, input: PatchClnRetailMngIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MbrClnMngDtl, any>>;
    patchCusEtcCtn(authorization: string, input: PatchCusEtcCtn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MbrCusMst, any>>;
    patchLmClnExclBld(authorization: string, bldId: string, clnId: string, input: PatchLmClnExclBldIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MbrClnObjRel, any>>;
    patchLmClnExclBldTaskPaging(authorization: string, taskId: string, input: PatchLmClnExclBldTaskIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetLmClnExclBldTaskOut, any>>;
    patchLmClnExclLwh(authorization: string, bldId: string, clnId: string, input: PatchLmClnExclBldIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MbrClnObjRel, any>>;
    patchOwnMngBld(authorization: string, clnId: string, input: PatchOwnMngBldIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MbrClnObjRel, any>>;
    postAllClnUrpInfo(authorization: string, input: PostAllClnUrpIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postCln(authorization: string, input: SaveClnIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MbrClnMst, any>>;
    postClnAddr(authorization: string, clnId: string, input: PostClnAddrIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postClnAddrLwh(authorization: string, clnId: string, input: PostClnAddrIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postClnBselPrfArea(authorization: string, clnId: string, input: PostClnBselPrfAreaIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postClnEvt(authorization: string, clnId: string, input: SaveClnEvtTgtIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MbrEvtTgtMst, any>>;
    postClnMngBld(authorization: string, bldId: string, clnId: string, input: SaveClnBldIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MbrClnObjRel, any>>;
    postClnMngBselPrd(authorization: string, clnId: string, input: PostClnMngBselPrdIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MbrClnBselRel, any>>;
    postClnMngLwh(authorization: string, bldId: string, clnId: string, input: SaveClnBldIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MbrClnObjRel, any>>;
    postLmClnExclBld(authorization: string, bldId: string, clnId: string, input: SaveLmClnExclBldIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MbrClnObjRel, any>>;
    postLmClnExclBldTaskPaging(authorization: string, bldId: string, clnId: string, input: SaveLmClnExclBldTaskIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetLmClnExclBldTaskOut, any>>;
    postLmClnExclLwh(authorization: string, bldId: string, clnId: string, input: SaveLmClnExclBldIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MbrClnObjRel, any>>;
    saveClnCon(authorization: string, clnId: string, input: SaveClnConRelIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
}
