import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { DeletePtfPhtIn } from '../model';
import { GetPtfMainPhtNewOut } from '../model';
import { GetPtfMainPhtOut } from '../model';
import { GetPtfProjectOneOut } from '../model';
import { PagingGetPtfProjectListPagingOut } from '../model';
import { PagingGetPtgListPagingOut } from '../model';
import { PatchPtfDtlOrderIn } from '../model';
import { PatchPtfIn } from '../model';
import { PatchPtfMainPhtIn } from '../model';
import { PatchPtfPtgNameIn } from '../model';
import { PostPtgIn } from '../model';
export declare const PtfManageControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    deletePtfMainPht: (authorization: string, ptfId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deletePtfPht: (authorization: string, input: DeletePtfPhtIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deletePtfProject: (authorization: string, ptfId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deletePtg: (authorization: string, ptgId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getPtfMainPagePhtList: (authorization: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getPtfMainPhtNewList: (authorization: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getPtfProjectListPage: (authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, ptfKorName?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getPtfProjectOne: (authorization: string, ptfId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getPtgListPage: (authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, ptgName?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchPtfDtlDown: (authorization: string, input: PatchPtfDtlOrderIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchPtfDtlUp: (authorization: string, input: PatchPtfDtlOrderIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchPtfMainPht: (authorization: string, input: PatchPtfMainPhtIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchPtfMainPhtDown: (authorization: string, ptfId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchPtfMainPhtUp: (authorization: string, ptfId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchPtfProject: (authorization: string, input: PatchPtfIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchPtfPtgRel: (authorization: string, input: PatchPtfPtgNameIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postPtfMainPagePht: (authorization: string, ptfIds: Array<string>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postPtfPhtOne: (authorization: string, phtName: string, ptfId: string, file?: any, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postPtfProject: (authorization: string, areaName?: string, complDyName?: string, createUserId?: string, expl?: string, fileList?: Array<any>, lctName?: string, mainImagePath?: string, metaKeywordVal?: string, phtNameList?: string, phtPathList?: string, projPerdName?: string, projTypeName?: string, ptfKorName?: string, ptfName?: string, redcExpl?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postPtg: (authorization: string, input: PostPtgIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
export declare const PtfManageControllerApiFp: (configuration?: Configuration) => {
    deletePtfMainPht(authorization: string, ptfId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    deletePtfPht(authorization: string, input: DeletePtfPhtIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    deletePtfProject(authorization: string, ptfId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    deletePtg(authorization: string, ptgId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    getPtfMainPagePhtList(authorization: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetPtfMainPhtOut>>>;
    getPtfMainPhtNewList(authorization: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetPtfMainPhtNewOut>>>;
    getPtfProjectListPage(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, ptfKorName?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetPtfProjectListPagingOut>>;
    getPtfProjectOne(authorization: string, ptfId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetPtfProjectOneOut>>;
    getPtgListPage(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, ptgName?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetPtgListPagingOut>>;
    patchPtfDtlDown(authorization: string, input: PatchPtfDtlOrderIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    patchPtfDtlUp(authorization: string, input: PatchPtfDtlOrderIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    patchPtfMainPht(authorization: string, input: PatchPtfMainPhtIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    patchPtfMainPhtDown(authorization: string, ptfId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    patchPtfMainPhtUp(authorization: string, ptfId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    patchPtfProject(authorization: string, input: PatchPtfIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    patchPtfPtgRel(authorization: string, input: PatchPtfPtgNameIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    postPtfMainPagePht(authorization: string, ptfIds: Array<string>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    postPtfPhtOne(authorization: string, phtName: string, ptfId: string, file?: any, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    postPtfProject(authorization: string, areaName?: string, complDyName?: string, createUserId?: string, expl?: string, fileList?: Array<any>, lctName?: string, mainImagePath?: string, metaKeywordVal?: string, phtNameList?: string, phtPathList?: string, projPerdName?: string, projTypeName?: string, ptfKorName?: string, ptfName?: string, redcExpl?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    postPtg(authorization: string, input: PostPtgIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
export declare const PtfManageControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    deletePtfMainPht(authorization: string, ptfId?: string, options?: any): AxiosPromise<void>;
    deletePtfPht(authorization: string, input: DeletePtfPhtIn, options?: any): AxiosPromise<void>;
    deletePtfProject(authorization: string, ptfId?: string, options?: any): AxiosPromise<void>;
    deletePtg(authorization: string, ptgId?: string, options?: any): AxiosPromise<void>;
    getPtfMainPagePhtList(authorization: string, options?: any): AxiosPromise<Array<GetPtfMainPhtOut>>;
    getPtfMainPhtNewList(authorization: string, options?: any): AxiosPromise<Array<GetPtfMainPhtNewOut>>;
    getPtfProjectListPage(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, ptfKorName?: string, options?: any): AxiosPromise<PagingGetPtfProjectListPagingOut>;
    getPtfProjectOne(authorization: string, ptfId?: string, options?: any): AxiosPromise<GetPtfProjectOneOut>;
    getPtgListPage(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, ptgName?: string, options?: any): AxiosPromise<PagingGetPtgListPagingOut>;
    patchPtfDtlDown(authorization: string, input: PatchPtfDtlOrderIn, options?: any): AxiosPromise<void>;
    patchPtfDtlUp(authorization: string, input: PatchPtfDtlOrderIn, options?: any): AxiosPromise<void>;
    patchPtfMainPht(authorization: string, input: PatchPtfMainPhtIn, options?: any): AxiosPromise<void>;
    patchPtfMainPhtDown(authorization: string, ptfId: string, options?: any): AxiosPromise<void>;
    patchPtfMainPhtUp(authorization: string, ptfId: string, options?: any): AxiosPromise<void>;
    patchPtfProject(authorization: string, input: PatchPtfIn, options?: any): AxiosPromise<void>;
    patchPtfPtgRel(authorization: string, input: PatchPtfPtgNameIn, options?: any): AxiosPromise<void>;
    postPtfMainPagePht(authorization: string, ptfIds: Array<string>, options?: any): AxiosPromise<void>;
    postPtfPhtOne(authorization: string, phtName: string, ptfId: string, file?: any, options?: any): AxiosPromise<void>;
    postPtfProject(authorization: string, areaName?: string, complDyName?: string, createUserId?: string, expl?: string, fileList?: Array<any>, lctName?: string, mainImagePath?: string, metaKeywordVal?: string, phtNameList?: string, phtPathList?: string, projPerdName?: string, projTypeName?: string, ptfKorName?: string, ptfName?: string, redcExpl?: string, options?: any): AxiosPromise<void>;
    postPtg(authorization: string, input: PostPtgIn, options?: any): AxiosPromise<void>;
};
export declare class PtfManageControllerApi extends BaseAPI {
    deletePtfMainPht(authorization: string, ptfId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    deletePtfPht(authorization: string, input: DeletePtfPhtIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    deletePtfProject(authorization: string, ptfId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    deletePtg(authorization: string, ptgId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    getPtfMainPagePhtList(authorization: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetPtfMainPhtOut[], any>>;
    getPtfMainPhtNewList(authorization: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetPtfMainPhtNewOut[], any>>;
    getPtfProjectListPage(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, ptfKorName?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetPtfProjectListPagingOut, any>>;
    getPtfProjectOne(authorization: string, ptfId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetPtfProjectOneOut, any>>;
    getPtgListPage(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, ptgName?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetPtgListPagingOut, any>>;
    patchPtfDtlDown(authorization: string, input: PatchPtfDtlOrderIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    patchPtfDtlUp(authorization: string, input: PatchPtfDtlOrderIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    patchPtfMainPht(authorization: string, input: PatchPtfMainPhtIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    patchPtfMainPhtDown(authorization: string, ptfId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    patchPtfMainPhtUp(authorization: string, ptfId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    patchPtfProject(authorization: string, input: PatchPtfIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    patchPtfPtgRel(authorization: string, input: PatchPtfPtgNameIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    postPtfMainPagePht(authorization: string, ptfIds: Array<string>, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    postPtfPhtOne(authorization: string, phtName: string, ptfId: string, file?: any, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    postPtfProject(authorization: string, areaName?: string, complDyName?: string, createUserId?: string, expl?: string, fileList?: Array<any>, lctName?: string, mainImagePath?: string, metaKeywordVal?: string, phtNameList?: string, phtPathList?: string, projPerdName?: string, projTypeName?: string, ptfKorName?: string, ptfName?: string, redcExpl?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    postPtg(authorization: string, input: PostPtgIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
}
