import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { GetLeaseClnCusOut } from '../model';
import { GetLeaseClnExclBldOut } from '../model';
import { GetLeaseDetailOut } from '../model';
import { GetLeaseRealtorClnCusOut } from '../model';
import { GtdTaskMst } from '../model';
import { PagingGetContrListOut } from '../model';
import { PagingGetLeaseListOut } from '../model';
import { PagingGetLeaseWorkHstOut } from '../model';
import { PatchLeaseIn } from '../model';
import { PatchLeaseWorkHstIn } from '../model';
import { PostLeaseClnIn } from '../model';
import { PostLeaseCusIn } from '../model';
import { PostLeaseIn } from '../model';
import { PostLeaseWorkHstIn } from '../model';
export declare const LeaseControllerApiAxiosParamCreator: (configuration?: Configuration) => {
    deleteLease: (authorization: string, taskId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteLeaseCln: (authorization: string, clnId?: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteLeaseCus: (authorization: string, clnId?: string, cusId?: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteLeaseRealtorCln: (authorization: string, clnId?: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteLeaseRealtorCus: (authorization: string, clnId?: string, cusId?: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    deleteLeaseWorkHst: (authorization: string, taskId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLeaseClnCus: (authorization: string, taskId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLeaseClnExclBld: (authorization: string, clnId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLeaseClnName: (authorization: string, clnId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLeaseContrList: (authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLeaseDetail: (authorization: string, taskId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLeasePaging: (authorization: string, clnId?: string, clnName?: string, contrYn?: string, ldealStatCd?: Array<string>, lmUserId?: string, maxLDealCmplDy?: string, maxLDealRegDy?: string, maxTipRegDy?: string, minLDealCmplDy?: string, minLDealRegDy?: string, minTipRegDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, ptb?: Array<string>, statCd?: Array<string>, taskName?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLeaseRealtorClnCus: (authorization: string, taskId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getLeaseWorkHst: (authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    getMyLeasePaging: (authorization: string, clnId?: string, clnName?: string, contrYn?: string, ldealStatCd?: Array<string>, lmUserId?: string, maxLDealCmplDy?: string, maxLDealRegDy?: string, maxTipRegDy?: string, minLDealCmplDy?: string, minLDealRegDy?: string, minTipRegDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, ptb?: Array<string>, statCd?: Array<string>, taskName?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchLease: (authorization: string, taskId: string, input: PatchLeaseIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchLeaseCusRel: (authorization: string, clnId?: string, cusId?: string, cusRelCd?: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchLeaseRealtorCusRel: (authorization: string, clnId?: string, cusId?: string, cusRelCd?: string, taskId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    patchLeaseWorkHst: (authorization: string, chdTaskId: string, taskId: string, input: PatchLeaseWorkHstIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postLease: (authorization: string, input: PostLeaseIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postLeaseCln: (authorization: string, taskId: string, input: PostLeaseClnIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postLeaseCus: (authorization: string, clnId: string, taskId: string, input: PostLeaseCusIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postLeaseRealtorCln: (authorization: string, taskId: string, input: PostLeaseClnIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postLeaseRealtorCus: (authorization: string, clnId: string, taskId: string, input: PostLeaseCusIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    postLeaseWorkHst: (authorization: string, taskId: string, input: PostLeaseWorkHstIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
export declare const LeaseControllerApiFp: (configuration?: Configuration) => {
    deleteLease(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    deleteLeaseCln(authorization: string, clnId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    deleteLeaseCus(authorization: string, clnId?: string, cusId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    deleteLeaseRealtorCln(authorization: string, clnId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    deleteLeaseRealtorCus(authorization: string, clnId?: string, cusId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    deleteLeaseWorkHst(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    getLeaseClnCus(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLeaseClnCusOut>>;
    getLeaseClnExclBld(authorization: string, clnId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<GetLeaseClnExclBldOut>>>;
    getLeaseClnName(authorization: string, clnId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    getLeaseContrList(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetContrListOut>>;
    getLeaseDetail(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLeaseDetailOut>>;
    getLeasePaging(authorization: string, clnId?: string, clnName?: string, contrYn?: string, ldealStatCd?: Array<string>, lmUserId?: string, maxLDealCmplDy?: string, maxLDealRegDy?: string, maxTipRegDy?: string, minLDealCmplDy?: string, minLDealRegDy?: string, minTipRegDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, ptb?: Array<string>, statCd?: Array<string>, taskName?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetLeaseListOut>>;
    getLeaseRealtorClnCus(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetLeaseRealtorClnCusOut>>;
    getLeaseWorkHst(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetLeaseWorkHstOut>>;
    getMyLeasePaging(authorization: string, clnId?: string, clnName?: string, contrYn?: string, ldealStatCd?: Array<string>, lmUserId?: string, maxLDealCmplDy?: string, maxLDealRegDy?: string, maxTipRegDy?: string, minLDealCmplDy?: string, minLDealRegDy?: string, minTipRegDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, ptb?: Array<string>, statCd?: Array<string>, taskName?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PagingGetLeaseListOut>>;
    patchLease(authorization: string, taskId: string, input: PatchLeaseIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    patchLeaseCusRel(authorization: string, clnId?: string, cusId?: string, cusRelCd?: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    patchLeaseRealtorCusRel(authorization: string, clnId?: string, cusId?: string, cusRelCd?: string, taskId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    patchLeaseWorkHst(authorization: string, chdTaskId: string, taskId: string, input: PatchLeaseWorkHstIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postLease(authorization: string, input: PostLeaseIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GtdTaskMst>>;
    postLeaseCln(authorization: string, taskId: string, input: PostLeaseClnIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postLeaseCus(authorization: string, clnId: string, taskId: string, input: PostLeaseCusIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postLeaseRealtorCln(authorization: string, taskId: string, input: PostLeaseClnIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postLeaseRealtorCus(authorization: string, clnId: string, taskId: string, input: PostLeaseCusIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    postLeaseWorkHst(authorization: string, taskId: string, input: PostLeaseWorkHstIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
};
export declare const LeaseControllerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    deleteLease(authorization: string, taskId: string, options?: any): AxiosPromise<number>;
    deleteLeaseCln(authorization: string, clnId?: string, taskId?: string, options?: any): AxiosPromise<number>;
    deleteLeaseCus(authorization: string, clnId?: string, cusId?: string, taskId?: string, options?: any): AxiosPromise<number>;
    deleteLeaseRealtorCln(authorization: string, clnId?: string, taskId?: string, options?: any): AxiosPromise<number>;
    deleteLeaseRealtorCus(authorization: string, clnId?: string, cusId?: string, taskId?: string, options?: any): AxiosPromise<number>;
    deleteLeaseWorkHst(authorization: string, taskId: string, options?: any): AxiosPromise<number>;
    getLeaseClnCus(authorization: string, taskId: string, options?: any): AxiosPromise<GetLeaseClnCusOut>;
    getLeaseClnExclBld(authorization: string, clnId?: string, options?: any): AxiosPromise<Array<GetLeaseClnExclBldOut>>;
    getLeaseClnName(authorization: string, clnId: string, options?: any): AxiosPromise<string>;
    getLeaseContrList(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: any): AxiosPromise<PagingGetContrListOut>;
    getLeaseDetail(authorization: string, taskId: string, options?: any): AxiosPromise<GetLeaseDetailOut>;
    getLeasePaging(authorization: string, clnId?: string, clnName?: string, contrYn?: string, ldealStatCd?: Array<string>, lmUserId?: string, maxLDealCmplDy?: string, maxLDealRegDy?: string, maxTipRegDy?: string, minLDealCmplDy?: string, minLDealRegDy?: string, minTipRegDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, ptb?: Array<string>, statCd?: Array<string>, taskName?: string, options?: any): AxiosPromise<PagingGetLeaseListOut>;
    getLeaseRealtorClnCus(authorization: string, taskId: string, options?: any): AxiosPromise<GetLeaseRealtorClnCusOut>;
    getLeaseWorkHst(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: any): AxiosPromise<PagingGetLeaseWorkHstOut>;
    getMyLeasePaging(authorization: string, clnId?: string, clnName?: string, contrYn?: string, ldealStatCd?: Array<string>, lmUserId?: string, maxLDealCmplDy?: string, maxLDealRegDy?: string, maxTipRegDy?: string, minLDealCmplDy?: string, minLDealRegDy?: string, minTipRegDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, ptb?: Array<string>, statCd?: Array<string>, taskName?: string, options?: any): AxiosPromise<PagingGetLeaseListOut>;
    patchLease(authorization: string, taskId: string, input: PatchLeaseIn, options?: any): AxiosPromise<number>;
    patchLeaseCusRel(authorization: string, clnId?: string, cusId?: string, cusRelCd?: string, taskId?: string, options?: any): AxiosPromise<number>;
    patchLeaseRealtorCusRel(authorization: string, clnId?: string, cusId?: string, cusRelCd?: string, taskId?: string, options?: any): AxiosPromise<number>;
    patchLeaseWorkHst(authorization: string, chdTaskId: string, taskId: string, input: PatchLeaseWorkHstIn, options?: any): AxiosPromise<number>;
    postLease(authorization: string, input: PostLeaseIn, options?: any): AxiosPromise<GtdTaskMst>;
    postLeaseCln(authorization: string, taskId: string, input: PostLeaseClnIn, options?: any): AxiosPromise<number>;
    postLeaseCus(authorization: string, clnId: string, taskId: string, input: PostLeaseCusIn, options?: any): AxiosPromise<number>;
    postLeaseRealtorCln(authorization: string, taskId: string, input: PostLeaseClnIn, options?: any): AxiosPromise<number>;
    postLeaseRealtorCus(authorization: string, clnId: string, taskId: string, input: PostLeaseCusIn, options?: any): AxiosPromise<number>;
    postLeaseWorkHst(authorization: string, taskId: string, input: PostLeaseWorkHstIn, options?: any): AxiosPromise<number>;
};
export declare class LeaseControllerApi extends BaseAPI {
    deleteLease(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    deleteLeaseCln(authorization: string, clnId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    deleteLeaseCus(authorization: string, clnId?: string, cusId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    deleteLeaseRealtorCln(authorization: string, clnId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    deleteLeaseRealtorCus(authorization: string, clnId?: string, cusId?: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    deleteLeaseWorkHst(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    getLeaseClnCus(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetLeaseClnCusOut, any>>;
    getLeaseClnExclBld(authorization: string, clnId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetLeaseClnExclBldOut[], any>>;
    getLeaseClnName(authorization: string, clnId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    getLeaseContrList(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetContrListOut, any>>;
    getLeaseDetail(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetLeaseDetailOut, any>>;
    getLeasePaging(authorization: string, clnId?: string, clnName?: string, contrYn?: string, ldealStatCd?: Array<string>, lmUserId?: string, maxLDealCmplDy?: string, maxLDealRegDy?: string, maxTipRegDy?: string, minLDealCmplDy?: string, minLDealRegDy?: string, minTipRegDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, ptb?: Array<string>, statCd?: Array<string>, taskName?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetLeaseListOut, any>>;
    getLeaseRealtorClnCus(authorization: string, taskId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetLeaseRealtorClnCusOut, any>>;
    getLeaseWorkHst(authorization: string, orderBy?: string, pageNum?: number, pageSize?: number, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetLeaseWorkHstOut, any>>;
    getMyLeasePaging(authorization: string, clnId?: string, clnName?: string, contrYn?: string, ldealStatCd?: Array<string>, lmUserId?: string, maxLDealCmplDy?: string, maxLDealRegDy?: string, maxTipRegDy?: string, minLDealCmplDy?: string, minLDealRegDy?: string, minTipRegDy?: string, orderBy?: string, pageNum?: number, pageSize?: number, ptb?: Array<string>, statCd?: Array<string>, taskName?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PagingGetLeaseListOut, any>>;
    patchLease(authorization: string, taskId: string, input: PatchLeaseIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    patchLeaseCusRel(authorization: string, clnId?: string, cusId?: string, cusRelCd?: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    patchLeaseRealtorCusRel(authorization: string, clnId?: string, cusId?: string, cusRelCd?: string, taskId?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    patchLeaseWorkHst(authorization: string, chdTaskId: string, taskId: string, input: PatchLeaseWorkHstIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postLease(authorization: string, input: PostLeaseIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GtdTaskMst, any>>;
    postLeaseCln(authorization: string, taskId: string, input: PostLeaseClnIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postLeaseCus(authorization: string, clnId: string, taskId: string, input: PostLeaseCusIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postLeaseRealtorCln(authorization: string, taskId: string, input: PostLeaseClnIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postLeaseRealtorCus(authorization: string, clnId: string, taskId: string, input: PostLeaseCusIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    postLeaseWorkHst(authorization: string, taskId: string, input: PostLeaseWorkHstIn, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
}
